

================================================================
== Vitis HLS Report for 'ReadFromMem_Pipeline_VITIS_LOOP_168_11_VITIS_LOOP_177_13'
================================================================
* Date:           Wed Nov  2 22:59:09 2022

* Version:        2021.1 (Build 3247384 on Thu Jun 10 19:36:07 MDT 2021)
* Project:        fc_layer
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.729 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                       |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |               Loop Name               |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_168_11_VITIS_LOOP_177_13  |        ?|        ?|         1|          1|          1|     ?|       yes|
        +---------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.46>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%j_2 = alloca i32 1"   --->   Operation 4 'alloca' 'j_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%i_5 = alloca i32 1"   --->   Operation 5 'alloca' 'i_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%indvar_flatten7 = alloca i32 1"   --->   Operation 6 'alloca' 'indvar_flatten7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i32 %iact_buffer, i64 666, i64 30, i64 1"   --->   Operation 7 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%trunc_ln3_read = read i11 @_ssdm_op_Read.ap_auto.i11, i11 %trunc_ln3"   --->   Operation 8 'read' 'trunc_ln3_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%payload254_04_read = read i768 @_ssdm_op_Read.ap_auto.i768, i768 %payload254_04"   --->   Operation 9 'read' 'payload254_04_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%add_ln168_1_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %add_ln168_1"   --->   Operation 10 'read' 'add_ln168_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%mul_ln166_1_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %mul_ln166_1"   --->   Operation 11 'read' 'mul_ln166_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.46ns)   --->   "%store_ln0 = store i64 0, i64 %indvar_flatten7"   --->   Operation 12 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 13 [1/1] (0.46ns)   --->   "%store_ln0 = store i32 0, i32 %i_5"   --->   Operation 13 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 14 [1/1] (0.46ns)   --->   "%store_ln0 = store i32 0, i32 %j_2"   --->   Operation 14 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 15 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 4.72>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%i = load i32 %i_5" [FC_Layer.cpp:176]   --->   Operation 16 'load' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%indvar_flatten7_load = load i64 %indvar_flatten7" [FC_Layer.cpp:168]   --->   Operation 17 'load' 'indvar_flatten7_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%trunc_ln176 = trunc i32 %i" [FC_Layer.cpp:176]   --->   Operation 18 'trunc' 'trunc_ln176' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%shl_ln6 = bitconcatenate i11 @_ssdm_op_BitConcatenate.i11.i6.i5, i6 %trunc_ln176, i5 0" [FC_Layer.cpp:176]   --->   Operation 19 'bitconcatenate' 'shl_ln6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%trunc_ln176_1 = trunc i32 %i" [FC_Layer.cpp:176]   --->   Operation 20 'trunc' 'trunc_ln176_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%shl_ln176_1 = bitconcatenate i11 @_ssdm_op_BitConcatenate.i11.i8.i3, i8 %trunc_ln176_1, i3 0" [FC_Layer.cpp:176]   --->   Operation 21 'bitconcatenate' 'shl_ln176_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.96ns)   --->   "%sub_ln176 = sub i11 %shl_ln6, i11 %shl_ln176_1" [FC_Layer.cpp:176]   --->   Operation 22 'sub' 'sub_ln176' <Predicate = true> <Delay = 0.96> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 23 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (1.14ns)   --->   "%icmp_ln168 = icmp_eq  i64 %indvar_flatten7_load, i64 %mul_ln166_1_read" [FC_Layer.cpp:168]   --->   Operation 24 'icmp' 'icmp_ln168' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (1.36ns)   --->   "%add_ln168 = add i64 %indvar_flatten7_load, i64 1" [FC_Layer.cpp:168]   --->   Operation 25 'add' 'add_ln168' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln168 = br i1 %icmp_ln168, void %._crit_edge29.loopexit, void %._crit_edge34.loopexit.exitStub" [FC_Layer.cpp:168]   --->   Operation 26 'br' 'br_ln168' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%j_2_load = load i32 %j_2" [FC_Layer.cpp:177]   --->   Operation 27 'load' 'j_2_load' <Predicate = (!icmp_ln168)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (1.14ns)   --->   "%add_ln168_2 = add i32 %i, i32 1" [FC_Layer.cpp:168]   --->   Operation 28 'add' 'add_ln168_2' <Predicate = (!icmp_ln168)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_168_11_VITIS_LOOP_177_13_str"   --->   Operation 29 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln168)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.80ns)   --->   "%icmp_ln177 = icmp_eq  i32 %j_2_load, i32 %add_ln168_1_read" [FC_Layer.cpp:177]   --->   Operation 30 'icmp' 'icmp_ln177' <Predicate = (!icmp_ln168)> <Delay = 0.80> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.28ns)   --->   "%select_ln168 = select i1 %icmp_ln177, i32 0, i32 %j_2_load" [FC_Layer.cpp:168]   --->   Operation 31 'select' 'select_ln168' <Predicate = (!icmp_ln168)> <Delay = 0.28> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%trunc_ln176_2 = trunc i32 %add_ln168_2" [FC_Layer.cpp:176]   --->   Operation 32 'trunc' 'trunc_ln176_2' <Predicate = (!icmp_ln168)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%shl_ln176_mid1 = bitconcatenate i11 @_ssdm_op_BitConcatenate.i11.i6.i5, i6 %trunc_ln176_2, i5 0" [FC_Layer.cpp:176]   --->   Operation 33 'bitconcatenate' 'shl_ln176_mid1' <Predicate = (!icmp_ln168)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%trunc_ln176_3 = trunc i32 %add_ln168_2" [FC_Layer.cpp:176]   --->   Operation 34 'trunc' 'trunc_ln176_3' <Predicate = (!icmp_ln168)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%shl_ln176_1_mid1 = bitconcatenate i11 @_ssdm_op_BitConcatenate.i11.i8.i3, i8 %trunc_ln176_3, i3 0" [FC_Layer.cpp:176]   --->   Operation 35 'bitconcatenate' 'shl_ln176_1_mid1' <Predicate = (!icmp_ln168)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.96ns)   --->   "%sub_ln176_1 = sub i11 %shl_ln176_mid1, i11 %shl_ln176_1_mid1" [FC_Layer.cpp:176]   --->   Operation 36 'sub' 'sub_ln176_1' <Predicate = (!icmp_ln168)> <Delay = 0.96> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.37ns)   --->   "%select_ln168_1 = select i1 %icmp_ln177, i11 %sub_ln176_1, i11 %sub_ln176" [FC_Layer.cpp:168]   --->   Operation 37 'select' 'select_ln168_1' <Predicate = (!icmp_ln168)> <Delay = 0.37> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 38 'specpipeline' 'specpipeline_ln0' <Predicate = (!icmp_ln168)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.28ns)   --->   "%select_ln168_2 = select i1 %icmp_ln177, i32 %add_ln168_2, i32 %i" [FC_Layer.cpp:168]   --->   Operation 39 'select' 'select_ln168_2' <Predicate = (!icmp_ln168)> <Delay = 0.28> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%empty = trunc i32 %select_ln168" [FC_Layer.cpp:168]   --->   Operation 40 'trunc' 'empty' <Predicate = (!icmp_ln168)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%specloopname_ln177 = specloopname void @_ssdm_op_SpecLoopName, void @empty_0" [FC_Layer.cpp:177]   --->   Operation 41 'specloopname' 'specloopname_ln177' <Predicate = (!icmp_ln168)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%trunc_ln674 = trunc i32 %select_ln168"   --->   Operation 42 'trunc' 'trunc_ln674' <Predicate = (!icmp_ln168)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i5.i5, i5 %trunc_ln674, i5 0"   --->   Operation 43 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln168)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln674 = zext i10 %tmp"   --->   Operation 44 'zext' 'zext_ln674' <Predicate = (!icmp_ln168)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (1.72ns)   --->   "%lshr_ln674 = lshr i768 %payload254_04_read, i768 %zext_ln674"   --->   Operation 45 'lshr' 'lshr_ln674' <Predicate = (!icmp_ln168)> <Delay = 1.72> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.72> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%trunc_ln674_2 = trunc i768 %lshr_ln674"   --->   Operation 46 'trunc' 'trunc_ln674_2' <Predicate = (!icmp_ln168)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln178_1 = add i11 %trunc_ln3_read, i11 %empty" [FC_Layer.cpp:178]   --->   Operation 47 'add' 'add_ln178_1' <Predicate = (!icmp_ln168)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.47> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 48 [1/1] (0.95ns) (root node of TernaryAdder)   --->   "%add_ln178 = add i11 %add_ln178_1, i11 %select_ln168_1" [FC_Layer.cpp:178]   --->   Operation 48 'add' 'add_ln178' <Predicate = (!icmp_ln168)> <Delay = 0.95> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.47> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln178 = zext i11 %add_ln178" [FC_Layer.cpp:178]   --->   Operation 49 'zext' 'zext_ln178' <Predicate = (!icmp_ln168)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%iact_buffer_addr = getelementptr i32 %iact_buffer, i64 0, i64 %zext_ln178" [FC_Layer.cpp:178]   --->   Operation 50 'getelementptr' 'iact_buffer_addr' <Predicate = (!icmp_ln168)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (1.29ns)   --->   "%store_ln178 = store i32 %trunc_ln674_2, i11 %iact_buffer_addr" [FC_Layer.cpp:178]   --->   Operation 51 'store' 'store_ln178' <Predicate = (!icmp_ln168)> <Delay = 1.29> <CoreInst = "RAM_T2P_BRAM">   --->   Core 99 'RAM_T2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 2048> <RAM>
ST_2 : Operation 52 [1/1] (1.14ns)   --->   "%add_ln177 = add i32 %select_ln168, i32 1" [FC_Layer.cpp:177]   --->   Operation 52 'add' 'add_ln177' <Predicate = (!icmp_ln168)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.46ns)   --->   "%store_ln168 = store i64 %add_ln168, i64 %indvar_flatten7" [FC_Layer.cpp:168]   --->   Operation 53 'store' 'store_ln168' <Predicate = (!icmp_ln168)> <Delay = 0.46>
ST_2 : Operation 54 [1/1] (0.46ns)   --->   "%store_ln168 = store i32 %select_ln168_2, i32 %i_5" [FC_Layer.cpp:168]   --->   Operation 54 'store' 'store_ln168' <Predicate = (!icmp_ln168)> <Delay = 0.46>
ST_2 : Operation 55 [1/1] (0.46ns)   --->   "%store_ln177 = store i32 %add_ln177, i32 %j_2" [FC_Layer.cpp:177]   --->   Operation 55 'store' 'store_ln177' <Predicate = (!icmp_ln168)> <Delay = 0.46>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 56 'br' 'br_ln0' <Predicate = (!icmp_ln168)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 57 'ret' 'ret_ln0' <Predicate = (icmp_ln168)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.46ns
The critical path consists of the following:
	'alloca' operation ('indvar_flatten7') [8]  (0 ns)
	'store' operation ('store_ln0') of constant 0 on local variable 'indvar_flatten7' [14]  (0.46 ns)

 <State 2>: 4.73ns
The critical path consists of the following:
	'load' operation ('i', FC_Layer.cpp:176) on local variable 'i' [19]  (0 ns)
	'add' operation ('add_ln168_2', FC_Layer.cpp:168) [32]  (1.14 ns)
	'sub' operation ('sub_ln176_1', FC_Layer.cpp:176) [40]  (0.965 ns)
	'select' operation ('select_ln168_1', FC_Layer.cpp:168) [41]  (0.371 ns)
	'add' operation ('add_ln178', FC_Layer.cpp:178) [52]  (0.954 ns)
	'getelementptr' operation ('iact_buffer_addr', FC_Layer.cpp:178) [54]  (0 ns)
	'store' operation ('store_ln178', FC_Layer.cpp:178) of variable 'trunc_ln674_2' on array 'iact_buffer' [55]  (1.3 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
