-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity LINEAR_OutputBuffer is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_ifc1_AWVALID : OUT STD_LOGIC;
    m_axi_ifc1_AWREADY : IN STD_LOGIC;
    m_axi_ifc1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_ifc1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ifc1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_ifc1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ifc1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ifc1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ifc1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ifc1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ifc1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ifc1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ifc1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ifc1_WVALID : OUT STD_LOGIC;
    m_axi_ifc1_WREADY : IN STD_LOGIC;
    m_axi_ifc1_WDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    m_axi_ifc1_WSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
    m_axi_ifc1_WLAST : OUT STD_LOGIC;
    m_axi_ifc1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ifc1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ifc1_ARVALID : OUT STD_LOGIC;
    m_axi_ifc1_ARREADY : IN STD_LOGIC;
    m_axi_ifc1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_ifc1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ifc1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_ifc1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ifc1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ifc1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ifc1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ifc1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ifc1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ifc1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ifc1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ifc1_RVALID : IN STD_LOGIC;
    m_axi_ifc1_RREADY : OUT STD_LOGIC;
    m_axi_ifc1_RDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    m_axi_ifc1_RLAST : IN STD_LOGIC;
    m_axi_ifc1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ifc1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ifc1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ifc1_BVALID : IN STD_LOGIC;
    m_axi_ifc1_BREADY : OUT STD_LOGIC;
    m_axi_ifc1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ifc1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ifc1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read : IN STD_LOGIC_VECTOR (63 downto 0);
    X_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    X_empty_n : IN STD_LOGIC;
    X_read : OUT STD_LOGIC;
    Wt_Y_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    Wt_Y_empty_n : IN STD_LOGIC;
    Wt_Y_read : OUT STD_LOGIC;
    output_buf_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buf_ce0 : OUT STD_LOGIC;
    output_buf_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buf_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buf_ce1 : OUT STD_LOGIC;
    output_buf_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of LINEAR_OutputBuffer is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ifc1_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln329_reg_213 : STD_LOGIC_VECTOR (0 downto 0);
    signal ifc1_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal X_blk_n : STD_LOGIC;
    signal Wt_Y_blk_n : STD_LOGIC;
    signal tmp_reg_198 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_lshr_cast_cast_reg_203 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_lshr_f_cast_cast_reg_208 : STD_LOGIC_VECTOR (29 downto 0);
    signal icmp_ln329_fu_145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal div_fu_163_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal div_reg_217 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal trunc_ln329_fu_174_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln329_reg_223 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln_fu_177_p4 : STD_LOGIC_VECTOR (59 downto 0);
    signal trunc_ln_reg_228 : STD_LOGIC_VECTOR (59 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_start : STD_LOGIC;
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_done : STD_LOGIC;
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_idle : STD_LOGIC;
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_ready : STD_LOGIC;
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWVALID : STD_LOGIC;
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WVALID : STD_LOGIC;
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WSTRB : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WLAST : STD_LOGIC;
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARVALID : STD_LOGIC;
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_RREADY : STD_LOGIC;
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_BREADY : STD_LOGIC;
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_ce0 : STD_LOGIC;
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_ce1 : STD_LOGIC;
    signal grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal sext_ln329_fu_187_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state3_io : BOOLEAN;
    signal sext_ln329_1_fu_170_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state10 : BOOLEAN;
    signal ap_block_state1 : BOOLEAN;
    signal mul1_fu_95_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_fu_109_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_fu_135_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_lshr_cast_cast_cast_fu_151_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_neg_t_fu_154_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_lshr_f_cast_cast_cast_fu_160_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component LINEAR_OutputBuffer_Pipeline_VITIS_LOOP_329_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_ifc1_AWVALID : OUT STD_LOGIC;
        m_axi_ifc1_AWREADY : IN STD_LOGIC;
        m_axi_ifc1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_ifc1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ifc1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ifc1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ifc1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ifc1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ifc1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ifc1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ifc1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ifc1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ifc1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ifc1_WVALID : OUT STD_LOGIC;
        m_axi_ifc1_WREADY : IN STD_LOGIC;
        m_axi_ifc1_WDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        m_axi_ifc1_WSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_ifc1_WLAST : OUT STD_LOGIC;
        m_axi_ifc1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ifc1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ifc1_ARVALID : OUT STD_LOGIC;
        m_axi_ifc1_ARREADY : IN STD_LOGIC;
        m_axi_ifc1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_ifc1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ifc1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ifc1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ifc1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ifc1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ifc1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ifc1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ifc1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ifc1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ifc1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ifc1_RVALID : IN STD_LOGIC;
        m_axi_ifc1_RREADY : OUT STD_LOGIC;
        m_axi_ifc1_RDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        m_axi_ifc1_RLAST : IN STD_LOGIC;
        m_axi_ifc1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ifc1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ifc1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ifc1_BVALID : IN STD_LOGIC;
        m_axi_ifc1_BREADY : OUT STD_LOGIC;
        m_axi_ifc1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ifc1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ifc1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln329 : IN STD_LOGIC_VECTOR (59 downto 0);
        trunc_ln329_1 : IN STD_LOGIC_VECTOR (28 downto 0);
        output_buf_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buf_ce0 : OUT STD_LOGIC;
        output_buf_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buf_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buf_ce1 : OUT STD_LOGIC;
        output_buf_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LINEAR_mul_32s_32s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85 : component LINEAR_OutputBuffer_Pipeline_VITIS_LOOP_329_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_start,
        ap_done => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_done,
        ap_idle => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_idle,
        ap_ready => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_ready,
        m_axi_ifc1_AWVALID => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWVALID,
        m_axi_ifc1_AWREADY => m_axi_ifc1_AWREADY,
        m_axi_ifc1_AWADDR => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWADDR,
        m_axi_ifc1_AWID => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWID,
        m_axi_ifc1_AWLEN => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWLEN,
        m_axi_ifc1_AWSIZE => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWSIZE,
        m_axi_ifc1_AWBURST => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWBURST,
        m_axi_ifc1_AWLOCK => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWLOCK,
        m_axi_ifc1_AWCACHE => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWCACHE,
        m_axi_ifc1_AWPROT => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWPROT,
        m_axi_ifc1_AWQOS => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWQOS,
        m_axi_ifc1_AWREGION => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWREGION,
        m_axi_ifc1_AWUSER => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWUSER,
        m_axi_ifc1_WVALID => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WVALID,
        m_axi_ifc1_WREADY => m_axi_ifc1_WREADY,
        m_axi_ifc1_WDATA => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WDATA,
        m_axi_ifc1_WSTRB => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WSTRB,
        m_axi_ifc1_WLAST => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WLAST,
        m_axi_ifc1_WID => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WID,
        m_axi_ifc1_WUSER => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WUSER,
        m_axi_ifc1_ARVALID => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARVALID,
        m_axi_ifc1_ARREADY => ap_const_logic_0,
        m_axi_ifc1_ARADDR => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARADDR,
        m_axi_ifc1_ARID => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARID,
        m_axi_ifc1_ARLEN => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARLEN,
        m_axi_ifc1_ARSIZE => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARSIZE,
        m_axi_ifc1_ARBURST => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARBURST,
        m_axi_ifc1_ARLOCK => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARLOCK,
        m_axi_ifc1_ARCACHE => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARCACHE,
        m_axi_ifc1_ARPROT => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARPROT,
        m_axi_ifc1_ARQOS => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARQOS,
        m_axi_ifc1_ARREGION => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARREGION,
        m_axi_ifc1_ARUSER => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARUSER,
        m_axi_ifc1_RVALID => ap_const_logic_0,
        m_axi_ifc1_RREADY => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_RREADY,
        m_axi_ifc1_RDATA => ap_const_lv128_lc_1,
        m_axi_ifc1_RLAST => ap_const_logic_0,
        m_axi_ifc1_RID => ap_const_lv1_0,
        m_axi_ifc1_RUSER => ap_const_lv1_0,
        m_axi_ifc1_RRESP => ap_const_lv2_0,
        m_axi_ifc1_BVALID => m_axi_ifc1_BVALID,
        m_axi_ifc1_BREADY => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_BREADY,
        m_axi_ifc1_BRESP => m_axi_ifc1_BRESP,
        m_axi_ifc1_BID => m_axi_ifc1_BID,
        m_axi_ifc1_BUSER => m_axi_ifc1_BUSER,
        sext_ln329 => trunc_ln_reg_228,
        trunc_ln329_1 => trunc_ln329_reg_223,
        output_buf_address0 => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_address0,
        output_buf_ce0 => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_ce0,
        output_buf_q0 => output_buf_q0,
        output_buf_address1 => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_address1,
        output_buf_ce1 => grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_ce1,
        output_buf_q1 => output_buf_q1);

    mul_32s_32s_32_1_1_U634 : component LINEAR_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => Wt_Y_dout,
        din1 => X_dout,
        dout => mul1_fu_95_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((m_axi_ifc1_BVALID = ap_const_logic_0) and (icmp_ln329_reg_213 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_ready = ap_const_logic_1)) then 
                    grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                div_reg_217 <= div_fu_163_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                icmp_ln329_reg_213 <= icmp_ln329_fu_145_p2;
                p_lshr_cast_cast_reg_203 <= p_neg_fu_109_p2(31 downto 2);
                p_lshr_f_cast_cast_reg_208 <= mul1_fu_95_p2(31 downto 2);
                tmp_reg_198 <= mul1_fu_95_p2(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln329_reg_213 = ap_const_lv1_1))) then
                trunc_ln329_reg_223 <= trunc_ln329_fu_174_p1;
                trunc_ln_reg_228 <= p_read(63 downto 4);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, m_axi_ifc1_BVALID, X_empty_n, Wt_Y_empty_n, ap_CS_fsm_state3, icmp_ln329_reg_213, ap_CS_fsm_state10, grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_done, ap_CS_fsm_state5, ap_block_state3_io)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_const_logic_0 = Wt_Y_empty_n) or (ap_const_logic_0 = X_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln329_reg_213 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                elsif (((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln329_reg_213 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if ((not(((m_axi_ifc1_BVALID = ap_const_logic_0) and (icmp_ln329_reg_213 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;

    Wt_Y_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, Wt_Y_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            Wt_Y_blk_n <= Wt_Y_empty_n;
        else 
            Wt_Y_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    Wt_Y_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, X_empty_n, Wt_Y_empty_n)
    begin
        if ((not(((ap_const_logic_0 = Wt_Y_empty_n) or (ap_const_logic_0 = X_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            Wt_Y_read <= ap_const_logic_1;
        else 
            Wt_Y_read <= ap_const_logic_0;
        end if; 
    end process;


    X_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, X_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            X_blk_n <= X_empty_n;
        else 
            X_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    X_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, X_empty_n, Wt_Y_empty_n)
    begin
        if ((not(((ap_const_logic_0 = Wt_Y_empty_n) or (ap_const_logic_0 = X_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            X_read <= ap_const_logic_1;
        else 
            X_read <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_ST_fsm_state10_blk_assign_proc : process(m_axi_ifc1_BVALID, icmp_ln329_reg_213)
    begin
        if (((m_axi_ifc1_BVALID = ap_const_logic_0) and (icmp_ln329_reg_213 = ap_const_lv1_1))) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg, X_empty_n, Wt_Y_empty_n)
    begin
        if (((ap_const_logic_0 = Wt_Y_empty_n) or (ap_const_logic_0 = X_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(ap_block_state3_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state3_io)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_done)
    begin
        if ((grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, X_empty_n, Wt_Y_empty_n)
    begin
                ap_block_state1 <= ((ap_const_logic_0 = Wt_Y_empty_n) or (ap_const_logic_0 = X_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state10_assign_proc : process(m_axi_ifc1_BVALID, icmp_ln329_reg_213)
    begin
                ap_block_state10 <= ((m_axi_ifc1_BVALID = ap_const_logic_0) and (icmp_ln329_reg_213 = ap_const_lv1_1));
    end process;


    ap_block_state3_io_assign_proc : process(m_axi_ifc1_AWREADY, icmp_ln329_reg_213)
    begin
                ap_block_state3_io <= ((m_axi_ifc1_AWREADY = ap_const_logic_0) and (icmp_ln329_reg_213 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, m_axi_ifc1_BVALID, icmp_ln329_reg_213, ap_CS_fsm_state10)
    begin
        if ((not(((m_axi_ifc1_BVALID = ap_const_logic_0) and (icmp_ln329_reg_213 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(m_axi_ifc1_BVALID, icmp_ln329_reg_213, ap_CS_fsm_state10)
    begin
        if ((not(((m_axi_ifc1_BVALID = ap_const_logic_0) and (icmp_ln329_reg_213 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    div_fu_163_p3 <= 
        p_neg_t_fu_154_p2 when (tmp_reg_198(0) = '1') else 
        p_lshr_f_cast_cast_cast_fu_160_p1;
    grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_start <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_start_reg;
    icmp_ln329_fu_145_p2 <= "1" when (signed(tmp_83_fu_135_p4) > signed(ap_const_lv30_0)) else "0";

    ifc1_blk_n_AW_assign_proc : process(m_axi_ifc1_AWREADY, ap_CS_fsm_state3, icmp_ln329_reg_213)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln329_reg_213 = ap_const_lv1_1))) then 
            ifc1_blk_n_AW <= m_axi_ifc1_AWREADY;
        else 
            ifc1_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    ifc1_blk_n_B_assign_proc : process(m_axi_ifc1_BVALID, icmp_ln329_reg_213, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln329_reg_213 = ap_const_lv1_1))) then 
            ifc1_blk_n_B <= m_axi_ifc1_BVALID;
        else 
            ifc1_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;

    m_axi_ifc1_ARADDR <= ap_const_lv64_0;
    m_axi_ifc1_ARBURST <= ap_const_lv2_0;
    m_axi_ifc1_ARCACHE <= ap_const_lv4_0;
    m_axi_ifc1_ARID <= ap_const_lv1_0;
    m_axi_ifc1_ARLEN <= ap_const_lv32_0;
    m_axi_ifc1_ARLOCK <= ap_const_lv2_0;
    m_axi_ifc1_ARPROT <= ap_const_lv3_0;
    m_axi_ifc1_ARQOS <= ap_const_lv4_0;
    m_axi_ifc1_ARREGION <= ap_const_lv4_0;
    m_axi_ifc1_ARSIZE <= ap_const_lv3_0;
    m_axi_ifc1_ARUSER <= ap_const_lv1_0;
    m_axi_ifc1_ARVALID <= ap_const_logic_0;

    m_axi_ifc1_AWADDR_assign_proc : process(ap_CS_fsm_state3, icmp_ln329_reg_213, grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWADDR, ap_CS_fsm_state4, ap_CS_fsm_state5, sext_ln329_fu_187_p1, ap_block_state3_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln329_reg_213 = ap_const_lv1_1))) then 
            m_axi_ifc1_AWADDR <= sext_ln329_fu_187_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_ifc1_AWADDR <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWADDR;
        else 
            m_axi_ifc1_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_ifc1_AWBURST_assign_proc : process(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWBURST, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_ifc1_AWBURST <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWBURST;
        else 
            m_axi_ifc1_AWBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_ifc1_AWCACHE_assign_proc : process(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWCACHE, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_ifc1_AWCACHE <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWCACHE;
        else 
            m_axi_ifc1_AWCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_ifc1_AWID_assign_proc : process(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWID, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_ifc1_AWID <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWID;
        else 
            m_axi_ifc1_AWID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_ifc1_AWLEN_assign_proc : process(ap_CS_fsm_state3, icmp_ln329_reg_213, grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWLEN, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_block_state3_io, sext_ln329_1_fu_170_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln329_reg_213 = ap_const_lv1_1))) then 
            m_axi_ifc1_AWLEN <= sext_ln329_1_fu_170_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_ifc1_AWLEN <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWLEN;
        else 
            m_axi_ifc1_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_ifc1_AWLOCK_assign_proc : process(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWLOCK, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_ifc1_AWLOCK <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWLOCK;
        else 
            m_axi_ifc1_AWLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_ifc1_AWPROT_assign_proc : process(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWPROT, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_ifc1_AWPROT <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWPROT;
        else 
            m_axi_ifc1_AWPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_ifc1_AWQOS_assign_proc : process(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWQOS, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_ifc1_AWQOS <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWQOS;
        else 
            m_axi_ifc1_AWQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_ifc1_AWREGION_assign_proc : process(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWREGION, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_ifc1_AWREGION <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWREGION;
        else 
            m_axi_ifc1_AWREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_ifc1_AWSIZE_assign_proc : process(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWSIZE, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_ifc1_AWSIZE <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWSIZE;
        else 
            m_axi_ifc1_AWSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_ifc1_AWUSER_assign_proc : process(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWUSER, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_ifc1_AWUSER <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWUSER;
        else 
            m_axi_ifc1_AWUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_ifc1_AWVALID_assign_proc : process(ap_CS_fsm_state3, icmp_ln329_reg_213, grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWVALID, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_block_state3_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln329_reg_213 = ap_const_lv1_1))) then 
            m_axi_ifc1_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_ifc1_AWVALID <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWVALID;
        else 
            m_axi_ifc1_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_ifc1_BREADY_assign_proc : process(m_axi_ifc1_BVALID, icmp_ln329_reg_213, ap_CS_fsm_state10, grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_BREADY, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if ((not(((m_axi_ifc1_BVALID = ap_const_logic_0) and (icmp_ln329_reg_213 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln329_reg_213 = ap_const_lv1_1))) then 
            m_axi_ifc1_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_ifc1_BREADY <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_BREADY;
        else 
            m_axi_ifc1_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_ifc1_RREADY <= ap_const_logic_0;
    m_axi_ifc1_WDATA <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WDATA;
    m_axi_ifc1_WID <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WID;
    m_axi_ifc1_WLAST <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WLAST;
    m_axi_ifc1_WSTRB <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WSTRB;
    m_axi_ifc1_WUSER <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WUSER;

    m_axi_ifc1_WVALID_assign_proc : process(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WVALID, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_ifc1_WVALID <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WVALID;
        else 
            m_axi_ifc1_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    output_buf_address0 <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_address0;
    output_buf_address1 <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_address1;
    output_buf_ce0 <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_ce0;
    output_buf_ce1 <= grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_ce1;
    p_lshr_cast_cast_cast_fu_151_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr_cast_cast_reg_203),31));
    p_lshr_f_cast_cast_cast_fu_160_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr_f_cast_cast_reg_208),31));
    p_neg_fu_109_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(mul1_fu_95_p2));
    p_neg_t_fu_154_p2 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(p_lshr_cast_cast_cast_fu_151_p1));
        sext_ln329_1_fu_170_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(div_reg_217),32));

        sext_ln329_fu_187_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_177_p4),64));

    tmp_83_fu_135_p4 <= mul1_fu_95_p2(31 downto 2);
    trunc_ln329_fu_174_p1 <= div_reg_217(29 - 1 downto 0);
    trunc_ln_fu_177_p4 <= p_read(63 downto 4);
end behav;
