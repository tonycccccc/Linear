// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module LINEAR_DPEUnit (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        iact_value,
        iact_idx,
        processing_buffer_address0,
        processing_buffer_ce0,
        processing_buffer_q0,
        bit_buffer_weights_address0,
        bit_buffer_weights_ce0,
        bit_buffer_weights_q0,
        output_buf_address0,
        output_buf_ce0,
        output_buf_we0,
        output_buf_d0,
        output_buf_q0,
        output_buf_address1,
        output_buf_ce1,
        output_buf_we1,
        output_buf_d1,
        output_buf_q1,
        k_idx
);

parameter    ap_ST_fsm_state1 = 40'd1;
parameter    ap_ST_fsm_state2 = 40'd2;
parameter    ap_ST_fsm_state3 = 40'd4;
parameter    ap_ST_fsm_state4 = 40'd8;
parameter    ap_ST_fsm_state5 = 40'd16;
parameter    ap_ST_fsm_state6 = 40'd32;
parameter    ap_ST_fsm_state7 = 40'd64;
parameter    ap_ST_fsm_state8 = 40'd128;
parameter    ap_ST_fsm_state9 = 40'd256;
parameter    ap_ST_fsm_state10 = 40'd512;
parameter    ap_ST_fsm_state11 = 40'd1024;
parameter    ap_ST_fsm_state12 = 40'd2048;
parameter    ap_ST_fsm_state13 = 40'd4096;
parameter    ap_ST_fsm_state14 = 40'd8192;
parameter    ap_ST_fsm_state15 = 40'd16384;
parameter    ap_ST_fsm_state16 = 40'd32768;
parameter    ap_ST_fsm_state17 = 40'd65536;
parameter    ap_ST_fsm_state18 = 40'd131072;
parameter    ap_ST_fsm_state19 = 40'd262144;
parameter    ap_ST_fsm_state20 = 40'd524288;
parameter    ap_ST_fsm_state21 = 40'd1048576;
parameter    ap_ST_fsm_state22 = 40'd2097152;
parameter    ap_ST_fsm_state23 = 40'd4194304;
parameter    ap_ST_fsm_state24 = 40'd8388608;
parameter    ap_ST_fsm_state25 = 40'd16777216;
parameter    ap_ST_fsm_state26 = 40'd33554432;
parameter    ap_ST_fsm_state27 = 40'd67108864;
parameter    ap_ST_fsm_state28 = 40'd134217728;
parameter    ap_ST_fsm_state29 = 40'd268435456;
parameter    ap_ST_fsm_state30 = 40'd536870912;
parameter    ap_ST_fsm_state31 = 40'd1073741824;
parameter    ap_ST_fsm_state32 = 40'd2147483648;
parameter    ap_ST_fsm_state33 = 40'd4294967296;
parameter    ap_ST_fsm_state34 = 40'd8589934592;
parameter    ap_ST_fsm_state35 = 40'd17179869184;
parameter    ap_ST_fsm_state36 = 40'd34359738368;
parameter    ap_ST_fsm_state37 = 40'd68719476736;
parameter    ap_ST_fsm_state38 = 40'd137438953472;
parameter    ap_ST_fsm_state39 = 40'd274877906944;
parameter    ap_ST_fsm_state40 = 40'd549755813888;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] iact_value;
input  [5:0] iact_idx;
output  [4:0] processing_buffer_address0;
output   processing_buffer_ce0;
input  [639:0] processing_buffer_q0;
output  [4:0] bit_buffer_weights_address0;
output   bit_buffer_weights_ce0;
input  [19:0] bit_buffer_weights_q0;
output  [9:0] output_buf_address0;
output   output_buf_ce0;
output   output_buf_we0;
output  [31:0] output_buf_d0;
input  [31:0] output_buf_q0;
output  [9:0] output_buf_address1;
output   output_buf_ce1;
output   output_buf_we1;
output  [31:0] output_buf_d1;
input  [31:0] output_buf_q1;
input  [4:0] k_idx;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg processing_buffer_ce0;
reg bit_buffer_weights_ce0;
reg[9:0] output_buf_address0;
reg output_buf_ce0;
reg output_buf_we0;
reg[31:0] output_buf_d0;
reg[9:0] output_buf_address1;
reg output_buf_ce1;
reg output_buf_we1;
reg[31:0] output_buf_d1;

(* fsm_encoding = "none" *) reg   [39:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_725;
wire    ap_CS_fsm_state2;
reg   [0:0] icmp_ln256_reg_2439;
wire    ap_CS_fsm_state11;
reg   [31:0] reg_730;
reg   [4:0] k_idx_read_reg_2422;
reg   [5:0] iact_idx_read_reg_2428;
reg  signed [31:0] iact_value_read_reg_2434;
wire   [0:0] icmp_ln256_fu_735_p2;
wire   [9:0] add_ln260_fu_771_p2;
reg   [9:0] add_ln260_reg_2443;
wire   [0:0] icmp_ln263_fu_793_p2;
reg   [0:0] icmp_ln263_reg_2475;
reg   [9:0] output_buf_addr_43_reg_2499;
reg   [9:0] output_buf_addr_44_reg_2504;
reg   [9:0] output_buf_addr_45_reg_2509;
reg   [9:0] output_buf_addr_46_reg_2514;
reg   [9:0] output_buf_addr_47_reg_2519;
reg   [9:0] output_buf_addr_48_reg_2524;
reg   [9:0] output_buf_addr_49_reg_2529;
reg   [9:0] output_buf_addr_50_reg_2534;
reg   [9:0] output_buf_addr_51_reg_2539;
reg   [9:0] output_buf_addr_52_reg_2544;
reg   [9:0] output_buf_addr_53_reg_2549;
reg   [9:0] output_buf_addr_54_reg_2554;
reg   [9:0] output_buf_addr_55_reg_2559;
reg   [9:0] output_buf_addr_56_reg_2564;
reg   [9:0] output_buf_addr_57_reg_2569;
reg   [9:0] output_buf_addr_58_reg_2574;
reg   [9:0] output_buf_addr_59_reg_2579;
reg   [9:0] output_buf_addr_60_reg_2584;
reg   [9:0] output_buf_addr_61_reg_2589;
reg   [9:0] output_buf_addr_62_reg_2594;
wire  signed [55:0] sext_ln674_fu_1063_p1;
reg  signed [55:0] sext_ln674_reg_2599;
wire   [0:0] bit_fu_1066_p1;
reg   [0:0] bit_reg_2622;
wire   [55:0] r_V_1_fu_1078_p2;
reg   [55:0] r_V_1_reg_2626;
wire   [0:0] bit_1_fu_1084_p3;
reg   [0:0] bit_1_reg_2631;
reg  signed [31:0] p_Result_20_reg_2635;
wire   [0:0] bit_2_fu_1102_p3;
reg   [0:0] bit_2_reg_2640;
reg  signed [31:0] p_Result_21_reg_2644;
wire   [0:0] bit_3_fu_1120_p3;
reg   [0:0] bit_3_reg_2649;
reg  signed [31:0] p_Result_22_reg_2653;
wire   [0:0] bit_4_fu_1138_p3;
reg   [0:0] bit_4_reg_2658;
reg  signed [31:0] p_Result_23_reg_2662;
wire   [0:0] bit_5_fu_1156_p3;
reg   [0:0] bit_5_reg_2667;
reg  signed [31:0] p_Result_24_reg_2671;
wire   [0:0] bit_6_fu_1174_p3;
reg   [0:0] bit_6_reg_2676;
reg  signed [31:0] p_Result_25_reg_2680;
wire   [0:0] bit_7_fu_1192_p3;
reg   [0:0] bit_7_reg_2685;
reg  signed [31:0] p_Result_26_reg_2689;
wire   [0:0] bit_8_fu_1210_p3;
reg   [0:0] bit_8_reg_2694;
reg  signed [31:0] p_Result_27_reg_2698;
wire   [0:0] bit_9_fu_1228_p3;
reg   [0:0] bit_9_reg_2703;
reg  signed [31:0] p_Result_28_reg_2707;
wire   [0:0] bit_10_fu_1246_p3;
reg   [0:0] bit_10_reg_2712;
reg  signed [31:0] p_Result_29_reg_2716;
wire   [0:0] bit_11_fu_1264_p3;
reg   [0:0] bit_11_reg_2721;
reg  signed [31:0] p_Result_30_reg_2725;
wire   [0:0] bit_12_fu_1282_p3;
reg   [0:0] bit_12_reg_2730;
reg  signed [31:0] p_Result_31_reg_2734;
wire   [0:0] bit_13_fu_1300_p3;
reg   [0:0] bit_13_reg_2739;
reg  signed [31:0] p_Result_32_reg_2743;
wire   [0:0] bit_14_fu_1318_p3;
reg   [0:0] bit_14_reg_2748;
reg  signed [31:0] p_Result_33_reg_2752;
wire   [0:0] bit_15_fu_1336_p3;
reg   [0:0] bit_15_reg_2757;
reg  signed [31:0] p_Result_34_reg_2761;
wire   [0:0] bit_16_fu_1354_p3;
reg   [0:0] bit_16_reg_2766;
reg  signed [31:0] p_Result_35_reg_2770;
wire   [0:0] bit_17_fu_1372_p3;
reg   [0:0] bit_17_reg_2775;
reg  signed [31:0] p_Result_36_reg_2779;
wire   [0:0] bit_18_fu_1390_p3;
reg   [0:0] bit_18_reg_2784;
reg  signed [31:0] p_Result_37_reg_2788;
wire   [0:0] bit_19_fu_1408_p3;
reg   [0:0] bit_19_reg_2793;
reg  signed [31:0] p_Result_38_reg_2797;
wire    ap_CS_fsm_state3;
reg   [31:0] output_buf_load_5_reg_2812;
reg   [31:0] output_buf_load_6_reg_2817;
wire   [55:0] r_V_3_fu_1449_p2;
reg   [55:0] r_V_3_reg_2822;
wire    ap_CS_fsm_state4;
reg   [31:0] output_buf_load_7_reg_2837;
reg   [31:0] output_buf_load_8_reg_2842;
wire   [55:0] r_V_5_fu_1477_p2;
reg   [55:0] r_V_5_reg_2847;
wire    ap_CS_fsm_state5;
reg   [31:0] output_buf_load_9_reg_2862;
reg   [31:0] output_buf_load_10_reg_2867;
wire   [55:0] r_V_7_fu_1505_p2;
reg   [55:0] r_V_7_reg_2872;
wire    ap_CS_fsm_state6;
reg   [31:0] output_buf_load_11_reg_2887;
reg   [31:0] output_buf_load_12_reg_2892;
wire   [55:0] r_V_9_fu_1533_p2;
reg   [55:0] r_V_9_reg_2897;
wire    ap_CS_fsm_state7;
reg   [31:0] output_buf_load_13_reg_2912;
reg   [31:0] output_buf_load_14_reg_2917;
wire   [55:0] r_V_11_fu_1561_p2;
reg   [55:0] r_V_11_reg_2922;
wire    ap_CS_fsm_state8;
reg   [31:0] output_buf_load_15_reg_2937;
reg   [31:0] output_buf_load_16_reg_2942;
wire   [55:0] r_V_13_fu_1589_p2;
reg   [55:0] r_V_13_reg_2947;
wire    ap_CS_fsm_state9;
reg   [31:0] output_buf_load_17_reg_2962;
reg   [31:0] output_buf_load_18_reg_2967;
wire   [55:0] r_V_15_fu_1617_p2;
reg   [55:0] r_V_15_reg_2972;
wire    ap_CS_fsm_state10;
reg   [31:0] output_buf_load_19_reg_2987;
reg   [31:0] output_buf_load_20_reg_2992;
wire   [55:0] r_V_17_fu_1645_p2;
reg   [55:0] r_V_17_reg_2997;
wire   [9:0] add_ln260_17_fu_1672_p2;
reg   [9:0] add_ln260_17_reg_3002;
wire   [55:0] r_V_19_fu_1697_p2;
reg   [55:0] r_V_19_reg_3024;
wire   [55:0] r_V_21_fu_1725_p2;
reg   [55:0] r_V_21_reg_3029;
wire    ap_CS_fsm_state12;
wire   [55:0] r_V_23_fu_1753_p2;
reg   [55:0] r_V_23_reg_3034;
wire    ap_CS_fsm_state13;
wire   [55:0] r_V_25_fu_1781_p2;
reg   [55:0] r_V_25_reg_3039;
wire    ap_CS_fsm_state14;
wire   [55:0] r_V_27_fu_1809_p2;
reg   [55:0] r_V_27_reg_3044;
wire    ap_CS_fsm_state15;
wire   [55:0] r_V_29_fu_1837_p2;
reg   [55:0] r_V_29_reg_3049;
wire    ap_CS_fsm_state16;
wire   [55:0] r_V_31_fu_1865_p2;
reg   [55:0] r_V_31_reg_3054;
wire    ap_CS_fsm_state17;
wire   [55:0] r_V_33_fu_1893_p2;
reg   [55:0] r_V_33_reg_3059;
wire    ap_CS_fsm_state18;
wire   [55:0] r_V_35_fu_1921_p2;
reg   [55:0] r_V_35_reg_3064;
wire    ap_CS_fsm_state19;
wire   [55:0] r_V_37_fu_1949_p2;
reg   [55:0] r_V_37_reg_3069;
wire    ap_CS_fsm_state20;
wire   [55:0] r_V_39_fu_1957_p2;
reg   [55:0] r_V_39_reg_3074;
wire    ap_CS_fsm_state21;
reg   [31:0] trunc_ln_reg_3079;
wire    ap_CS_fsm_state22;
reg   [31:0] trunc_ln717_1_reg_3084;
reg   [31:0] trunc_ln717_2_reg_3089;
wire    ap_CS_fsm_state23;
reg   [31:0] trunc_ln717_3_reg_3094;
reg   [31:0] trunc_ln717_4_reg_3099;
wire    ap_CS_fsm_state24;
reg   [31:0] trunc_ln717_5_reg_3104;
reg   [31:0] trunc_ln717_6_reg_3109;
wire    ap_CS_fsm_state25;
reg   [31:0] trunc_ln717_7_reg_3114;
reg   [31:0] trunc_ln717_8_reg_3119;
wire    ap_CS_fsm_state26;
reg   [31:0] trunc_ln717_9_reg_3124;
reg   [31:0] trunc_ln717_s_reg_3129;
wire    ap_CS_fsm_state27;
reg   [31:0] trunc_ln717_10_reg_3134;
reg   [31:0] trunc_ln717_11_reg_3139;
wire    ap_CS_fsm_state28;
reg   [31:0] trunc_ln717_12_reg_3144;
reg   [31:0] trunc_ln717_13_reg_3149;
wire    ap_CS_fsm_state29;
reg   [31:0] trunc_ln717_14_reg_3154;
reg   [31:0] trunc_ln717_15_reg_3159;
wire    ap_CS_fsm_state30;
reg   [31:0] trunc_ln717_16_reg_3164;
reg   [31:0] trunc_ln717_17_reg_3169;
wire    ap_CS_fsm_state31;
reg   [31:0] trunc_ln717_18_reg_3174;
wire   [63:0] zext_ln260_2_fu_777_p1;
wire   [63:0] zext_ln260_3_fu_788_p1;
wire   [63:0] zext_ln264_fu_799_p1;
wire   [63:0] zext_ln260_4_fu_810_p1;
wire   [63:0] zext_ln260_5_fu_820_p1;
wire   [63:0] zext_ln736_1_fu_849_p1;
wire   [63:0] zext_ln736_2_fu_860_p1;
wire   [63:0] zext_ln736_3_fu_871_p1;
wire   [63:0] zext_ln736_4_fu_882_p1;
wire   [63:0] zext_ln736_5_fu_893_p1;
wire   [63:0] zext_ln736_6_fu_904_p1;
wire   [63:0] zext_ln736_7_fu_915_p1;
wire   [63:0] zext_ln736_8_fu_926_p1;
wire   [63:0] zext_ln736_9_fu_937_p1;
wire   [63:0] zext_ln736_10_fu_948_p1;
wire   [63:0] zext_ln736_11_fu_959_p1;
wire   [63:0] zext_ln736_12_fu_970_p1;
wire   [63:0] zext_ln736_13_fu_981_p1;
wire   [63:0] zext_ln736_14_fu_992_p1;
wire   [63:0] zext_ln736_15_fu_1003_p1;
wire   [63:0] zext_ln736_16_fu_1014_p1;
wire   [63:0] zext_ln736_17_fu_1025_p1;
wire   [63:0] zext_ln736_18_fu_1036_p1;
wire   [63:0] zext_ln736_19_fu_1047_p1;
wire   [63:0] zext_ln736_20_fu_1058_p1;
wire   [63:0] zext_ln260_6_fu_1431_p1;
wire   [63:0] zext_ln260_7_fu_1441_p1;
wire   [63:0] zext_ln260_8_fu_1459_p1;
wire   [63:0] zext_ln260_9_fu_1469_p1;
wire   [63:0] zext_ln260_10_fu_1487_p1;
wire   [63:0] zext_ln260_11_fu_1497_p1;
wire   [63:0] zext_ln260_12_fu_1515_p1;
wire   [63:0] zext_ln260_13_fu_1525_p1;
wire   [63:0] zext_ln260_14_fu_1543_p1;
wire   [63:0] zext_ln260_15_fu_1553_p1;
wire   [63:0] zext_ln260_16_fu_1571_p1;
wire   [63:0] zext_ln260_17_fu_1581_p1;
wire   [63:0] zext_ln260_18_fu_1599_p1;
wire   [63:0] zext_ln260_19_fu_1609_p1;
wire   [63:0] zext_ln260_20_fu_1627_p1;
wire   [63:0] zext_ln260_21_fu_1637_p1;
wire   [63:0] zext_ln260_24_fu_1678_p1;
wire   [63:0] zext_ln260_25_fu_1689_p1;
wire   [63:0] zext_ln260_26_fu_1707_p1;
wire   [63:0] zext_ln260_27_fu_1717_p1;
wire   [63:0] zext_ln260_28_fu_1735_p1;
wire   [63:0] zext_ln260_29_fu_1745_p1;
wire   [63:0] zext_ln260_30_fu_1763_p1;
wire   [63:0] zext_ln260_31_fu_1773_p1;
wire   [63:0] zext_ln260_32_fu_1791_p1;
wire   [63:0] zext_ln260_33_fu_1801_p1;
wire   [63:0] zext_ln260_34_fu_1819_p1;
wire   [63:0] zext_ln260_35_fu_1829_p1;
wire   [63:0] zext_ln260_36_fu_1847_p1;
wire   [63:0] zext_ln260_37_fu_1857_p1;
wire   [63:0] zext_ln260_38_fu_1875_p1;
wire   [63:0] zext_ln260_39_fu_1885_p1;
wire   [63:0] zext_ln260_40_fu_1903_p1;
wire   [63:0] zext_ln260_41_fu_1913_p1;
wire   [63:0] zext_ln260_42_fu_1931_p1;
wire   [63:0] zext_ln260_43_fu_1941_p1;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire   [4:0] sub_fu_741_p2;
wire   [8:0] tmp_fu_747_p3;
wire   [6:0] tmp_s_fu_759_p3;
wire   [9:0] zext_ln260_fu_755_p1;
wire   [9:0] zext_ln260_1_fu_767_p1;
wire   [9:0] or_ln260_fu_782_p2;
wire   [9:0] or_ln260_1_fu_805_p2;
wire   [9:0] or_ln260_2_fu_815_p2;
wire   [7:0] tmp_10_fu_832_p3;
wire   [9:0] tmp_9_fu_825_p3;
wire   [9:0] zext_ln736_fu_839_p1;
wire   [9:0] add_ln736_fu_843_p2;
wire   [9:0] or_ln736_fu_854_p2;
wire   [9:0] or_ln736_1_fu_865_p2;
wire   [9:0] or_ln736_2_fu_876_p2;
wire   [9:0] add_ln736_1_fu_887_p2;
wire   [9:0] add_ln736_2_fu_898_p2;
wire   [9:0] add_ln736_3_fu_909_p2;
wire   [9:0] add_ln736_4_fu_920_p2;
wire   [9:0] add_ln736_5_fu_931_p2;
wire   [9:0] add_ln736_6_fu_942_p2;
wire   [9:0] add_ln736_7_fu_953_p2;
wire   [9:0] add_ln736_8_fu_964_p2;
wire   [9:0] add_ln736_9_fu_975_p2;
wire   [9:0] add_ln736_10_fu_986_p2;
wire   [9:0] add_ln736_11_fu_997_p2;
wire   [9:0] add_ln736_12_fu_1008_p2;
wire   [9:0] add_ln736_13_fu_1019_p2;
wire   [9:0] add_ln736_14_fu_1030_p2;
wire   [9:0] add_ln736_15_fu_1041_p2;
wire   [9:0] add_ln736_16_fu_1052_p2;
wire  signed [31:0] p_Result_s_fu_1070_p1;
wire   [9:0] add_ln260_1_fu_1426_p2;
wire   [9:0] add_ln260_2_fu_1436_p2;
wire  signed [31:0] r_V_3_fu_1449_p1;
wire   [9:0] add_ln260_3_fu_1454_p2;
wire   [9:0] add_ln260_4_fu_1464_p2;
wire  signed [31:0] r_V_5_fu_1477_p1;
wire   [9:0] add_ln260_5_fu_1482_p2;
wire   [9:0] add_ln260_6_fu_1492_p2;
wire  signed [31:0] r_V_7_fu_1505_p1;
wire   [9:0] add_ln260_7_fu_1510_p2;
wire   [9:0] add_ln260_8_fu_1520_p2;
wire  signed [31:0] r_V_9_fu_1533_p1;
wire   [9:0] add_ln260_9_fu_1538_p2;
wire   [9:0] add_ln260_10_fu_1548_p2;
wire  signed [31:0] r_V_11_fu_1561_p1;
wire   [9:0] add_ln260_11_fu_1566_p2;
wire   [9:0] add_ln260_12_fu_1576_p2;
wire  signed [31:0] r_V_13_fu_1589_p1;
wire   [9:0] add_ln260_13_fu_1594_p2;
wire   [9:0] add_ln260_14_fu_1604_p2;
wire  signed [31:0] r_V_15_fu_1617_p1;
wire   [9:0] add_ln260_15_fu_1622_p2;
wire   [9:0] add_ln260_16_fu_1632_p2;
wire  signed [31:0] r_V_17_fu_1645_p1;
wire   [8:0] tmp_7_fu_1650_p3;
wire   [6:0] tmp_8_fu_1661_p3;
wire   [9:0] zext_ln260_22_fu_1657_p1;
wire   [9:0] zext_ln260_23_fu_1668_p1;
wire   [9:0] or_ln260_3_fu_1683_p2;
wire  signed [31:0] r_V_19_fu_1697_p1;
wire   [9:0] or_ln260_4_fu_1702_p2;
wire   [9:0] or_ln260_5_fu_1712_p2;
wire  signed [31:0] r_V_21_fu_1725_p1;
wire   [9:0] add_ln260_18_fu_1730_p2;
wire   [9:0] add_ln260_19_fu_1740_p2;
wire  signed [31:0] r_V_23_fu_1753_p1;
wire   [9:0] add_ln260_20_fu_1758_p2;
wire   [9:0] add_ln260_21_fu_1768_p2;
wire  signed [31:0] r_V_25_fu_1781_p1;
wire   [9:0] add_ln260_22_fu_1786_p2;
wire   [9:0] add_ln260_23_fu_1796_p2;
wire  signed [31:0] r_V_27_fu_1809_p1;
wire   [9:0] add_ln260_24_fu_1814_p2;
wire   [9:0] add_ln260_25_fu_1824_p2;
wire  signed [31:0] r_V_29_fu_1837_p1;
wire   [9:0] add_ln260_26_fu_1842_p2;
wire   [9:0] add_ln260_27_fu_1852_p2;
wire  signed [31:0] r_V_31_fu_1865_p1;
wire   [9:0] add_ln260_28_fu_1870_p2;
wire   [9:0] add_ln260_29_fu_1880_p2;
wire  signed [31:0] r_V_33_fu_1893_p1;
wire   [9:0] add_ln260_30_fu_1898_p2;
wire   [9:0] add_ln260_31_fu_1908_p2;
wire  signed [31:0] r_V_35_fu_1921_p1;
wire   [9:0] add_ln260_32_fu_1926_p2;
wire   [9:0] add_ln260_33_fu_1936_p2;
wire  signed [31:0] r_V_37_fu_1949_p1;
wire  signed [31:0] r_V_39_fu_1957_p1;
wire   [55:0] lhs_1_fu_1962_p3;
wire   [55:0] ret_V_fu_1970_p2;
wire   [55:0] lhs_3_fu_1985_p3;
wire   [55:0] ret_V_1_fu_1993_p2;
wire   [55:0] lhs_5_fu_2008_p3;
wire   [55:0] ret_V_2_fu_2016_p2;
wire   [55:0] lhs_7_fu_2031_p3;
wire   [55:0] ret_V_3_fu_2039_p2;
wire   [55:0] lhs_9_fu_2054_p3;
wire   [55:0] ret_V_4_fu_2062_p2;
wire   [55:0] lhs_11_fu_2077_p3;
wire   [55:0] ret_V_5_fu_2085_p2;
wire   [55:0] lhs_13_fu_2100_p3;
wire   [55:0] ret_V_6_fu_2108_p2;
wire   [55:0] lhs_15_fu_2123_p3;
wire   [55:0] ret_V_7_fu_2131_p2;
wire   [55:0] lhs_17_fu_2146_p3;
wire   [55:0] ret_V_8_fu_2154_p2;
wire   [55:0] lhs_19_fu_2169_p3;
wire   [55:0] ret_V_9_fu_2177_p2;
wire   [55:0] lhs_21_fu_2192_p3;
wire   [55:0] ret_V_10_fu_2200_p2;
wire   [55:0] lhs_23_fu_2215_p3;
wire   [55:0] ret_V_11_fu_2223_p2;
wire   [55:0] lhs_25_fu_2238_p3;
wire   [55:0] ret_V_12_fu_2246_p2;
wire   [55:0] lhs_27_fu_2261_p3;
wire   [55:0] ret_V_13_fu_2269_p2;
wire   [55:0] lhs_29_fu_2284_p3;
wire   [55:0] ret_V_14_fu_2292_p2;
wire   [55:0] lhs_31_fu_2307_p3;
wire   [55:0] ret_V_15_fu_2315_p2;
wire   [55:0] lhs_33_fu_2330_p3;
wire   [55:0] ret_V_16_fu_2338_p2;
wire   [55:0] lhs_35_fu_2353_p3;
wire   [55:0] ret_V_17_fu_2361_p2;
wire   [55:0] lhs_37_fu_2376_p3;
wire   [55:0] ret_V_18_fu_2384_p2;
wire   [55:0] lhs_39_fu_2399_p3;
wire   [55:0] ret_V_19_fu_2407_p2;
reg   [39:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 40'd1;
end

LINEAR_mul_32s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_32s_32s_56_1_1_U548(
    .din0(p_Result_s_fu_1070_p1),
    .din1(iact_value_read_reg_2434),
    .dout(r_V_1_fu_1078_p2)
);

LINEAR_mul_32s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_32s_32s_56_1_1_U549(
    .din0(p_Result_20_reg_2635),
    .din1(r_V_3_fu_1449_p1),
    .dout(r_V_3_fu_1449_p2)
);

LINEAR_mul_32s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_32s_32s_56_1_1_U550(
    .din0(p_Result_21_reg_2644),
    .din1(r_V_5_fu_1477_p1),
    .dout(r_V_5_fu_1477_p2)
);

LINEAR_mul_32s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_32s_32s_56_1_1_U551(
    .din0(p_Result_22_reg_2653),
    .din1(r_V_7_fu_1505_p1),
    .dout(r_V_7_fu_1505_p2)
);

LINEAR_mul_32s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_32s_32s_56_1_1_U552(
    .din0(p_Result_23_reg_2662),
    .din1(r_V_9_fu_1533_p1),
    .dout(r_V_9_fu_1533_p2)
);

LINEAR_mul_32s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_32s_32s_56_1_1_U553(
    .din0(p_Result_24_reg_2671),
    .din1(r_V_11_fu_1561_p1),
    .dout(r_V_11_fu_1561_p2)
);

LINEAR_mul_32s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_32s_32s_56_1_1_U554(
    .din0(p_Result_25_reg_2680),
    .din1(r_V_13_fu_1589_p1),
    .dout(r_V_13_fu_1589_p2)
);

LINEAR_mul_32s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_32s_32s_56_1_1_U555(
    .din0(p_Result_26_reg_2689),
    .din1(r_V_15_fu_1617_p1),
    .dout(r_V_15_fu_1617_p2)
);

LINEAR_mul_32s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_32s_32s_56_1_1_U556(
    .din0(p_Result_27_reg_2698),
    .din1(r_V_17_fu_1645_p1),
    .dout(r_V_17_fu_1645_p2)
);

LINEAR_mul_32s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_32s_32s_56_1_1_U557(
    .din0(p_Result_28_reg_2707),
    .din1(r_V_19_fu_1697_p1),
    .dout(r_V_19_fu_1697_p2)
);

LINEAR_mul_32s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_32s_32s_56_1_1_U558(
    .din0(p_Result_29_reg_2716),
    .din1(r_V_21_fu_1725_p1),
    .dout(r_V_21_fu_1725_p2)
);

LINEAR_mul_32s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_32s_32s_56_1_1_U559(
    .din0(p_Result_30_reg_2725),
    .din1(r_V_23_fu_1753_p1),
    .dout(r_V_23_fu_1753_p2)
);

LINEAR_mul_32s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_32s_32s_56_1_1_U560(
    .din0(p_Result_31_reg_2734),
    .din1(r_V_25_fu_1781_p1),
    .dout(r_V_25_fu_1781_p2)
);

LINEAR_mul_32s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_32s_32s_56_1_1_U561(
    .din0(p_Result_32_reg_2743),
    .din1(r_V_27_fu_1809_p1),
    .dout(r_V_27_fu_1809_p2)
);

LINEAR_mul_32s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_32s_32s_56_1_1_U562(
    .din0(p_Result_33_reg_2752),
    .din1(r_V_29_fu_1837_p1),
    .dout(r_V_29_fu_1837_p2)
);

LINEAR_mul_32s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_32s_32s_56_1_1_U563(
    .din0(p_Result_34_reg_2761),
    .din1(r_V_31_fu_1865_p1),
    .dout(r_V_31_fu_1865_p2)
);

LINEAR_mul_32s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_32s_32s_56_1_1_U564(
    .din0(p_Result_35_reg_2770),
    .din1(r_V_33_fu_1893_p1),
    .dout(r_V_33_fu_1893_p2)
);

LINEAR_mul_32s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_32s_32s_56_1_1_U565(
    .din0(p_Result_36_reg_2779),
    .din1(r_V_35_fu_1921_p1),
    .dout(r_V_35_fu_1921_p2)
);

LINEAR_mul_32s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_32s_32s_56_1_1_U566(
    .din0(p_Result_37_reg_2788),
    .din1(r_V_37_fu_1949_p1),
    .dout(r_V_37_fu_1949_p2)
);

LINEAR_mul_32s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_32s_32s_56_1_1_U567(
    .din0(p_Result_38_reg_2797),
    .din1(r_V_39_fu_1957_p1),
    .dout(r_V_39_fu_1957_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        add_ln260_17_reg_3002[9 : 2] <= add_ln260_17_fu_1672_p2[9 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln256_fu_735_p2 == 1'd0))) begin
        add_ln260_reg_2443[9 : 2] <= add_ln260_fu_771_p2[9 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln263_reg_2475 == 1'd0))) begin
        bit_10_reg_2712 <= bit_buffer_weights_q0[32'd10];
        bit_11_reg_2721 <= bit_buffer_weights_q0[32'd11];
        bit_12_reg_2730 <= bit_buffer_weights_q0[32'd12];
        bit_13_reg_2739 <= bit_buffer_weights_q0[32'd13];
        bit_14_reg_2748 <= bit_buffer_weights_q0[32'd14];
        bit_15_reg_2757 <= bit_buffer_weights_q0[32'd15];
        bit_16_reg_2766 <= bit_buffer_weights_q0[32'd16];
        bit_17_reg_2775 <= bit_buffer_weights_q0[32'd17];
        bit_18_reg_2784 <= bit_buffer_weights_q0[32'd18];
        bit_19_reg_2793 <= bit_buffer_weights_q0[32'd19];
        bit_1_reg_2631 <= bit_buffer_weights_q0[32'd1];
        bit_2_reg_2640 <= bit_buffer_weights_q0[32'd2];
        bit_3_reg_2649 <= bit_buffer_weights_q0[32'd3];
        bit_4_reg_2658 <= bit_buffer_weights_q0[32'd4];
        bit_5_reg_2667 <= bit_buffer_weights_q0[32'd5];
        bit_6_reg_2676 <= bit_buffer_weights_q0[32'd6];
        bit_7_reg_2685 <= bit_buffer_weights_q0[32'd7];
        bit_8_reg_2694 <= bit_buffer_weights_q0[32'd8];
        bit_9_reg_2703 <= bit_buffer_weights_q0[32'd9];
        bit_reg_2622 <= bit_fu_1066_p1;
        output_buf_addr_43_reg_2499[9 : 2] <= zext_ln736_1_fu_849_p1[9 : 2];
        output_buf_addr_44_reg_2504[9 : 2] <= zext_ln736_2_fu_860_p1[9 : 2];
        output_buf_addr_45_reg_2509[9 : 2] <= zext_ln736_3_fu_871_p1[9 : 2];
        output_buf_addr_46_reg_2514[9 : 2] <= zext_ln736_4_fu_882_p1[9 : 2];
        output_buf_addr_47_reg_2519[9 : 2] <= zext_ln736_5_fu_893_p1[9 : 2];
        output_buf_addr_48_reg_2524[9 : 2] <= zext_ln736_6_fu_904_p1[9 : 2];
        output_buf_addr_49_reg_2529[9 : 2] <= zext_ln736_7_fu_915_p1[9 : 2];
        output_buf_addr_50_reg_2534[9 : 2] <= zext_ln736_8_fu_926_p1[9 : 2];
        output_buf_addr_51_reg_2539[9 : 2] <= zext_ln736_9_fu_937_p1[9 : 2];
        output_buf_addr_52_reg_2544[9 : 2] <= zext_ln736_10_fu_948_p1[9 : 2];
        output_buf_addr_53_reg_2549[9 : 2] <= zext_ln736_11_fu_959_p1[9 : 2];
        output_buf_addr_54_reg_2554[9 : 2] <= zext_ln736_12_fu_970_p1[9 : 2];
        output_buf_addr_55_reg_2559[9 : 2] <= zext_ln736_13_fu_981_p1[9 : 2];
        output_buf_addr_56_reg_2564[9 : 2] <= zext_ln736_14_fu_992_p1[9 : 2];
        output_buf_addr_57_reg_2569[9 : 2] <= zext_ln736_15_fu_1003_p1[9 : 2];
        output_buf_addr_58_reg_2574[9 : 2] <= zext_ln736_16_fu_1014_p1[9 : 2];
        output_buf_addr_59_reg_2579[9 : 2] <= zext_ln736_17_fu_1025_p1[9 : 2];
        output_buf_addr_60_reg_2584[9 : 2] <= zext_ln736_18_fu_1036_p1[9 : 2];
        output_buf_addr_61_reg_2589[9 : 2] <= zext_ln736_19_fu_1047_p1[9 : 2];
        output_buf_addr_62_reg_2594[9 : 2] <= zext_ln736_20_fu_1058_p1[9 : 2];
        sext_ln674_reg_2599 <= sext_ln674_fu_1063_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        iact_idx_read_reg_2428 <= iact_idx;
        iact_value_read_reg_2434 <= iact_value;
        icmp_ln256_reg_2439 <= icmp_ln256_fu_735_p2;
        icmp_ln263_reg_2475 <= icmp_ln263_fu_793_p2;
        k_idx_read_reg_2422 <= k_idx;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        output_buf_load_10_reg_2867 <= output_buf_q0;
        output_buf_load_9_reg_2862 <= output_buf_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        output_buf_load_11_reg_2887 <= output_buf_q1;
        output_buf_load_12_reg_2892 <= output_buf_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        output_buf_load_13_reg_2912 <= output_buf_q1;
        output_buf_load_14_reg_2917 <= output_buf_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buf_load_15_reg_2937 <= output_buf_q1;
        output_buf_load_16_reg_2942 <= output_buf_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        output_buf_load_17_reg_2962 <= output_buf_q1;
        output_buf_load_18_reg_2967 <= output_buf_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        output_buf_load_19_reg_2987 <= output_buf_q1;
        output_buf_load_20_reg_2992 <= output_buf_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        output_buf_load_5_reg_2812 <= output_buf_q1;
        output_buf_load_6_reg_2817 <= output_buf_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        output_buf_load_7_reg_2837 <= output_buf_q1;
        output_buf_load_8_reg_2842 <= output_buf_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (bit_1_fu_1084_p3 == 1'd1) & (icmp_ln263_reg_2475 == 1'd0))) begin
        p_Result_20_reg_2635 <= {{processing_buffer_q0[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (bit_2_fu_1102_p3 == 1'd1) & (icmp_ln263_reg_2475 == 1'd0))) begin
        p_Result_21_reg_2644 <= {{processing_buffer_q0[95:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (bit_3_fu_1120_p3 == 1'd1) & (icmp_ln263_reg_2475 == 1'd0))) begin
        p_Result_22_reg_2653 <= {{processing_buffer_q0[127:96]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_4_fu_1138_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln263_reg_2475 == 1'd0))) begin
        p_Result_23_reg_2662 <= {{processing_buffer_q0[159:128]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_5_fu_1156_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln263_reg_2475 == 1'd0))) begin
        p_Result_24_reg_2671 <= {{processing_buffer_q0[191:160]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_6_fu_1174_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln263_reg_2475 == 1'd0))) begin
        p_Result_25_reg_2680 <= {{processing_buffer_q0[223:192]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_7_fu_1192_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln263_reg_2475 == 1'd0))) begin
        p_Result_26_reg_2689 <= {{processing_buffer_q0[255:224]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_8_fu_1210_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln263_reg_2475 == 1'd0))) begin
        p_Result_27_reg_2698 <= {{processing_buffer_q0[287:256]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_9_fu_1228_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln263_reg_2475 == 1'd0))) begin
        p_Result_28_reg_2707 <= {{processing_buffer_q0[319:288]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_10_fu_1246_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln263_reg_2475 == 1'd0))) begin
        p_Result_29_reg_2716 <= {{processing_buffer_q0[351:320]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_11_fu_1264_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln263_reg_2475 == 1'd0))) begin
        p_Result_30_reg_2725 <= {{processing_buffer_q0[383:352]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_12_fu_1282_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln263_reg_2475 == 1'd0))) begin
        p_Result_31_reg_2734 <= {{processing_buffer_q0[415:384]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_13_fu_1300_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln263_reg_2475 == 1'd0))) begin
        p_Result_32_reg_2743 <= {{processing_buffer_q0[447:416]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_14_fu_1318_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln263_reg_2475 == 1'd0))) begin
        p_Result_33_reg_2752 <= {{processing_buffer_q0[479:448]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_15_fu_1336_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln263_reg_2475 == 1'd0))) begin
        p_Result_34_reg_2761 <= {{processing_buffer_q0[511:480]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_16_fu_1354_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln263_reg_2475 == 1'd0))) begin
        p_Result_35_reg_2770 <= {{processing_buffer_q0[543:512]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_17_fu_1372_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln263_reg_2475 == 1'd0))) begin
        p_Result_36_reg_2779 <= {{processing_buffer_q0[575:544]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_18_fu_1390_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln263_reg_2475 == 1'd0))) begin
        p_Result_37_reg_2788 <= {{processing_buffer_q0[607:576]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_19_fu_1408_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln263_reg_2475 == 1'd0))) begin
        p_Result_38_reg_2797 <= {{processing_buffer_q0[639:608]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_5_reg_2667 == 1'd1) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln263_reg_2475 == 1'd0))) begin
        r_V_11_reg_2922 <= r_V_11_fu_1561_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((bit_6_reg_2676 == 1'd1) & (1'b1 == ap_CS_fsm_state8) & (icmp_ln263_reg_2475 == 1'd0))) begin
        r_V_13_reg_2947 <= r_V_13_fu_1589_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((bit_7_reg_2685 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln263_reg_2475 == 1'd0))) begin
        r_V_15_reg_2972 <= r_V_15_fu_1617_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((bit_8_reg_2694 == 1'd1) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln263_reg_2475 == 1'd0))) begin
        r_V_17_reg_2997 <= r_V_17_fu_1645_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((bit_9_reg_2703 == 1'd1) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln263_reg_2475 == 1'd0))) begin
        r_V_19_reg_3024 <= r_V_19_fu_1697_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (bit_fu_1066_p1 == 1'd1) & (icmp_ln263_reg_2475 == 1'd0))) begin
        r_V_1_reg_2626 <= r_V_1_fu_1078_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((bit_10_reg_2712 == 1'd1) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln263_reg_2475 == 1'd0))) begin
        r_V_21_reg_3029 <= r_V_21_fu_1725_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((bit_11_reg_2721 == 1'd1) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln263_reg_2475 == 1'd0))) begin
        r_V_23_reg_3034 <= r_V_23_fu_1753_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((bit_12_reg_2730 == 1'd1) & (1'b1 == ap_CS_fsm_state14) & (icmp_ln263_reg_2475 == 1'd0))) begin
        r_V_25_reg_3039 <= r_V_25_fu_1781_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((bit_13_reg_2739 == 1'd1) & (1'b1 == ap_CS_fsm_state15) & (icmp_ln263_reg_2475 == 1'd0))) begin
        r_V_27_reg_3044 <= r_V_27_fu_1809_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((bit_14_reg_2748 == 1'd1) & (1'b1 == ap_CS_fsm_state16) & (icmp_ln263_reg_2475 == 1'd0))) begin
        r_V_29_reg_3049 <= r_V_29_fu_1837_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((bit_15_reg_2757 == 1'd1) & (1'b1 == ap_CS_fsm_state17) & (icmp_ln263_reg_2475 == 1'd0))) begin
        r_V_31_reg_3054 <= r_V_31_fu_1865_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((bit_16_reg_2766 == 1'd1) & (1'b1 == ap_CS_fsm_state18) & (icmp_ln263_reg_2475 == 1'd0))) begin
        r_V_33_reg_3059 <= r_V_33_fu_1893_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((bit_17_reg_2775 == 1'd1) & (1'b1 == ap_CS_fsm_state19) & (icmp_ln263_reg_2475 == 1'd0))) begin
        r_V_35_reg_3064 <= r_V_35_fu_1921_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((bit_18_reg_2784 == 1'd1) & (1'b1 == ap_CS_fsm_state20) & (icmp_ln263_reg_2475 == 1'd0))) begin
        r_V_37_reg_3069 <= r_V_37_fu_1949_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((bit_19_reg_2793 == 1'd1) & (1'b1 == ap_CS_fsm_state21) & (icmp_ln263_reg_2475 == 1'd0))) begin
        r_V_39_reg_3074 <= r_V_39_fu_1957_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (bit_1_reg_2631 == 1'd1) & (icmp_ln263_reg_2475 == 1'd0))) begin
        r_V_3_reg_2822 <= r_V_3_fu_1449_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (bit_2_reg_2640 == 1'd1) & (icmp_ln263_reg_2475 == 1'd0))) begin
        r_V_5_reg_2847 <= r_V_5_fu_1477_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((bit_3_reg_2649 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln263_reg_2475 == 1'd0))) begin
        r_V_7_reg_2872 <= r_V_7_fu_1505_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((bit_4_reg_2658 == 1'd1) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln263_reg_2475 == 1'd0))) begin
        r_V_9_reg_2897 <= r_V_9_fu_1533_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        reg_725 <= output_buf_q1;
        reg_730 <= output_buf_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((bit_11_reg_2721 == 1'd1) & (1'b1 == ap_CS_fsm_state27) & (icmp_ln263_reg_2475 == 1'd0))) begin
        trunc_ln717_10_reg_3134 <= {{ret_V_11_fu_2223_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_12_reg_2730 == 1'd1) & (1'b1 == ap_CS_fsm_state28) & (icmp_ln263_reg_2475 == 1'd0))) begin
        trunc_ln717_11_reg_3139 <= {{ret_V_12_fu_2246_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_13_reg_2739 == 1'd1) & (1'b1 == ap_CS_fsm_state28) & (icmp_ln263_reg_2475 == 1'd0))) begin
        trunc_ln717_12_reg_3144 <= {{ret_V_13_fu_2269_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_14_reg_2748 == 1'd1) & (1'b1 == ap_CS_fsm_state29) & (icmp_ln263_reg_2475 == 1'd0))) begin
        trunc_ln717_13_reg_3149 <= {{ret_V_14_fu_2292_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_15_reg_2757 == 1'd1) & (1'b1 == ap_CS_fsm_state29) & (icmp_ln263_reg_2475 == 1'd0))) begin
        trunc_ln717_14_reg_3154 <= {{ret_V_15_fu_2315_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_16_reg_2766 == 1'd1) & (1'b1 == ap_CS_fsm_state30) & (icmp_ln263_reg_2475 == 1'd0))) begin
        trunc_ln717_15_reg_3159 <= {{ret_V_16_fu_2338_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_17_reg_2775 == 1'd1) & (1'b1 == ap_CS_fsm_state30) & (icmp_ln263_reg_2475 == 1'd0))) begin
        trunc_ln717_16_reg_3164 <= {{ret_V_17_fu_2361_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_18_reg_2784 == 1'd1) & (1'b1 == ap_CS_fsm_state31) & (icmp_ln263_reg_2475 == 1'd0))) begin
        trunc_ln717_17_reg_3169 <= {{ret_V_18_fu_2384_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_19_reg_2793 == 1'd1) & (1'b1 == ap_CS_fsm_state31) & (icmp_ln263_reg_2475 == 1'd0))) begin
        trunc_ln717_18_reg_3174 <= {{ret_V_19_fu_2407_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (bit_1_reg_2631 == 1'd1) & (icmp_ln263_reg_2475 == 1'd0))) begin
        trunc_ln717_1_reg_3084 <= {{ret_V_1_fu_1993_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & (bit_2_reg_2640 == 1'd1) & (icmp_ln263_reg_2475 == 1'd0))) begin
        trunc_ln717_2_reg_3089 <= {{ret_V_2_fu_2016_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_3_reg_2649 == 1'd1) & (1'b1 == ap_CS_fsm_state23) & (icmp_ln263_reg_2475 == 1'd0))) begin
        trunc_ln717_3_reg_3094 <= {{ret_V_3_fu_2039_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_4_reg_2658 == 1'd1) & (1'b1 == ap_CS_fsm_state24) & (icmp_ln263_reg_2475 == 1'd0))) begin
        trunc_ln717_4_reg_3099 <= {{ret_V_4_fu_2062_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_5_reg_2667 == 1'd1) & (1'b1 == ap_CS_fsm_state24) & (icmp_ln263_reg_2475 == 1'd0))) begin
        trunc_ln717_5_reg_3104 <= {{ret_V_5_fu_2085_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_6_reg_2676 == 1'd1) & (1'b1 == ap_CS_fsm_state25) & (icmp_ln263_reg_2475 == 1'd0))) begin
        trunc_ln717_6_reg_3109 <= {{ret_V_6_fu_2108_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_7_reg_2685 == 1'd1) & (1'b1 == ap_CS_fsm_state25) & (icmp_ln263_reg_2475 == 1'd0))) begin
        trunc_ln717_7_reg_3114 <= {{ret_V_7_fu_2131_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_8_reg_2694 == 1'd1) & (1'b1 == ap_CS_fsm_state26) & (icmp_ln263_reg_2475 == 1'd0))) begin
        trunc_ln717_8_reg_3119 <= {{ret_V_8_fu_2154_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_9_reg_2703 == 1'd1) & (1'b1 == ap_CS_fsm_state26) & (icmp_ln263_reg_2475 == 1'd0))) begin
        trunc_ln717_9_reg_3124 <= {{ret_V_9_fu_2177_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bit_10_reg_2712 == 1'd1) & (1'b1 == ap_CS_fsm_state27) & (icmp_ln263_reg_2475 == 1'd0))) begin
        trunc_ln717_s_reg_3129 <= {{ret_V_10_fu_2200_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (bit_reg_2622 == 1'd1) & (icmp_ln263_reg_2475 == 1'd0))) begin
        trunc_ln_reg_3079 <= {{ret_V_fu_1970_p2[55:24]}};
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        bit_buffer_weights_ce0 = 1'b1;
    end else begin
        bit_buffer_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30))) begin
        output_buf_address0 = output_buf_addr_62_reg_2594;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29))) begin
        output_buf_address0 = output_buf_addr_60_reg_2584;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28))) begin
        output_buf_address0 = output_buf_addr_58_reg_2574;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        output_buf_address0 = output_buf_addr_56_reg_2564;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state26))) begin
        output_buf_address0 = output_buf_addr_54_reg_2554;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state25))) begin
        output_buf_address0 = output_buf_addr_52_reg_2544;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state24))) begin
        output_buf_address0 = output_buf_addr_50_reg_2534;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state23))) begin
        output_buf_address0 = output_buf_addr_48_reg_2524;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state22))) begin
        output_buf_address0 = output_buf_addr_46_reg_2514;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state21))) begin
        output_buf_address0 = output_buf_addr_44_reg_2504;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        output_buf_address0 = zext_ln260_43_fu_1941_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        output_buf_address0 = zext_ln260_41_fu_1913_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        output_buf_address0 = zext_ln260_39_fu_1885_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        output_buf_address0 = zext_ln260_37_fu_1857_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        output_buf_address0 = zext_ln260_35_fu_1829_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        output_buf_address0 = zext_ln260_33_fu_1801_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        output_buf_address0 = zext_ln260_31_fu_1773_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        output_buf_address0 = zext_ln260_29_fu_1745_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        output_buf_address0 = zext_ln260_27_fu_1717_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_buf_address0 = zext_ln260_25_fu_1689_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_buf_address0 = zext_ln260_21_fu_1637_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_buf_address0 = zext_ln260_19_fu_1609_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_buf_address0 = zext_ln260_17_fu_1581_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        output_buf_address0 = zext_ln260_15_fu_1553_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_buf_address0 = zext_ln260_13_fu_1525_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_buf_address0 = zext_ln260_11_fu_1497_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        output_buf_address0 = zext_ln260_9_fu_1469_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_buf_address0 = zext_ln260_7_fu_1441_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_buf_address0 = zext_ln260_5_fu_820_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        output_buf_address0 = zext_ln260_3_fu_788_p1;
    end else begin
        output_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30))) begin
        output_buf_address1 = output_buf_addr_61_reg_2589;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29))) begin
        output_buf_address1 = output_buf_addr_59_reg_2579;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28))) begin
        output_buf_address1 = output_buf_addr_57_reg_2569;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        output_buf_address1 = output_buf_addr_55_reg_2559;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state26))) begin
        output_buf_address1 = output_buf_addr_53_reg_2549;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state25))) begin
        output_buf_address1 = output_buf_addr_51_reg_2539;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state24))) begin
        output_buf_address1 = output_buf_addr_49_reg_2529;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state23))) begin
        output_buf_address1 = output_buf_addr_47_reg_2519;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state22))) begin
        output_buf_address1 = output_buf_addr_45_reg_2509;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state21))) begin
        output_buf_address1 = output_buf_addr_43_reg_2499;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        output_buf_address1 = zext_ln260_42_fu_1931_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        output_buf_address1 = zext_ln260_40_fu_1903_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        output_buf_address1 = zext_ln260_38_fu_1875_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        output_buf_address1 = zext_ln260_36_fu_1847_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        output_buf_address1 = zext_ln260_34_fu_1819_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        output_buf_address1 = zext_ln260_32_fu_1791_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        output_buf_address1 = zext_ln260_30_fu_1763_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        output_buf_address1 = zext_ln260_28_fu_1735_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        output_buf_address1 = zext_ln260_26_fu_1707_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_buf_address1 = zext_ln260_24_fu_1678_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_buf_address1 = zext_ln260_20_fu_1627_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_buf_address1 = zext_ln260_18_fu_1599_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_buf_address1 = zext_ln260_16_fu_1571_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        output_buf_address1 = zext_ln260_14_fu_1543_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_buf_address1 = zext_ln260_12_fu_1515_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_buf_address1 = zext_ln260_10_fu_1487_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        output_buf_address1 = zext_ln260_8_fu_1459_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_buf_address1 = zext_ln260_6_fu_1431_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_buf_address1 = zext_ln260_4_fu_810_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        output_buf_address1 = zext_ln260_2_fu_777_p1;
    end else begin
        output_buf_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state11) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        output_buf_ce0 = 1'b1;
    end else begin
        output_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state11) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        output_buf_ce1 = 1'b1;
    end else begin
        output_buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        output_buf_d0 = trunc_ln717_18_reg_3174;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buf_d0 = trunc_ln717_16_reg_3164;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buf_d0 = trunc_ln717_14_reg_3154;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        output_buf_d0 = trunc_ln717_12_reg_3144;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buf_d0 = trunc_ln717_10_reg_3134;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        output_buf_d0 = trunc_ln717_9_reg_3124;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buf_d0 = trunc_ln717_7_reg_3114;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buf_d0 = trunc_ln717_5_reg_3104;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        output_buf_d0 = trunc_ln717_3_reg_3094;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buf_d0 = trunc_ln717_1_reg_3084;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        output_buf_d0 = output_buf_load_20_reg_2992;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        output_buf_d0 = output_buf_load_18_reg_2967;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        output_buf_d0 = output_buf_load_16_reg_2942;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        output_buf_d0 = output_buf_load_14_reg_2917;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        output_buf_d0 = output_buf_load_12_reg_2892;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        output_buf_d0 = output_buf_load_10_reg_2867;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        output_buf_d0 = output_buf_load_8_reg_2842;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        output_buf_d0 = output_buf_load_6_reg_2817;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state11))) begin
        output_buf_d0 = reg_730;
    end else begin
        output_buf_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        output_buf_d1 = trunc_ln717_17_reg_3169;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buf_d1 = trunc_ln717_15_reg_3159;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buf_d1 = trunc_ln717_13_reg_3149;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        output_buf_d1 = trunc_ln717_11_reg_3139;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buf_d1 = trunc_ln717_s_reg_3129;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        output_buf_d1 = trunc_ln717_8_reg_3119;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buf_d1 = trunc_ln717_6_reg_3109;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buf_d1 = trunc_ln717_4_reg_3099;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        output_buf_d1 = trunc_ln717_2_reg_3089;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buf_d1 = trunc_ln_reg_3079;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        output_buf_d1 = output_buf_load_19_reg_2987;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        output_buf_d1 = output_buf_load_17_reg_2962;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        output_buf_d1 = output_buf_load_15_reg_2937;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        output_buf_d1 = output_buf_load_13_reg_2912;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        output_buf_d1 = output_buf_load_11_reg_2887;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        output_buf_d1 = output_buf_load_9_reg_2862;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        output_buf_d1 = output_buf_load_7_reg_2837;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        output_buf_d1 = output_buf_load_5_reg_2812;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state11))) begin
        output_buf_d1 = reg_725;
    end else begin
        output_buf_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state19)) | ((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state18)) | ((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state17)) | ((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state16)) | ((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state15)) | ((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state14)) | ((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state12)) | ((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state11)) | ((1'b1 == ap_CS_fsm_state31) & (bit_1_reg_2631 == 1'd1) & (icmp_ln263_reg_2475 == 1'd0)) | ((bit_19_reg_2793 == 1'd1) & (1'b1 == ap_CS_fsm_state40) & (icmp_ln263_reg_2475 == 1'd0)) | ((bit_17_reg_2775 == 1'd1) & (1'b1 == ap_CS_fsm_state39) & (icmp_ln263_reg_2475 == 1'd0)) | ((bit_15_reg_2757 == 1'd1) & (1'b1 == ap_CS_fsm_state38) & (icmp_ln263_reg_2475 == 1'd0)) | ((bit_13_reg_2739 == 1'd1) & (1'b1 == ap_CS_fsm_state37) & (icmp_ln263_reg_2475 == 1'd0)) | ((bit_11_reg_2721 == 1'd1) & (1'b1 == ap_CS_fsm_state36) & (icmp_ln263_reg_2475 == 1'd0)) | ((bit_9_reg_2703 == 1'd1) & (1'b1 == ap_CS_fsm_state35) & (icmp_ln263_reg_2475 == 1'd0)) | ((bit_7_reg_2685 == 1'd1) & (1'b1 == ap_CS_fsm_state34) & (icmp_ln263_reg_2475 == 1'd0)) | ((bit_5_reg_2667 == 1'd1) & (1'b1 == ap_CS_fsm_state33) & (icmp_ln263_reg_2475 == 1'd0)) | ((bit_3_reg_2649 == 1'd1) & (1'b1 == ap_CS_fsm_state32) & (icmp_ln263_reg_2475 == 1'd0)))) begin
        output_buf_we0 = 1'b1;
    end else begin
        output_buf_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state19)) | ((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state18)) | ((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state17)) | ((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state16)) | ((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state15)) | ((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state14)) | ((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state12)) | ((icmp_ln256_reg_2439 == 1'd0) & (1'b1 == ap_CS_fsm_state11)) | ((1'b1 == ap_CS_fsm_state32) & (bit_2_reg_2640 == 1'd1) & (icmp_ln263_reg_2475 == 1'd0)) | ((1'b1 == ap_CS_fsm_state31) & (bit_reg_2622 == 1'd1) & (icmp_ln263_reg_2475 == 1'd0)) | ((bit_18_reg_2784 == 1'd1) & (1'b1 == ap_CS_fsm_state40) & (icmp_ln263_reg_2475 == 1'd0)) | ((bit_16_reg_2766 == 1'd1) & (1'b1 == ap_CS_fsm_state39) & (icmp_ln263_reg_2475 == 1'd0)) | ((bit_14_reg_2748 == 1'd1) & (1'b1 == ap_CS_fsm_state38) & (icmp_ln263_reg_2475 == 1'd0)) | ((bit_12_reg_2730 == 1'd1) & (1'b1 == ap_CS_fsm_state37) & (icmp_ln263_reg_2475 == 1'd0)) | ((bit_10_reg_2712 == 1'd1) & (1'b1 == ap_CS_fsm_state36) & (icmp_ln263_reg_2475 == 1'd0)) | ((bit_8_reg_2694 == 1'd1) & (1'b1 == ap_CS_fsm_state35) & (icmp_ln263_reg_2475 == 1'd0)) | ((bit_6_reg_2676 == 1'd1) & (1'b1 == ap_CS_fsm_state34) & (icmp_ln263_reg_2475 == 1'd0)) | ((bit_4_reg_2658 == 1'd1) & (1'b1 == ap_CS_fsm_state33) & (icmp_ln263_reg_2475 == 1'd0)))) begin
        output_buf_we1 = 1'b1;
    end else begin
        output_buf_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        processing_buffer_ce0 = 1'b1;
    end else begin
        processing_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln260_10_fu_1548_p2 = (add_ln260_reg_2443 + 10'd13);

assign add_ln260_11_fu_1566_p2 = (add_ln260_reg_2443 + 10'd14);

assign add_ln260_12_fu_1576_p2 = (add_ln260_reg_2443 + 10'd15);

assign add_ln260_13_fu_1594_p2 = (add_ln260_reg_2443 + 10'd16);

assign add_ln260_14_fu_1604_p2 = (add_ln260_reg_2443 + 10'd17);

assign add_ln260_15_fu_1622_p2 = (add_ln260_reg_2443 + 10'd18);

assign add_ln260_16_fu_1632_p2 = (add_ln260_reg_2443 + 10'd19);

assign add_ln260_17_fu_1672_p2 = (zext_ln260_22_fu_1657_p1 + zext_ln260_23_fu_1668_p1);

assign add_ln260_18_fu_1730_p2 = (add_ln260_17_reg_3002 + 10'd4);

assign add_ln260_19_fu_1740_p2 = (add_ln260_17_reg_3002 + 10'd5);

assign add_ln260_1_fu_1426_p2 = (add_ln260_reg_2443 + 10'd4);

assign add_ln260_20_fu_1758_p2 = (add_ln260_17_reg_3002 + 10'd6);

assign add_ln260_21_fu_1768_p2 = (add_ln260_17_reg_3002 + 10'd7);

assign add_ln260_22_fu_1786_p2 = (add_ln260_17_reg_3002 + 10'd8);

assign add_ln260_23_fu_1796_p2 = (add_ln260_17_reg_3002 + 10'd9);

assign add_ln260_24_fu_1814_p2 = (add_ln260_17_reg_3002 + 10'd10);

assign add_ln260_25_fu_1824_p2 = (add_ln260_17_reg_3002 + 10'd11);

assign add_ln260_26_fu_1842_p2 = (add_ln260_17_reg_3002 + 10'd12);

assign add_ln260_27_fu_1852_p2 = (add_ln260_17_reg_3002 + 10'd13);

assign add_ln260_28_fu_1870_p2 = (add_ln260_17_reg_3002 + 10'd14);

assign add_ln260_29_fu_1880_p2 = (add_ln260_17_reg_3002 + 10'd15);

assign add_ln260_2_fu_1436_p2 = (add_ln260_reg_2443 + 10'd5);

assign add_ln260_30_fu_1898_p2 = (add_ln260_17_reg_3002 + 10'd16);

assign add_ln260_31_fu_1908_p2 = (add_ln260_17_reg_3002 + 10'd17);

assign add_ln260_32_fu_1926_p2 = (add_ln260_17_reg_3002 + 10'd18);

assign add_ln260_33_fu_1936_p2 = (add_ln260_17_reg_3002 + 10'd19);

assign add_ln260_3_fu_1454_p2 = (add_ln260_reg_2443 + 10'd6);

assign add_ln260_4_fu_1464_p2 = (add_ln260_reg_2443 + 10'd7);

assign add_ln260_5_fu_1482_p2 = (add_ln260_reg_2443 + 10'd8);

assign add_ln260_6_fu_1492_p2 = (add_ln260_reg_2443 + 10'd9);

assign add_ln260_7_fu_1510_p2 = (add_ln260_reg_2443 + 10'd10);

assign add_ln260_8_fu_1520_p2 = (add_ln260_reg_2443 + 10'd11);

assign add_ln260_9_fu_1538_p2 = (add_ln260_reg_2443 + 10'd12);

assign add_ln260_fu_771_p2 = (zext_ln260_fu_755_p1 + zext_ln260_1_fu_767_p1);

assign add_ln736_10_fu_986_p2 = (add_ln736_fu_843_p2 + 10'd13);

assign add_ln736_11_fu_997_p2 = (add_ln736_fu_843_p2 + 10'd14);

assign add_ln736_12_fu_1008_p2 = (add_ln736_fu_843_p2 + 10'd15);

assign add_ln736_13_fu_1019_p2 = (add_ln736_fu_843_p2 + 10'd16);

assign add_ln736_14_fu_1030_p2 = (add_ln736_fu_843_p2 + 10'd17);

assign add_ln736_15_fu_1041_p2 = (add_ln736_fu_843_p2 + 10'd18);

assign add_ln736_16_fu_1052_p2 = (add_ln736_fu_843_p2 + 10'd19);

assign add_ln736_1_fu_887_p2 = (add_ln736_fu_843_p2 + 10'd4);

assign add_ln736_2_fu_898_p2 = (add_ln736_fu_843_p2 + 10'd5);

assign add_ln736_3_fu_909_p2 = (add_ln736_fu_843_p2 + 10'd6);

assign add_ln736_4_fu_920_p2 = (add_ln736_fu_843_p2 + 10'd7);

assign add_ln736_5_fu_931_p2 = (add_ln736_fu_843_p2 + 10'd8);

assign add_ln736_6_fu_942_p2 = (add_ln736_fu_843_p2 + 10'd9);

assign add_ln736_7_fu_953_p2 = (add_ln736_fu_843_p2 + 10'd10);

assign add_ln736_8_fu_964_p2 = (add_ln736_fu_843_p2 + 10'd11);

assign add_ln736_9_fu_975_p2 = (add_ln736_fu_843_p2 + 10'd12);

assign add_ln736_fu_843_p2 = (tmp_9_fu_825_p3 + zext_ln736_fu_839_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bit_10_fu_1246_p3 = bit_buffer_weights_q0[32'd10];

assign bit_11_fu_1264_p3 = bit_buffer_weights_q0[32'd11];

assign bit_12_fu_1282_p3 = bit_buffer_weights_q0[32'd12];

assign bit_13_fu_1300_p3 = bit_buffer_weights_q0[32'd13];

assign bit_14_fu_1318_p3 = bit_buffer_weights_q0[32'd14];

assign bit_15_fu_1336_p3 = bit_buffer_weights_q0[32'd15];

assign bit_16_fu_1354_p3 = bit_buffer_weights_q0[32'd16];

assign bit_17_fu_1372_p3 = bit_buffer_weights_q0[32'd17];

assign bit_18_fu_1390_p3 = bit_buffer_weights_q0[32'd18];

assign bit_19_fu_1408_p3 = bit_buffer_weights_q0[32'd19];

assign bit_1_fu_1084_p3 = bit_buffer_weights_q0[32'd1];

assign bit_2_fu_1102_p3 = bit_buffer_weights_q0[32'd2];

assign bit_3_fu_1120_p3 = bit_buffer_weights_q0[32'd3];

assign bit_4_fu_1138_p3 = bit_buffer_weights_q0[32'd4];

assign bit_5_fu_1156_p3 = bit_buffer_weights_q0[32'd5];

assign bit_6_fu_1174_p3 = bit_buffer_weights_q0[32'd6];

assign bit_7_fu_1192_p3 = bit_buffer_weights_q0[32'd7];

assign bit_8_fu_1210_p3 = bit_buffer_weights_q0[32'd8];

assign bit_9_fu_1228_p3 = bit_buffer_weights_q0[32'd9];

assign bit_buffer_weights_address0 = zext_ln264_fu_799_p1;

assign bit_fu_1066_p1 = bit_buffer_weights_q0[0:0];

assign icmp_ln256_fu_735_p2 = ((k_idx == 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln263_fu_793_p2 = ((iact_idx == 6'd63) ? 1'b1 : 1'b0);

assign lhs_11_fu_2077_p3 = {{output_buf_q0}, {24'd0}};

assign lhs_13_fu_2100_p3 = {{output_buf_q1}, {24'd0}};

assign lhs_15_fu_2123_p3 = {{output_buf_q0}, {24'd0}};

assign lhs_17_fu_2146_p3 = {{output_buf_q1}, {24'd0}};

assign lhs_19_fu_2169_p3 = {{output_buf_q0}, {24'd0}};

assign lhs_1_fu_1962_p3 = {{output_buf_q1}, {24'd0}};

assign lhs_21_fu_2192_p3 = {{output_buf_q1}, {24'd0}};

assign lhs_23_fu_2215_p3 = {{output_buf_q0}, {24'd0}};

assign lhs_25_fu_2238_p3 = {{output_buf_q1}, {24'd0}};

assign lhs_27_fu_2261_p3 = {{output_buf_q0}, {24'd0}};

assign lhs_29_fu_2284_p3 = {{output_buf_q1}, {24'd0}};

assign lhs_31_fu_2307_p3 = {{output_buf_q0}, {24'd0}};

assign lhs_33_fu_2330_p3 = {{output_buf_q1}, {24'd0}};

assign lhs_35_fu_2353_p3 = {{output_buf_q0}, {24'd0}};

assign lhs_37_fu_2376_p3 = {{output_buf_q1}, {24'd0}};

assign lhs_39_fu_2399_p3 = {{output_buf_q0}, {24'd0}};

assign lhs_3_fu_1985_p3 = {{output_buf_q0}, {24'd0}};

assign lhs_5_fu_2008_p3 = {{output_buf_q1}, {24'd0}};

assign lhs_7_fu_2031_p3 = {{output_buf_q0}, {24'd0}};

assign lhs_9_fu_2054_p3 = {{output_buf_q1}, {24'd0}};

assign or_ln260_1_fu_805_p2 = (10'd2 | add_ln260_reg_2443);

assign or_ln260_2_fu_815_p2 = (10'd3 | add_ln260_reg_2443);

assign or_ln260_3_fu_1683_p2 = (10'd1 | add_ln260_17_fu_1672_p2);

assign or_ln260_4_fu_1702_p2 = (10'd2 | add_ln260_17_reg_3002);

assign or_ln260_5_fu_1712_p2 = (10'd3 | add_ln260_17_reg_3002);

assign or_ln260_fu_782_p2 = (10'd1 | add_ln260_fu_771_p2);

assign or_ln736_1_fu_865_p2 = (10'd2 | add_ln736_fu_843_p2);

assign or_ln736_2_fu_876_p2 = (10'd3 | add_ln736_fu_843_p2);

assign or_ln736_fu_854_p2 = (10'd1 | add_ln736_fu_843_p2);

assign p_Result_s_fu_1070_p1 = processing_buffer_q0[31:0];

assign processing_buffer_address0 = zext_ln264_fu_799_p1;

assign r_V_11_fu_1561_p1 = sext_ln674_reg_2599;

assign r_V_13_fu_1589_p1 = sext_ln674_reg_2599;

assign r_V_15_fu_1617_p1 = sext_ln674_reg_2599;

assign r_V_17_fu_1645_p1 = sext_ln674_reg_2599;

assign r_V_19_fu_1697_p1 = sext_ln674_reg_2599;

assign r_V_21_fu_1725_p1 = sext_ln674_reg_2599;

assign r_V_23_fu_1753_p1 = sext_ln674_reg_2599;

assign r_V_25_fu_1781_p1 = sext_ln674_reg_2599;

assign r_V_27_fu_1809_p1 = sext_ln674_reg_2599;

assign r_V_29_fu_1837_p1 = sext_ln674_reg_2599;

assign r_V_31_fu_1865_p1 = sext_ln674_reg_2599;

assign r_V_33_fu_1893_p1 = sext_ln674_reg_2599;

assign r_V_35_fu_1921_p1 = sext_ln674_reg_2599;

assign r_V_37_fu_1949_p1 = sext_ln674_reg_2599;

assign r_V_39_fu_1957_p1 = sext_ln674_reg_2599;

assign r_V_3_fu_1449_p1 = sext_ln674_reg_2599;

assign r_V_5_fu_1477_p1 = sext_ln674_reg_2599;

assign r_V_7_fu_1505_p1 = sext_ln674_reg_2599;

assign r_V_9_fu_1533_p1 = sext_ln674_reg_2599;

assign ret_V_10_fu_2200_p2 = (lhs_21_fu_2192_p3 + r_V_21_reg_3029);

assign ret_V_11_fu_2223_p2 = (lhs_23_fu_2215_p3 + r_V_23_reg_3034);

assign ret_V_12_fu_2246_p2 = (lhs_25_fu_2238_p3 + r_V_25_reg_3039);

assign ret_V_13_fu_2269_p2 = (lhs_27_fu_2261_p3 + r_V_27_reg_3044);

assign ret_V_14_fu_2292_p2 = (lhs_29_fu_2284_p3 + r_V_29_reg_3049);

assign ret_V_15_fu_2315_p2 = (lhs_31_fu_2307_p3 + r_V_31_reg_3054);

assign ret_V_16_fu_2338_p2 = (lhs_33_fu_2330_p3 + r_V_33_reg_3059);

assign ret_V_17_fu_2361_p2 = (lhs_35_fu_2353_p3 + r_V_35_reg_3064);

assign ret_V_18_fu_2384_p2 = (lhs_37_fu_2376_p3 + r_V_37_reg_3069);

assign ret_V_19_fu_2407_p2 = (lhs_39_fu_2399_p3 + r_V_39_reg_3074);

assign ret_V_1_fu_1993_p2 = (lhs_3_fu_1985_p3 + r_V_3_reg_2822);

assign ret_V_2_fu_2016_p2 = (lhs_5_fu_2008_p3 + r_V_5_reg_2847);

assign ret_V_3_fu_2039_p2 = (lhs_7_fu_2031_p3 + r_V_7_reg_2872);

assign ret_V_4_fu_2062_p2 = (lhs_9_fu_2054_p3 + r_V_9_reg_2897);

assign ret_V_5_fu_2085_p2 = (lhs_11_fu_2077_p3 + r_V_11_reg_2922);

assign ret_V_6_fu_2108_p2 = (lhs_13_fu_2100_p3 + r_V_13_reg_2947);

assign ret_V_7_fu_2131_p2 = (lhs_15_fu_2123_p3 + r_V_15_reg_2972);

assign ret_V_8_fu_2154_p2 = (lhs_17_fu_2146_p3 + r_V_17_reg_2997);

assign ret_V_9_fu_2177_p2 = (lhs_19_fu_2169_p3 + r_V_19_reg_3024);

assign ret_V_fu_1970_p2 = (lhs_1_fu_1962_p3 + r_V_1_reg_2626);

assign sext_ln674_fu_1063_p1 = iact_value_read_reg_2434;

assign sub_fu_741_p2 = ($signed(k_idx) + $signed(5'd31));

assign tmp_10_fu_832_p3 = {{iact_idx_read_reg_2428}, {2'd0}};

assign tmp_7_fu_1650_p3 = {{k_idx_read_reg_2422}, {4'd0}};

assign tmp_8_fu_1661_p3 = {{k_idx_read_reg_2422}, {2'd0}};

assign tmp_9_fu_825_p3 = {{iact_idx_read_reg_2428}, {4'd0}};

assign tmp_fu_747_p3 = {{sub_fu_741_p2}, {4'd0}};

assign tmp_s_fu_759_p3 = {{sub_fu_741_p2}, {2'd0}};

assign zext_ln260_10_fu_1487_p1 = add_ln260_5_fu_1482_p2;

assign zext_ln260_11_fu_1497_p1 = add_ln260_6_fu_1492_p2;

assign zext_ln260_12_fu_1515_p1 = add_ln260_7_fu_1510_p2;

assign zext_ln260_13_fu_1525_p1 = add_ln260_8_fu_1520_p2;

assign zext_ln260_14_fu_1543_p1 = add_ln260_9_fu_1538_p2;

assign zext_ln260_15_fu_1553_p1 = add_ln260_10_fu_1548_p2;

assign zext_ln260_16_fu_1571_p1 = add_ln260_11_fu_1566_p2;

assign zext_ln260_17_fu_1581_p1 = add_ln260_12_fu_1576_p2;

assign zext_ln260_18_fu_1599_p1 = add_ln260_13_fu_1594_p2;

assign zext_ln260_19_fu_1609_p1 = add_ln260_14_fu_1604_p2;

assign zext_ln260_1_fu_767_p1 = tmp_s_fu_759_p3;

assign zext_ln260_20_fu_1627_p1 = add_ln260_15_fu_1622_p2;

assign zext_ln260_21_fu_1637_p1 = add_ln260_16_fu_1632_p2;

assign zext_ln260_22_fu_1657_p1 = tmp_7_fu_1650_p3;

assign zext_ln260_23_fu_1668_p1 = tmp_8_fu_1661_p3;

assign zext_ln260_24_fu_1678_p1 = add_ln260_17_fu_1672_p2;

assign zext_ln260_25_fu_1689_p1 = or_ln260_3_fu_1683_p2;

assign zext_ln260_26_fu_1707_p1 = or_ln260_4_fu_1702_p2;

assign zext_ln260_27_fu_1717_p1 = or_ln260_5_fu_1712_p2;

assign zext_ln260_28_fu_1735_p1 = add_ln260_18_fu_1730_p2;

assign zext_ln260_29_fu_1745_p1 = add_ln260_19_fu_1740_p2;

assign zext_ln260_2_fu_777_p1 = add_ln260_fu_771_p2;

assign zext_ln260_30_fu_1763_p1 = add_ln260_20_fu_1758_p2;

assign zext_ln260_31_fu_1773_p1 = add_ln260_21_fu_1768_p2;

assign zext_ln260_32_fu_1791_p1 = add_ln260_22_fu_1786_p2;

assign zext_ln260_33_fu_1801_p1 = add_ln260_23_fu_1796_p2;

assign zext_ln260_34_fu_1819_p1 = add_ln260_24_fu_1814_p2;

assign zext_ln260_35_fu_1829_p1 = add_ln260_25_fu_1824_p2;

assign zext_ln260_36_fu_1847_p1 = add_ln260_26_fu_1842_p2;

assign zext_ln260_37_fu_1857_p1 = add_ln260_27_fu_1852_p2;

assign zext_ln260_38_fu_1875_p1 = add_ln260_28_fu_1870_p2;

assign zext_ln260_39_fu_1885_p1 = add_ln260_29_fu_1880_p2;

assign zext_ln260_3_fu_788_p1 = or_ln260_fu_782_p2;

assign zext_ln260_40_fu_1903_p1 = add_ln260_30_fu_1898_p2;

assign zext_ln260_41_fu_1913_p1 = add_ln260_31_fu_1908_p2;

assign zext_ln260_42_fu_1931_p1 = add_ln260_32_fu_1926_p2;

assign zext_ln260_43_fu_1941_p1 = add_ln260_33_fu_1936_p2;

assign zext_ln260_4_fu_810_p1 = or_ln260_1_fu_805_p2;

assign zext_ln260_5_fu_820_p1 = or_ln260_2_fu_815_p2;

assign zext_ln260_6_fu_1431_p1 = add_ln260_1_fu_1426_p2;

assign zext_ln260_7_fu_1441_p1 = add_ln260_2_fu_1436_p2;

assign zext_ln260_8_fu_1459_p1 = add_ln260_3_fu_1454_p2;

assign zext_ln260_9_fu_1469_p1 = add_ln260_4_fu_1464_p2;

assign zext_ln260_fu_755_p1 = tmp_fu_747_p3;

assign zext_ln264_fu_799_p1 = iact_idx;

assign zext_ln736_10_fu_948_p1 = add_ln736_6_fu_942_p2;

assign zext_ln736_11_fu_959_p1 = add_ln736_7_fu_953_p2;

assign zext_ln736_12_fu_970_p1 = add_ln736_8_fu_964_p2;

assign zext_ln736_13_fu_981_p1 = add_ln736_9_fu_975_p2;

assign zext_ln736_14_fu_992_p1 = add_ln736_10_fu_986_p2;

assign zext_ln736_15_fu_1003_p1 = add_ln736_11_fu_997_p2;

assign zext_ln736_16_fu_1014_p1 = add_ln736_12_fu_1008_p2;

assign zext_ln736_17_fu_1025_p1 = add_ln736_13_fu_1019_p2;

assign zext_ln736_18_fu_1036_p1 = add_ln736_14_fu_1030_p2;

assign zext_ln736_19_fu_1047_p1 = add_ln736_15_fu_1041_p2;

assign zext_ln736_1_fu_849_p1 = add_ln736_fu_843_p2;

assign zext_ln736_20_fu_1058_p1 = add_ln736_16_fu_1052_p2;

assign zext_ln736_2_fu_860_p1 = or_ln736_fu_854_p2;

assign zext_ln736_3_fu_871_p1 = or_ln736_1_fu_865_p2;

assign zext_ln736_4_fu_882_p1 = or_ln736_2_fu_876_p2;

assign zext_ln736_5_fu_893_p1 = add_ln736_1_fu_887_p2;

assign zext_ln736_6_fu_904_p1 = add_ln736_2_fu_898_p2;

assign zext_ln736_7_fu_915_p1 = add_ln736_3_fu_909_p2;

assign zext_ln736_8_fu_926_p1 = add_ln736_4_fu_920_p2;

assign zext_ln736_9_fu_937_p1 = add_ln736_5_fu_931_p2;

assign zext_ln736_fu_839_p1 = tmp_10_fu_832_p3;

always @ (posedge ap_clk) begin
    add_ln260_reg_2443[1:0] <= 2'b00;
    output_buf_addr_43_reg_2499[1:0] <= 2'b00;
    output_buf_addr_44_reg_2504[1:0] <= 2'b01;
    output_buf_addr_45_reg_2509[1:0] <= 2'b10;
    output_buf_addr_46_reg_2514[1:0] <= 2'b11;
    output_buf_addr_47_reg_2519[1:0] <= 2'b00;
    output_buf_addr_48_reg_2524[1:0] <= 2'b01;
    output_buf_addr_49_reg_2529[1:0] <= 2'b10;
    output_buf_addr_50_reg_2534[1:0] <= 2'b11;
    output_buf_addr_51_reg_2539[1:0] <= 2'b00;
    output_buf_addr_52_reg_2544[1:0] <= 2'b01;
    output_buf_addr_53_reg_2549[1:0] <= 2'b10;
    output_buf_addr_54_reg_2554[1:0] <= 2'b11;
    output_buf_addr_55_reg_2559[1:0] <= 2'b00;
    output_buf_addr_56_reg_2564[1:0] <= 2'b01;
    output_buf_addr_57_reg_2569[1:0] <= 2'b10;
    output_buf_addr_58_reg_2574[1:0] <= 2'b11;
    output_buf_addr_59_reg_2579[1:0] <= 2'b00;
    output_buf_addr_60_reg_2584[1:0] <= 2'b01;
    output_buf_addr_61_reg_2589[1:0] <= 2'b10;
    output_buf_addr_62_reg_2594[1:0] <= 2'b11;
    add_ln260_17_reg_3002[1:0] <= 2'b00;
end

endmodule //LINEAR_DPEUnit
