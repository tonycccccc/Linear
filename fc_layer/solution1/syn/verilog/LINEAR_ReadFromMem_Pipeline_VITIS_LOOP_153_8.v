// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module LINEAR_ReadFromMem_Pipeline_VITIS_LOOP_153_8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_ifc6_AWVALID,
        m_axi_ifc6_AWREADY,
        m_axi_ifc6_AWADDR,
        m_axi_ifc6_AWID,
        m_axi_ifc6_AWLEN,
        m_axi_ifc6_AWSIZE,
        m_axi_ifc6_AWBURST,
        m_axi_ifc6_AWLOCK,
        m_axi_ifc6_AWCACHE,
        m_axi_ifc6_AWPROT,
        m_axi_ifc6_AWQOS,
        m_axi_ifc6_AWREGION,
        m_axi_ifc6_AWUSER,
        m_axi_ifc6_WVALID,
        m_axi_ifc6_WREADY,
        m_axi_ifc6_WDATA,
        m_axi_ifc6_WSTRB,
        m_axi_ifc6_WLAST,
        m_axi_ifc6_WID,
        m_axi_ifc6_WUSER,
        m_axi_ifc6_ARVALID,
        m_axi_ifc6_ARREADY,
        m_axi_ifc6_ARADDR,
        m_axi_ifc6_ARID,
        m_axi_ifc6_ARLEN,
        m_axi_ifc6_ARSIZE,
        m_axi_ifc6_ARBURST,
        m_axi_ifc6_ARLOCK,
        m_axi_ifc6_ARCACHE,
        m_axi_ifc6_ARPROT,
        m_axi_ifc6_ARQOS,
        m_axi_ifc6_ARREGION,
        m_axi_ifc6_ARUSER,
        m_axi_ifc6_RVALID,
        m_axi_ifc6_RREADY,
        m_axi_ifc6_RDATA,
        m_axi_ifc6_RLAST,
        m_axi_ifc6_RID,
        m_axi_ifc6_RUSER,
        m_axi_ifc6_RRESP,
        m_axi_ifc6_BVALID,
        m_axi_ifc6_BREADY,
        m_axi_ifc6_BRESP,
        m_axi_ifc6_BID,
        m_axi_ifc6_BUSER,
        sext_ln153,
        ifc66,
        iact_buffer_address0,
        iact_buffer_ce0,
        iact_buffer_we0,
        iact_buffer_d0,
        iact_buffer_address1,
        iact_buffer_ce1,
        iact_buffer_we1,
        iact_buffer_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 12'd1;
parameter    ap_ST_fsm_pp0_stage1 = 12'd2;
parameter    ap_ST_fsm_pp0_stage2 = 12'd4;
parameter    ap_ST_fsm_pp0_stage3 = 12'd8;
parameter    ap_ST_fsm_pp0_stage4 = 12'd16;
parameter    ap_ST_fsm_pp0_stage5 = 12'd32;
parameter    ap_ST_fsm_pp0_stage6 = 12'd64;
parameter    ap_ST_fsm_pp0_stage7 = 12'd128;
parameter    ap_ST_fsm_pp0_stage8 = 12'd256;
parameter    ap_ST_fsm_pp0_stage9 = 12'd512;
parameter    ap_ST_fsm_pp0_stage10 = 12'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_ifc6_AWVALID;
input   m_axi_ifc6_AWREADY;
output  [63:0] m_axi_ifc6_AWADDR;
output  [0:0] m_axi_ifc6_AWID;
output  [31:0] m_axi_ifc6_AWLEN;
output  [2:0] m_axi_ifc6_AWSIZE;
output  [1:0] m_axi_ifc6_AWBURST;
output  [1:0] m_axi_ifc6_AWLOCK;
output  [3:0] m_axi_ifc6_AWCACHE;
output  [2:0] m_axi_ifc6_AWPROT;
output  [3:0] m_axi_ifc6_AWQOS;
output  [3:0] m_axi_ifc6_AWREGION;
output  [0:0] m_axi_ifc6_AWUSER;
output   m_axi_ifc6_WVALID;
input   m_axi_ifc6_WREADY;
output  [127:0] m_axi_ifc6_WDATA;
output  [15:0] m_axi_ifc6_WSTRB;
output   m_axi_ifc6_WLAST;
output  [0:0] m_axi_ifc6_WID;
output  [0:0] m_axi_ifc6_WUSER;
output   m_axi_ifc6_ARVALID;
input   m_axi_ifc6_ARREADY;
output  [63:0] m_axi_ifc6_ARADDR;
output  [0:0] m_axi_ifc6_ARID;
output  [31:0] m_axi_ifc6_ARLEN;
output  [2:0] m_axi_ifc6_ARSIZE;
output  [1:0] m_axi_ifc6_ARBURST;
output  [1:0] m_axi_ifc6_ARLOCK;
output  [3:0] m_axi_ifc6_ARCACHE;
output  [2:0] m_axi_ifc6_ARPROT;
output  [3:0] m_axi_ifc6_ARQOS;
output  [3:0] m_axi_ifc6_ARREGION;
output  [0:0] m_axi_ifc6_ARUSER;
input   m_axi_ifc6_RVALID;
output   m_axi_ifc6_RREADY;
input  [127:0] m_axi_ifc6_RDATA;
input   m_axi_ifc6_RLAST;
input  [0:0] m_axi_ifc6_RID;
input  [0:0] m_axi_ifc6_RUSER;
input  [1:0] m_axi_ifc6_RRESP;
input   m_axi_ifc6_BVALID;
output   m_axi_ifc6_BREADY;
input  [1:0] m_axi_ifc6_BRESP;
input  [0:0] m_axi_ifc6_BID;
input  [0:0] m_axi_ifc6_BUSER;
input  [27:0] sext_ln153;
input  [63:0] ifc66;
output  [10:0] iact_buffer_address0;
output   iact_buffer_ce0;
output   iact_buffer_we0;
output  [31:0] iact_buffer_d0;
output  [10:0] iact_buffer_address1;
output   iact_buffer_ce1;
output   iact_buffer_we1;
output  [31:0] iact_buffer_d1;

reg ap_idle;
reg m_axi_ifc6_ARVALID;
reg m_axi_ifc6_RREADY;
reg[10:0] iact_buffer_address0;
reg iact_buffer_ce0;
reg iact_buffer_we0;
reg[31:0] iact_buffer_d0;
reg[10:0] iact_buffer_address1;
reg iact_buffer_ce1;
reg iact_buffer_we1;
reg[31:0] iact_buffer_d1;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage8;
reg   [0:0] icmp_ln153_reg_819;
reg    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state21_pp0_stage8_iter1;
reg    ap_block_pp0_stage8_subdone;
reg    ap_condition_exit_pp0_iter0_stage8;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage11;
reg    ap_block_state12_pp0_stage11_iter0;
reg    ap_block_pp0_stage11_subdone;
reg    ifc6_blk_n_AR;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg    ifc6_blk_n_R;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
wire    ap_block_pp0_stage0;
reg   [31:0] reg_395;
reg    ap_block_pp0_stage8_11001;
reg    ap_block_state10_pp0_stage9_iter0;
reg    ap_block_pp0_stage9_11001;
reg    ap_block_pp0_stage11_11001;
reg   [31:0] reg_400;
reg    ap_block_state11_pp0_stage10_iter0;
reg    ap_block_pp0_stage10_11001;
reg   [31:0] reg_405;
reg   [31:0] reg_410;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state13_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] reg_415;
reg   [31:0] reg_420;
wire    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state2_io;
reg    ap_block_state14_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
wire   [0:0] icmp_ln153_fu_437_p2;
reg   [59:0] trunc_ln6_reg_823;
wire   [10:0] sub_ln159_fu_533_p2;
reg   [10:0] sub_ln159_reg_828;
reg   [10:0] sub_ln159_reg_828_pp0_iter1_reg;
wire   [31:0] trunc_ln674_fu_554_p1;
reg   [31:0] trunc_ln674_reg_862;
wire   [31:0] trunc_ln674_3_fu_572_p1;
reg   [31:0] trunc_ln674_3_reg_867;
wire   [31:0] trunc_ln674_4_fu_596_p1;
reg   [31:0] trunc_ln674_4_reg_872;
wire   [31:0] trunc_ln674_5_fu_620_p1;
reg   [31:0] trunc_ln674_5_reg_877;
reg   [31:0] p_Result_25_10_reg_882;
reg   [31:0] p_Result_25_11_reg_887;
wire   [31:0] trunc_ln674_6_fu_644_p1;
reg   [31:0] trunc_ln674_6_reg_892;
reg   [31:0] p_Result_25_12_reg_897;
wire   [31:0] trunc_ln674_7_fu_668_p1;
reg   [31:0] trunc_ln674_7_reg_902;
reg   [31:0] p_Result_25_16_reg_907;
reg   [31:0] p_Result_25_17_reg_912;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln674_fu_558_p1;
wire   [63:0] zext_ln161_fu_567_p1;
wire   [63:0] zext_ln161_1_fu_581_p1;
wire   [63:0] zext_ln161_2_fu_591_p1;
wire   [63:0] zext_ln161_3_fu_605_p1;
wire   [63:0] zext_ln161_4_fu_615_p1;
wire   [63:0] zext_ln161_5_fu_629_p1;
wire   [63:0] zext_ln161_6_fu_639_p1;
wire   [63:0] zext_ln161_7_fu_653_p1;
wire   [63:0] zext_ln161_8_fu_663_p1;
wire   [63:0] zext_ln161_9_fu_677_p1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln161_10_fu_687_p1;
wire   [63:0] zext_ln161_11_fu_697_p1;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln161_12_fu_707_p1;
wire   [63:0] zext_ln161_13_fu_717_p1;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln161_14_fu_727_p1;
wire   [63:0] zext_ln161_15_fu_737_p1;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln161_16_fu_747_p1;
wire   [63:0] zext_ln161_17_fu_757_p1;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln161_18_fu_767_p1;
wire   [63:0] zext_ln161_19_fu_777_p1;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln161_20_fu_787_p1;
wire   [63:0] zext_ln161_21_fu_797_p1;
wire   [63:0] zext_ln161_22_fu_807_p1;
wire  signed [63:0] sext_ln156_fu_544_p1;
reg   [31:0] i_3_fu_136;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_i;
wire   [31:0] add_ln153_fu_443_p2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state15_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state16_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state17_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state18_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_11001;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state19_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_11001;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state20_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_11001;
wire  signed [31:0] sext_ln153_cast_fu_425_p1;
wire   [38:0] shl_ln4_fu_449_p3;
wire   [5:0] trunc_ln155_fu_469_p1;
wire   [36:0] shl_ln155_1_fu_461_p3;
wire   [39:0] zext_ln155_fu_457_p1;
wire   [39:0] zext_ln155_1_fu_481_p1;
wire   [39:0] sub_ln155_fu_485_p2;
wire  signed [40:0] sext_ln155_fu_491_p1;
wire   [40:0] add_ln155_fu_495_p2;
wire  signed [63:0] sext_ln155_1_fu_501_p1;
wire   [63:0] add_ln155_1_fu_505_p2;
wire   [7:0] trunc_ln159_fu_521_p1;
wire   [10:0] trunc_ln5_fu_473_p3;
wire   [10:0] shl_ln5_fu_525_p3;
wire   [10:0] or_ln161_fu_562_p2;
wire   [10:0] or_ln161_1_fu_576_p2;
wire   [10:0] or_ln161_2_fu_586_p2;
wire   [10:0] or_ln161_3_fu_600_p2;
wire   [10:0] or_ln161_4_fu_610_p2;
wire   [10:0] or_ln161_5_fu_624_p2;
wire   [10:0] or_ln161_6_fu_634_p2;
wire   [10:0] add_ln161_fu_648_p2;
wire   [10:0] add_ln161_1_fu_658_p2;
wire   [10:0] add_ln161_2_fu_672_p2;
wire   [10:0] add_ln161_3_fu_682_p2;
wire   [10:0] add_ln161_4_fu_692_p2;
wire   [10:0] add_ln161_5_fu_702_p2;
wire   [10:0] add_ln161_6_fu_712_p2;
wire   [10:0] add_ln161_7_fu_722_p2;
wire   [10:0] add_ln161_8_fu_732_p2;
wire   [10:0] add_ln161_9_fu_742_p2;
wire   [10:0] add_ln161_10_fu_752_p2;
wire   [10:0] add_ln161_11_fu_762_p2;
wire   [10:0] add_ln161_12_fu_772_p2;
wire   [10:0] add_ln161_13_fu_782_p2;
wire   [10:0] add_ln161_14_fu_792_p2;
wire   [10:0] add_ln161_15_fu_802_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [11:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

LINEAR_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage8),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage8)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln153_fu_437_p2 == 1'd0))) begin
            i_3_fu_136 <= add_ln153_fu_443_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_3_fu_136 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln153_reg_819 <= icmp_ln153_fu_437_p2;
        sub_ln159_reg_828_pp0_iter1_reg[10 : 3] <= sub_ln159_reg_828[10 : 3];
        trunc_ln674_6_reg_892 <= trunc_ln674_6_fu_644_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        p_Result_25_10_reg_882 <= {{m_axi_ifc6_RDATA[95:64]}};
        p_Result_25_11_reg_887 <= {{m_axi_ifc6_RDATA[127:96]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_25_12_reg_897 <= {{m_axi_ifc6_RDATA[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        p_Result_25_16_reg_907 <= {{m_axi_ifc6_RDATA[95:64]}};
        p_Result_25_17_reg_912 <= {{m_axi_ifc6_RDATA[127:96]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)))) begin
        reg_395 <= {{m_axi_ifc6_RDATA[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)))) begin
        reg_400 <= {{m_axi_ifc6_RDATA[95:64]}};
        reg_405 <= {{m_axi_ifc6_RDATA[127:96]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_410 <= {{m_axi_ifc6_RDATA[95:64]}};
        reg_415 <= {{m_axi_ifc6_RDATA[127:96]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_420 <= {{m_axi_ifc6_RDATA[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln153_fu_437_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sub_ln159_reg_828[10 : 3] <= sub_ln159_fu_533_p2[10 : 3];
        trunc_ln6_reg_823 <= {{add_ln155_1_fu_505_p2[63:4]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln153_reg_819 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        trunc_ln674_3_reg_867 <= trunc_ln674_3_fu_572_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln153_reg_819 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        trunc_ln674_4_reg_872 <= trunc_ln674_4_fu_596_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln153_reg_819 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        trunc_ln674_5_reg_877 <= trunc_ln674_5_fu_620_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        trunc_ln674_7_reg_902 <= trunc_ln674_7_fu_668_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln153_reg_819 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        trunc_ln674_reg_862 <= trunc_ln674_fu_554_p1;
    end
end

always @ (*) begin
    if (((icmp_ln153_reg_819 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
        ap_condition_exit_pp0_iter0_stage8 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i = 32'd0;
    end else begin
        ap_sig_allocacmp_i = i_3_fu_136;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        iact_buffer_address0 = zext_ln161_22_fu_807_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        iact_buffer_address0 = zext_ln161_20_fu_787_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        iact_buffer_address0 = zext_ln161_18_fu_767_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        iact_buffer_address0 = zext_ln161_16_fu_747_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        iact_buffer_address0 = zext_ln161_14_fu_727_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        iact_buffer_address0 = zext_ln161_12_fu_707_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        iact_buffer_address0 = zext_ln161_10_fu_687_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        iact_buffer_address0 = zext_ln161_8_fu_663_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        iact_buffer_address0 = zext_ln161_6_fu_639_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
        iact_buffer_address0 = zext_ln161_4_fu_615_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10))) begin
        iact_buffer_address0 = zext_ln161_2_fu_591_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        iact_buffer_address0 = zext_ln161_fu_567_p1;
    end else begin
        iact_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        iact_buffer_address1 = zext_ln161_21_fu_797_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        iact_buffer_address1 = zext_ln161_19_fu_777_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        iact_buffer_address1 = zext_ln161_17_fu_757_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        iact_buffer_address1 = zext_ln161_15_fu_737_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        iact_buffer_address1 = zext_ln161_13_fu_717_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        iact_buffer_address1 = zext_ln161_11_fu_697_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        iact_buffer_address1 = zext_ln161_9_fu_677_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        iact_buffer_address1 = zext_ln161_7_fu_653_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        iact_buffer_address1 = zext_ln161_5_fu_629_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
        iact_buffer_address1 = zext_ln161_3_fu_605_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10))) begin
        iact_buffer_address1 = zext_ln161_1_fu_581_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        iact_buffer_address1 = zext_ln674_fu_558_p1;
    end else begin
        iact_buffer_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)))) begin
        iact_buffer_ce0 = 1'b1;
    end else begin
        iact_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)))) begin
        iact_buffer_ce1 = 1'b1;
    end else begin
        iact_buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        iact_buffer_d0 = p_Result_25_17_reg_912;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        iact_buffer_d0 = p_Result_25_12_reg_897;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        iact_buffer_d0 = p_Result_25_11_reg_887;
    end else if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        iact_buffer_d0 = reg_420;
    end else if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        iact_buffer_d0 = reg_415;
    end else if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10)))) begin
        iact_buffer_d0 = reg_405;
    end else if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11)))) begin
        iact_buffer_d0 = reg_395;
    end else begin
        iact_buffer_d0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        iact_buffer_d1 = p_Result_25_16_reg_907;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        iact_buffer_d1 = trunc_ln674_7_reg_902;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        iact_buffer_d1 = trunc_ln674_6_reg_892;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        iact_buffer_d1 = p_Result_25_10_reg_882;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        iact_buffer_d1 = trunc_ln674_5_reg_877;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        iact_buffer_d1 = trunc_ln674_4_reg_872;
    end else if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        iact_buffer_d1 = reg_410;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
        iact_buffer_d1 = trunc_ln674_3_reg_867;
    end else if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10)))) begin
        iact_buffer_d1 = reg_400;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        iact_buffer_d1 = trunc_ln674_reg_862;
    end else begin
        iact_buffer_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        iact_buffer_we0 = 1'b1;
    end else begin
        iact_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        iact_buffer_we1 = 1'b1;
    end else begin
        iact_buffer_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        ifc6_blk_n_AR = m_axi_ifc6_ARREADY;
    end else begin
        ifc6_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10)) | ((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9)) | ((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        ifc6_blk_n_R = m_axi_ifc6_RVALID;
    end else begin
        ifc6_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        m_axi_ifc6_ARVALID = 1'b1;
    end else begin
        m_axi_ifc6_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((icmp_ln153_reg_819 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        m_axi_ifc6_RREADY = 1'b1;
    end else begin
        m_axi_ifc6_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage8)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln153_fu_443_p2 = (ap_sig_allocacmp_i + 32'd1);

assign add_ln155_1_fu_505_p2 = ($signed(sext_ln155_1_fu_501_p1) + $signed(ifc66));

assign add_ln155_fu_495_p2 = ($signed(sext_ln155_fu_491_p1) + $signed(41'd2560));

assign add_ln161_10_fu_752_p2 = (sub_ln159_reg_828_pp0_iter1_reg + 11'd18);

assign add_ln161_11_fu_762_p2 = (sub_ln159_reg_828_pp0_iter1_reg + 11'd19);

assign add_ln161_12_fu_772_p2 = (sub_ln159_reg_828_pp0_iter1_reg + 11'd20);

assign add_ln161_13_fu_782_p2 = (sub_ln159_reg_828_pp0_iter1_reg + 11'd21);

assign add_ln161_14_fu_792_p2 = (sub_ln159_reg_828_pp0_iter1_reg + 11'd22);

assign add_ln161_15_fu_802_p2 = (sub_ln159_reg_828_pp0_iter1_reg + 11'd23);

assign add_ln161_1_fu_658_p2 = (sub_ln159_reg_828_pp0_iter1_reg + 11'd9);

assign add_ln161_2_fu_672_p2 = (sub_ln159_reg_828_pp0_iter1_reg + 11'd10);

assign add_ln161_3_fu_682_p2 = (sub_ln159_reg_828_pp0_iter1_reg + 11'd11);

assign add_ln161_4_fu_692_p2 = (sub_ln159_reg_828_pp0_iter1_reg + 11'd12);

assign add_ln161_5_fu_702_p2 = (sub_ln159_reg_828_pp0_iter1_reg + 11'd13);

assign add_ln161_6_fu_712_p2 = (sub_ln159_reg_828_pp0_iter1_reg + 11'd14);

assign add_ln161_7_fu_722_p2 = (sub_ln159_reg_828_pp0_iter1_reg + 11'd15);

assign add_ln161_8_fu_732_p2 = (sub_ln159_reg_828_pp0_iter1_reg + 11'd16);

assign add_ln161_9_fu_742_p2 = (sub_ln159_reg_828_pp0_iter1_reg + 11'd17);

assign add_ln161_fu_648_p2 = (sub_ln159_reg_828_pp0_iter1_reg + 11'd8);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((m_axi_ifc6_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((m_axi_ifc6_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((icmp_ln153_reg_819 == 1'd0) & (m_axi_ifc6_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((icmp_ln153_reg_819 == 1'd0) & (m_axi_ifc6_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((icmp_ln153_reg_819 == 1'd0) & (m_axi_ifc6_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((icmp_ln153_reg_819 == 1'd0) & (m_axi_ifc6_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((m_axi_ifc6_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((m_axi_ifc6_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((icmp_ln153_reg_819 == 1'd0) & (m_axi_ifc6_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((icmp_ln153_reg_819 == 1'd0) & (m_axi_ifc6_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((icmp_ln153_reg_819 == 1'd0) & (m_axi_ifc6_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((icmp_ln153_reg_819 == 1'd0) & (m_axi_ifc6_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = ((icmp_ln153_reg_819 == 1'd0) & (m_axi_ifc6_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = ((icmp_ln153_reg_819 == 1'd0) & (m_axi_ifc6_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0 = ((icmp_ln153_reg_819 == 1'd0) & (m_axi_ifc6_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state13_pp0_stage0_iter1 = (m_axi_ifc6_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state14_pp0_stage1_iter1 = (m_axi_ifc6_RVALID == 1'b0);
end

assign ap_block_state15_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_io = ((icmp_ln153_reg_819 == 1'd0) & (m_axi_ifc6_ARREADY == 1'b0));
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp0_stage8_iter0 = ((icmp_ln153_reg_819 == 1'd0) & (m_axi_ifc6_RVALID == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage8;

assign icmp_ln153_fu_437_p2 = ((ap_sig_allocacmp_i == sext_ln153_cast_fu_425_p1) ? 1'b1 : 1'b0);

assign m_axi_ifc6_ARADDR = sext_ln156_fu_544_p1;

assign m_axi_ifc6_ARBURST = 2'd0;

assign m_axi_ifc6_ARCACHE = 4'd0;

assign m_axi_ifc6_ARID = 1'd0;

assign m_axi_ifc6_ARLEN = 32'd6;

assign m_axi_ifc6_ARLOCK = 2'd0;

assign m_axi_ifc6_ARPROT = 3'd0;

assign m_axi_ifc6_ARQOS = 4'd0;

assign m_axi_ifc6_ARREGION = 4'd0;

assign m_axi_ifc6_ARSIZE = 3'd0;

assign m_axi_ifc6_ARUSER = 1'd0;

assign m_axi_ifc6_AWADDR = 64'd0;

assign m_axi_ifc6_AWBURST = 2'd0;

assign m_axi_ifc6_AWCACHE = 4'd0;

assign m_axi_ifc6_AWID = 1'd0;

assign m_axi_ifc6_AWLEN = 32'd0;

assign m_axi_ifc6_AWLOCK = 2'd0;

assign m_axi_ifc6_AWPROT = 3'd0;

assign m_axi_ifc6_AWQOS = 4'd0;

assign m_axi_ifc6_AWREGION = 4'd0;

assign m_axi_ifc6_AWSIZE = 3'd0;

assign m_axi_ifc6_AWUSER = 1'd0;

assign m_axi_ifc6_AWVALID = 1'b0;

assign m_axi_ifc6_BREADY = 1'b0;

assign m_axi_ifc6_WDATA = 128'd0;

assign m_axi_ifc6_WID = 1'd0;

assign m_axi_ifc6_WLAST = 1'b0;

assign m_axi_ifc6_WSTRB = 16'd0;

assign m_axi_ifc6_WUSER = 1'd0;

assign m_axi_ifc6_WVALID = 1'b0;

assign or_ln161_1_fu_576_p2 = (sub_ln159_reg_828 | 11'd2);

assign or_ln161_2_fu_586_p2 = (sub_ln159_reg_828 | 11'd3);

assign or_ln161_3_fu_600_p2 = (sub_ln159_reg_828 | 11'd4);

assign or_ln161_4_fu_610_p2 = (sub_ln159_reg_828 | 11'd5);

assign or_ln161_5_fu_624_p2 = (sub_ln159_reg_828 | 11'd6);

assign or_ln161_6_fu_634_p2 = (sub_ln159_reg_828 | 11'd7);

assign or_ln161_fu_562_p2 = (sub_ln159_reg_828 | 11'd1);

assign sext_ln153_cast_fu_425_p1 = $signed(sext_ln153);

assign sext_ln155_1_fu_501_p1 = $signed(add_ln155_fu_495_p2);

assign sext_ln155_fu_491_p1 = $signed(sub_ln155_fu_485_p2);

assign sext_ln156_fu_544_p1 = $signed(trunc_ln6_reg_823);

assign shl_ln155_1_fu_461_p3 = {{ap_sig_allocacmp_i}, {5'd0}};

assign shl_ln4_fu_449_p3 = {{ap_sig_allocacmp_i}, {7'd0}};

assign shl_ln5_fu_525_p3 = {{trunc_ln159_fu_521_p1}, {3'd0}};

assign sub_ln155_fu_485_p2 = (zext_ln155_fu_457_p1 - zext_ln155_1_fu_481_p1);

assign sub_ln159_fu_533_p2 = (trunc_ln5_fu_473_p3 - shl_ln5_fu_525_p3);

assign trunc_ln155_fu_469_p1 = ap_sig_allocacmp_i[5:0];

assign trunc_ln159_fu_521_p1 = ap_sig_allocacmp_i[7:0];

assign trunc_ln5_fu_473_p3 = {{trunc_ln155_fu_469_p1}, {5'd0}};

assign trunc_ln674_3_fu_572_p1 = m_axi_ifc6_RDATA[31:0];

assign trunc_ln674_4_fu_596_p1 = m_axi_ifc6_RDATA[31:0];

assign trunc_ln674_5_fu_620_p1 = m_axi_ifc6_RDATA[31:0];

assign trunc_ln674_6_fu_644_p1 = m_axi_ifc6_RDATA[31:0];

assign trunc_ln674_7_fu_668_p1 = m_axi_ifc6_RDATA[31:0];

assign trunc_ln674_fu_554_p1 = m_axi_ifc6_RDATA[31:0];

assign zext_ln155_1_fu_481_p1 = shl_ln155_1_fu_461_p3;

assign zext_ln155_fu_457_p1 = shl_ln4_fu_449_p3;

assign zext_ln161_10_fu_687_p1 = add_ln161_3_fu_682_p2;

assign zext_ln161_11_fu_697_p1 = add_ln161_4_fu_692_p2;

assign zext_ln161_12_fu_707_p1 = add_ln161_5_fu_702_p2;

assign zext_ln161_13_fu_717_p1 = add_ln161_6_fu_712_p2;

assign zext_ln161_14_fu_727_p1 = add_ln161_7_fu_722_p2;

assign zext_ln161_15_fu_737_p1 = add_ln161_8_fu_732_p2;

assign zext_ln161_16_fu_747_p1 = add_ln161_9_fu_742_p2;

assign zext_ln161_17_fu_757_p1 = add_ln161_10_fu_752_p2;

assign zext_ln161_18_fu_767_p1 = add_ln161_11_fu_762_p2;

assign zext_ln161_19_fu_777_p1 = add_ln161_12_fu_772_p2;

assign zext_ln161_1_fu_581_p1 = or_ln161_1_fu_576_p2;

assign zext_ln161_20_fu_787_p1 = add_ln161_13_fu_782_p2;

assign zext_ln161_21_fu_797_p1 = add_ln161_14_fu_792_p2;

assign zext_ln161_22_fu_807_p1 = add_ln161_15_fu_802_p2;

assign zext_ln161_2_fu_591_p1 = or_ln161_2_fu_586_p2;

assign zext_ln161_3_fu_605_p1 = or_ln161_3_fu_600_p2;

assign zext_ln161_4_fu_615_p1 = or_ln161_4_fu_610_p2;

assign zext_ln161_5_fu_629_p1 = or_ln161_5_fu_624_p2;

assign zext_ln161_6_fu_639_p1 = or_ln161_6_fu_634_p2;

assign zext_ln161_7_fu_653_p1 = add_ln161_fu_648_p2;

assign zext_ln161_8_fu_663_p1 = add_ln161_1_fu_658_p2;

assign zext_ln161_9_fu_677_p1 = add_ln161_2_fu_672_p2;

assign zext_ln161_fu_567_p1 = or_ln161_fu_562_p2;

assign zext_ln674_fu_558_p1 = sub_ln159_reg_828;

always @ (posedge ap_clk) begin
    sub_ln159_reg_828[2:0] <= 3'b000;
    sub_ln159_reg_828_pp0_iter1_reg[2:0] <= 3'b000;
end

endmodule //LINEAR_ReadFromMem_Pipeline_VITIS_LOOP_153_8
