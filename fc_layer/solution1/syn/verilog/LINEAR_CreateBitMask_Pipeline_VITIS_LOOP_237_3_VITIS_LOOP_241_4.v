// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module LINEAR_CreateBitMask_Pipeline_VITIS_LOOP_237_3_VITIS_LOOP_241_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        weights_stream_0_0_0_030_dout,
        weights_stream_0_0_0_030_empty_n,
        weights_stream_0_0_0_030_read,
        weights_stream_0_0_0_029_dout,
        weights_stream_0_0_0_029_empty_n,
        weights_stream_0_0_0_029_read,
        weights_stream_0_0_0_028_dout,
        weights_stream_0_0_0_028_empty_n,
        weights_stream_0_0_0_028_read,
        weights_stream_0_0_0_027_dout,
        weights_stream_0_0_0_027_empty_n,
        weights_stream_0_0_0_027_read,
        weights_stream_0_0_0_026_dout,
        weights_stream_0_0_0_026_empty_n,
        weights_stream_0_0_0_026_read,
        weights_stream_0_0_0_025_dout,
        weights_stream_0_0_0_025_empty_n,
        weights_stream_0_0_0_025_read,
        weights_stream_0_0_0_024_dout,
        weights_stream_0_0_0_024_empty_n,
        weights_stream_0_0_0_024_read,
        weights_stream_0_0_0_023_dout,
        weights_stream_0_0_0_023_empty_n,
        weights_stream_0_0_0_023_read,
        weights_stream_0_0_0_022_dout,
        weights_stream_0_0_0_022_empty_n,
        weights_stream_0_0_0_022_read,
        weights_stream_0_0_0_021_dout,
        weights_stream_0_0_0_021_empty_n,
        weights_stream_0_0_0_021_read,
        weights_stream_0_0_0_020_dout,
        weights_stream_0_0_0_020_empty_n,
        weights_stream_0_0_0_020_read,
        weights_stream_0_0_0_019_dout,
        weights_stream_0_0_0_019_empty_n,
        weights_stream_0_0_0_019_read,
        weights_stream_0_0_0_018_dout,
        weights_stream_0_0_0_018_empty_n,
        weights_stream_0_0_0_018_read,
        weights_stream_0_0_0_017_dout,
        weights_stream_0_0_0_017_empty_n,
        weights_stream_0_0_0_017_read,
        weights_stream_0_0_0_016_dout,
        weights_stream_0_0_0_016_empty_n,
        weights_stream_0_0_0_016_read,
        weights_stream_0_0_0_015_dout,
        weights_stream_0_0_0_015_empty_n,
        weights_stream_0_0_0_015_read,
        weights_stream_0_0_0_014_dout,
        weights_stream_0_0_0_014_empty_n,
        weights_stream_0_0_0_014_read,
        weights_stream_0_0_0_013_dout,
        weights_stream_0_0_0_013_empty_n,
        weights_stream_0_0_0_013_read,
        weights_stream_0_0_0_012_dout,
        weights_stream_0_0_0_012_empty_n,
        weights_stream_0_0_0_012_read,
        weights_stream_0_0_0_011_dout,
        weights_stream_0_0_0_011_empty_n,
        weights_stream_0_0_0_011_read,
        weights_stream_0_0_0_010_dout,
        weights_stream_0_0_0_010_empty_n,
        weights_stream_0_0_0_010_read,
        weights_stream_0_0_0_09_dout,
        weights_stream_0_0_0_09_empty_n,
        weights_stream_0_0_0_09_read,
        weights_stream_0_0_0_08_dout,
        weights_stream_0_0_0_08_empty_n,
        weights_stream_0_0_0_08_read,
        weights_stream_0_0_0_07_dout,
        weights_stream_0_0_0_07_empty_n,
        weights_stream_0_0_0_07_read,
        weights_stream_0_0_0_06_dout,
        weights_stream_0_0_0_06_empty_n,
        weights_stream_0_0_0_06_read,
        weights_stream_0_0_0_05_dout,
        weights_stream_0_0_0_05_empty_n,
        weights_stream_0_0_0_05_read,
        weights_stream_0_0_0_04_dout,
        weights_stream_0_0_0_04_empty_n,
        weights_stream_0_0_0_04_read,
        weights_stream_0_0_0_03_dout,
        weights_stream_0_0_0_03_empty_n,
        weights_stream_0_0_0_03_read,
        weights_stream_0_0_0_02_dout,
        weights_stream_0_0_0_02_empty_n,
        weights_stream_0_0_0_02_read,
        weights_stream_0_0_0_01_dout,
        weights_stream_0_0_0_01_empty_n,
        weights_stream_0_0_0_01_read,
        weights_stream_0_0_0_0_dout,
        weights_stream_0_0_0_0_empty_n,
        weights_stream_0_0_0_0_read,
        weights_stream_0_0_0_031_dout,
        weights_stream_0_0_0_031_empty_n,
        weights_stream_0_0_0_031_read,
        processing_buffer_address0,
        processing_buffer_ce0,
        processing_buffer_we0,
        processing_buffer_d0,
        bit_buffer_weights_address0,
        bit_buffer_weights_ce0,
        bit_buffer_weights_we0,
        bit_buffer_weights_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] weights_stream_0_0_0_030_dout;
input   weights_stream_0_0_0_030_empty_n;
output   weights_stream_0_0_0_030_read;
input  [31:0] weights_stream_0_0_0_029_dout;
input   weights_stream_0_0_0_029_empty_n;
output   weights_stream_0_0_0_029_read;
input  [31:0] weights_stream_0_0_0_028_dout;
input   weights_stream_0_0_0_028_empty_n;
output   weights_stream_0_0_0_028_read;
input  [31:0] weights_stream_0_0_0_027_dout;
input   weights_stream_0_0_0_027_empty_n;
output   weights_stream_0_0_0_027_read;
input  [31:0] weights_stream_0_0_0_026_dout;
input   weights_stream_0_0_0_026_empty_n;
output   weights_stream_0_0_0_026_read;
input  [31:0] weights_stream_0_0_0_025_dout;
input   weights_stream_0_0_0_025_empty_n;
output   weights_stream_0_0_0_025_read;
input  [31:0] weights_stream_0_0_0_024_dout;
input   weights_stream_0_0_0_024_empty_n;
output   weights_stream_0_0_0_024_read;
input  [31:0] weights_stream_0_0_0_023_dout;
input   weights_stream_0_0_0_023_empty_n;
output   weights_stream_0_0_0_023_read;
input  [31:0] weights_stream_0_0_0_022_dout;
input   weights_stream_0_0_0_022_empty_n;
output   weights_stream_0_0_0_022_read;
input  [31:0] weights_stream_0_0_0_021_dout;
input   weights_stream_0_0_0_021_empty_n;
output   weights_stream_0_0_0_021_read;
input  [31:0] weights_stream_0_0_0_020_dout;
input   weights_stream_0_0_0_020_empty_n;
output   weights_stream_0_0_0_020_read;
input  [31:0] weights_stream_0_0_0_019_dout;
input   weights_stream_0_0_0_019_empty_n;
output   weights_stream_0_0_0_019_read;
input  [31:0] weights_stream_0_0_0_018_dout;
input   weights_stream_0_0_0_018_empty_n;
output   weights_stream_0_0_0_018_read;
input  [31:0] weights_stream_0_0_0_017_dout;
input   weights_stream_0_0_0_017_empty_n;
output   weights_stream_0_0_0_017_read;
input  [31:0] weights_stream_0_0_0_016_dout;
input   weights_stream_0_0_0_016_empty_n;
output   weights_stream_0_0_0_016_read;
input  [31:0] weights_stream_0_0_0_015_dout;
input   weights_stream_0_0_0_015_empty_n;
output   weights_stream_0_0_0_015_read;
input  [31:0] weights_stream_0_0_0_014_dout;
input   weights_stream_0_0_0_014_empty_n;
output   weights_stream_0_0_0_014_read;
input  [31:0] weights_stream_0_0_0_013_dout;
input   weights_stream_0_0_0_013_empty_n;
output   weights_stream_0_0_0_013_read;
input  [31:0] weights_stream_0_0_0_012_dout;
input   weights_stream_0_0_0_012_empty_n;
output   weights_stream_0_0_0_012_read;
input  [31:0] weights_stream_0_0_0_011_dout;
input   weights_stream_0_0_0_011_empty_n;
output   weights_stream_0_0_0_011_read;
input  [31:0] weights_stream_0_0_0_010_dout;
input   weights_stream_0_0_0_010_empty_n;
output   weights_stream_0_0_0_010_read;
input  [31:0] weights_stream_0_0_0_09_dout;
input   weights_stream_0_0_0_09_empty_n;
output   weights_stream_0_0_0_09_read;
input  [31:0] weights_stream_0_0_0_08_dout;
input   weights_stream_0_0_0_08_empty_n;
output   weights_stream_0_0_0_08_read;
input  [31:0] weights_stream_0_0_0_07_dout;
input   weights_stream_0_0_0_07_empty_n;
output   weights_stream_0_0_0_07_read;
input  [31:0] weights_stream_0_0_0_06_dout;
input   weights_stream_0_0_0_06_empty_n;
output   weights_stream_0_0_0_06_read;
input  [31:0] weights_stream_0_0_0_05_dout;
input   weights_stream_0_0_0_05_empty_n;
output   weights_stream_0_0_0_05_read;
input  [31:0] weights_stream_0_0_0_04_dout;
input   weights_stream_0_0_0_04_empty_n;
output   weights_stream_0_0_0_04_read;
input  [31:0] weights_stream_0_0_0_03_dout;
input   weights_stream_0_0_0_03_empty_n;
output   weights_stream_0_0_0_03_read;
input  [31:0] weights_stream_0_0_0_02_dout;
input   weights_stream_0_0_0_02_empty_n;
output   weights_stream_0_0_0_02_read;
input  [31:0] weights_stream_0_0_0_01_dout;
input   weights_stream_0_0_0_01_empty_n;
output   weights_stream_0_0_0_01_read;
input  [31:0] weights_stream_0_0_0_0_dout;
input   weights_stream_0_0_0_0_empty_n;
output   weights_stream_0_0_0_0_read;
input  [31:0] weights_stream_0_0_0_031_dout;
input   weights_stream_0_0_0_031_empty_n;
output   weights_stream_0_0_0_031_read;
output  [4:0] processing_buffer_address0;
output   processing_buffer_ce0;
output   processing_buffer_we0;
output  [639:0] processing_buffer_d0;
output  [4:0] bit_buffer_weights_address0;
output   bit_buffer_weights_ce0;
output   bit_buffer_weights_we0;
output  [19:0] bit_buffer_weights_d0;

reg ap_idle;
reg weights_stream_0_0_0_030_read;
reg weights_stream_0_0_0_029_read;
reg weights_stream_0_0_0_028_read;
reg weights_stream_0_0_0_027_read;
reg weights_stream_0_0_0_026_read;
reg weights_stream_0_0_0_025_read;
reg weights_stream_0_0_0_024_read;
reg weights_stream_0_0_0_023_read;
reg weights_stream_0_0_0_022_read;
reg weights_stream_0_0_0_021_read;
reg weights_stream_0_0_0_020_read;
reg weights_stream_0_0_0_019_read;
reg weights_stream_0_0_0_018_read;
reg weights_stream_0_0_0_017_read;
reg weights_stream_0_0_0_016_read;
reg weights_stream_0_0_0_015_read;
reg weights_stream_0_0_0_014_read;
reg weights_stream_0_0_0_013_read;
reg weights_stream_0_0_0_012_read;
reg weights_stream_0_0_0_011_read;
reg weights_stream_0_0_0_010_read;
reg weights_stream_0_0_0_09_read;
reg weights_stream_0_0_0_08_read;
reg weights_stream_0_0_0_07_read;
reg weights_stream_0_0_0_06_read;
reg weights_stream_0_0_0_05_read;
reg weights_stream_0_0_0_04_read;
reg weights_stream_0_0_0_03_read;
reg weights_stream_0_0_0_02_read;
reg weights_stream_0_0_0_01_read;
reg weights_stream_0_0_0_0_read;
reg weights_stream_0_0_0_031_read;
reg processing_buffer_ce0;
reg processing_buffer_we0;
reg bit_buffer_weights_ce0;
reg bit_buffer_weights_we0;
reg[19:0] bit_buffer_weights_d0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln237_reg_874;
reg   [4:0] trunc_ln237_reg_895;
reg    ap_predicate_op77_read_state2;
reg    ap_predicate_op79_read_state2;
reg    ap_predicate_op81_read_state2;
reg    ap_predicate_op83_read_state2;
reg    ap_predicate_op85_read_state2;
reg    ap_predicate_op87_read_state2;
reg    ap_predicate_op89_read_state2;
reg    ap_predicate_op91_read_state2;
reg    ap_predicate_op93_read_state2;
reg    ap_predicate_op95_read_state2;
reg    ap_predicate_op97_read_state2;
reg    ap_predicate_op99_read_state2;
reg    ap_predicate_op101_read_state2;
reg    ap_predicate_op103_read_state2;
reg    ap_predicate_op105_read_state2;
reg    ap_predicate_op107_read_state2;
reg    ap_predicate_op109_read_state2;
reg    ap_predicate_op111_read_state2;
reg    ap_predicate_op113_read_state2;
reg    ap_predicate_op115_read_state2;
reg    ap_predicate_op117_read_state2;
reg    ap_predicate_op119_read_state2;
reg    ap_predicate_op121_read_state2;
reg    ap_predicate_op123_read_state2;
reg    ap_predicate_op125_read_state2;
reg    ap_predicate_op127_read_state2;
reg    ap_predicate_op129_read_state2;
reg    ap_predicate_op131_read_state2;
reg    ap_predicate_op133_read_state2;
reg    ap_predicate_op135_read_state2;
reg    ap_predicate_op137_read_state2;
reg    ap_predicate_op139_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln237_fu_565_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    weights_stream_0_0_0_0_blk_n;
wire    ap_block_pp0_stage0;
reg    weights_stream_0_0_0_01_blk_n;
reg    weights_stream_0_0_0_02_blk_n;
reg    weights_stream_0_0_0_03_blk_n;
reg    weights_stream_0_0_0_04_blk_n;
reg    weights_stream_0_0_0_05_blk_n;
reg    weights_stream_0_0_0_06_blk_n;
reg    weights_stream_0_0_0_07_blk_n;
reg    weights_stream_0_0_0_08_blk_n;
reg    weights_stream_0_0_0_09_blk_n;
reg    weights_stream_0_0_0_010_blk_n;
reg    weights_stream_0_0_0_011_blk_n;
reg    weights_stream_0_0_0_012_blk_n;
reg    weights_stream_0_0_0_013_blk_n;
reg    weights_stream_0_0_0_014_blk_n;
reg    weights_stream_0_0_0_015_blk_n;
reg    weights_stream_0_0_0_016_blk_n;
reg    weights_stream_0_0_0_017_blk_n;
reg    weights_stream_0_0_0_018_blk_n;
reg    weights_stream_0_0_0_019_blk_n;
reg    weights_stream_0_0_0_020_blk_n;
reg    weights_stream_0_0_0_021_blk_n;
reg    weights_stream_0_0_0_022_blk_n;
reg    weights_stream_0_0_0_023_blk_n;
reg    weights_stream_0_0_0_024_blk_n;
reg    weights_stream_0_0_0_025_blk_n;
reg    weights_stream_0_0_0_026_blk_n;
reg    weights_stream_0_0_0_027_blk_n;
reg    weights_stream_0_0_0_028_blk_n;
reg    weights_stream_0_0_0_029_blk_n;
reg    weights_stream_0_0_0_030_blk_n;
reg    weights_stream_0_0_0_031_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln241_fu_589_p2;
reg   [0:0] icmp_ln241_reg_878;
wire   [4:0] select_ln237_fu_595_p3;
reg   [4:0] select_ln237_reg_884;
wire   [5:0] select_ln237_3_fu_603_p3;
reg   [5:0] select_ln237_3_reg_890;
wire   [4:0] trunc_ln237_fu_611_p1;
wire   [0:0] icmp_ln241_1_fu_621_p2;
reg   [0:0] icmp_ln241_1_reg_899;
reg   [31:0] ap_phi_mux_data_V_phi_fu_439_p64;
wire   [31:0] ap_phi_reg_pp0_iter1_data_V_reg_436;
wire   [63:0] zext_ln237_fu_662_p1;
reg   [19:0] p_Val2_21_fu_198;
reg   [19:0] p_Result_40_fu_818_p4;
wire    ap_loop_init;
reg   [639:0] p_Val2_s_fu_202;
wire   [639:0] p_Result_s_fu_801_p2;
reg   [4:0] j_3_fu_206;
reg   [4:0] ap_sig_allocacmp_j_3_load;
wire   [4:0] j_fu_615_p2;
reg   [5:0] i_fu_210;
reg   [5:0] ap_sig_allocacmp_i_load;
reg   [9:0] indvar_flatten_fu_214;
reg   [9:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [9:0] add_ln237_1_fu_571_p2;
wire   [5:0] add_ln237_fu_583_p2;
wire   [9:0] shl_ln_fu_670_p3;
wire   [9:0] or_ln244_fu_677_p2;
wire   [0:0] icmp_ln414_fu_687_p2;
wire   [9:0] sub_ln414_fu_693_p2;
wire   [9:0] select_ln414_fu_699_p3;
wire   [9:0] select_ln414_2_fu_715_p3;
wire   [9:0] select_ln414_1_fu_707_p3;
wire   [9:0] sub_ln414_1_fu_723_p2;
wire   [639:0] zext_ln225_fu_683_p1;
wire   [639:0] zext_ln414_fu_729_p1;
wire   [639:0] shl_ln414_fu_741_p2;
reg   [639:0] tmp_fu_747_p4;
wire   [639:0] zext_ln414_5_fu_733_p1;
wire   [639:0] zext_ln414_6_fu_737_p1;
wire   [639:0] shl_ln414_1_fu_765_p2;
wire   [639:0] lshr_ln414_fu_771_p2;
wire   [639:0] and_ln414_fu_777_p2;
wire   [639:0] select_ln237_1_fu_648_p3;
wire   [639:0] xor_ln414_fu_783_p2;
wire   [639:0] select_ln414_3_fu_757_p3;
wire   [639:0] and_ln414_1_fu_789_p2;
wire   [639:0] and_ln414_2_fu_795_p2;
wire   [0:0] tmp_105_fu_808_p2;
wire   [19:0] select_ln237_2_fu_655_p3;
wire   [31:0] zext_ln241_fu_667_p1;
wire   [19:0] zext_ln391_fu_814_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

LINEAR_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln237_fu_565_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_210 <= select_ln237_3_fu_603_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_210 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln237_fu_565_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_214 <= add_ln237_1_fu_571_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_214 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln237_fu_565_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_3_fu_206 <= j_fu_615_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_3_fu_206 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_Val2_21_fu_198 <= 20'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            p_Val2_21_fu_198 <= p_Result_40_fu_818_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_Val2_s_fu_202 <= 640'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            p_Val2_s_fu_202 <= p_Result_s_fu_801_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln237_reg_874 <= icmp_ln237_fu_565_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln237_fu_565_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln241_1_reg_899 <= icmp_ln241_1_fu_621_p2;
        icmp_ln241_reg_878 <= icmp_ln241_fu_589_p2;
        select_ln237_3_reg_890 <= select_ln237_3_fu_603_p3;
        select_ln237_reg_884 <= select_ln237_fu_595_p3;
        trunc_ln237_reg_895 <= trunc_ln237_fu_611_p1;
    end
end

always @ (*) begin
    if (((icmp_ln237_fu_565_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln237_reg_874 == 1'd0)) begin
        if ((trunc_ln237_reg_895 == 5'd0)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_0_dout;
        end else if ((trunc_ln237_reg_895 == 5'd1)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_01_dout;
        end else if ((trunc_ln237_reg_895 == 5'd2)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_02_dout;
        end else if ((trunc_ln237_reg_895 == 5'd3)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_03_dout;
        end else if ((trunc_ln237_reg_895 == 5'd4)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_04_dout;
        end else if ((trunc_ln237_reg_895 == 5'd5)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_05_dout;
        end else if ((trunc_ln237_reg_895 == 5'd6)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_06_dout;
        end else if ((trunc_ln237_reg_895 == 5'd7)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_07_dout;
        end else if ((trunc_ln237_reg_895 == 5'd8)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_08_dout;
        end else if ((trunc_ln237_reg_895 == 5'd9)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_09_dout;
        end else if ((trunc_ln237_reg_895 == 5'd10)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_010_dout;
        end else if ((trunc_ln237_reg_895 == 5'd11)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_011_dout;
        end else if ((trunc_ln237_reg_895 == 5'd12)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_012_dout;
        end else if ((trunc_ln237_reg_895 == 5'd13)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_013_dout;
        end else if ((trunc_ln237_reg_895 == 5'd14)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_014_dout;
        end else if ((trunc_ln237_reg_895 == 5'd15)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_015_dout;
        end else if ((trunc_ln237_reg_895 == 5'd16)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_016_dout;
        end else if ((trunc_ln237_reg_895 == 5'd17)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_017_dout;
        end else if ((trunc_ln237_reg_895 == 5'd18)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_018_dout;
        end else if ((trunc_ln237_reg_895 == 5'd19)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_019_dout;
        end else if ((trunc_ln237_reg_895 == 5'd20)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_020_dout;
        end else if ((trunc_ln237_reg_895 == 5'd21)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_021_dout;
        end else if ((trunc_ln237_reg_895 == 5'd22)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_022_dout;
        end else if ((trunc_ln237_reg_895 == 5'd23)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_023_dout;
        end else if ((trunc_ln237_reg_895 == 5'd24)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_024_dout;
        end else if ((trunc_ln237_reg_895 == 5'd25)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_025_dout;
        end else if ((trunc_ln237_reg_895 == 5'd26)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_026_dout;
        end else if ((trunc_ln237_reg_895 == 5'd27)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_027_dout;
        end else if ((trunc_ln237_reg_895 == 5'd28)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_028_dout;
        end else if ((trunc_ln237_reg_895 == 5'd29)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_029_dout;
        end else if ((trunc_ln237_reg_895 == 5'd30)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_030_dout;
        end else if ((trunc_ln237_reg_895 == 5'd31)) begin
            ap_phi_mux_data_V_phi_fu_439_p64 = weights_stream_0_0_0_031_dout;
        end else begin
            ap_phi_mux_data_V_phi_fu_439_p64 = ap_phi_reg_pp0_iter1_data_V_reg_436;
        end
    end else begin
        ap_phi_mux_data_V_phi_fu_439_p64 = ap_phi_reg_pp0_iter1_data_V_reg_436;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 6'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_210;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_214;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_3_load = 5'd0;
    end else begin
        ap_sig_allocacmp_j_3_load = j_3_fu_206;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bit_buffer_weights_ce0 = 1'b1;
    end else begin
        bit_buffer_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln241_1_reg_899 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bit_buffer_weights_we0 = 1'b1;
    end else begin
        bit_buffer_weights_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        processing_buffer_ce0 = 1'b1;
    end else begin
        processing_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln241_1_reg_899 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        processing_buffer_we0 = 1'b1;
    end else begin
        processing_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op117_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_010_blk_n = weights_stream_0_0_0_010_empty_n;
    end else begin
        weights_stream_0_0_0_010_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op117_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_010_read = 1'b1;
    end else begin
        weights_stream_0_0_0_010_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op115_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_011_blk_n = weights_stream_0_0_0_011_empty_n;
    end else begin
        weights_stream_0_0_0_011_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op115_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_011_read = 1'b1;
    end else begin
        weights_stream_0_0_0_011_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op113_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_012_blk_n = weights_stream_0_0_0_012_empty_n;
    end else begin
        weights_stream_0_0_0_012_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op113_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_012_read = 1'b1;
    end else begin
        weights_stream_0_0_0_012_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op111_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_013_blk_n = weights_stream_0_0_0_013_empty_n;
    end else begin
        weights_stream_0_0_0_013_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op111_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_013_read = 1'b1;
    end else begin
        weights_stream_0_0_0_013_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op109_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_014_blk_n = weights_stream_0_0_0_014_empty_n;
    end else begin
        weights_stream_0_0_0_014_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op109_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_014_read = 1'b1;
    end else begin
        weights_stream_0_0_0_014_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op107_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_015_blk_n = weights_stream_0_0_0_015_empty_n;
    end else begin
        weights_stream_0_0_0_015_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op107_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_015_read = 1'b1;
    end else begin
        weights_stream_0_0_0_015_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op105_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_016_blk_n = weights_stream_0_0_0_016_empty_n;
    end else begin
        weights_stream_0_0_0_016_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op105_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_016_read = 1'b1;
    end else begin
        weights_stream_0_0_0_016_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op103_read_state2 == 1'b1))) begin
        weights_stream_0_0_0_017_blk_n = weights_stream_0_0_0_017_empty_n;
    end else begin
        weights_stream_0_0_0_017_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op103_read_state2 == 1'b1))) begin
        weights_stream_0_0_0_017_read = 1'b1;
    end else begin
        weights_stream_0_0_0_017_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op101_read_state2 == 1'b1))) begin
        weights_stream_0_0_0_018_blk_n = weights_stream_0_0_0_018_empty_n;
    end else begin
        weights_stream_0_0_0_018_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op101_read_state2 == 1'b1))) begin
        weights_stream_0_0_0_018_read = 1'b1;
    end else begin
        weights_stream_0_0_0_018_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op99_read_state2 == 1'b1))) begin
        weights_stream_0_0_0_019_blk_n = weights_stream_0_0_0_019_empty_n;
    end else begin
        weights_stream_0_0_0_019_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op99_read_state2 == 1'b1))) begin
        weights_stream_0_0_0_019_read = 1'b1;
    end else begin
        weights_stream_0_0_0_019_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op135_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_01_blk_n = weights_stream_0_0_0_01_empty_n;
    end else begin
        weights_stream_0_0_0_01_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op135_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_01_read = 1'b1;
    end else begin
        weights_stream_0_0_0_01_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op97_read_state2 == 1'b1))) begin
        weights_stream_0_0_0_020_blk_n = weights_stream_0_0_0_020_empty_n;
    end else begin
        weights_stream_0_0_0_020_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op97_read_state2 == 1'b1))) begin
        weights_stream_0_0_0_020_read = 1'b1;
    end else begin
        weights_stream_0_0_0_020_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op95_read_state2 == 1'b1))) begin
        weights_stream_0_0_0_021_blk_n = weights_stream_0_0_0_021_empty_n;
    end else begin
        weights_stream_0_0_0_021_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op95_read_state2 == 1'b1))) begin
        weights_stream_0_0_0_021_read = 1'b1;
    end else begin
        weights_stream_0_0_0_021_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op93_read_state2 == 1'b1))) begin
        weights_stream_0_0_0_022_blk_n = weights_stream_0_0_0_022_empty_n;
    end else begin
        weights_stream_0_0_0_022_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op93_read_state2 == 1'b1))) begin
        weights_stream_0_0_0_022_read = 1'b1;
    end else begin
        weights_stream_0_0_0_022_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op91_read_state2 == 1'b1))) begin
        weights_stream_0_0_0_023_blk_n = weights_stream_0_0_0_023_empty_n;
    end else begin
        weights_stream_0_0_0_023_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op91_read_state2 == 1'b1))) begin
        weights_stream_0_0_0_023_read = 1'b1;
    end else begin
        weights_stream_0_0_0_023_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op89_read_state2 == 1'b1))) begin
        weights_stream_0_0_0_024_blk_n = weights_stream_0_0_0_024_empty_n;
    end else begin
        weights_stream_0_0_0_024_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op89_read_state2 == 1'b1))) begin
        weights_stream_0_0_0_024_read = 1'b1;
    end else begin
        weights_stream_0_0_0_024_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op87_read_state2 == 1'b1))) begin
        weights_stream_0_0_0_025_blk_n = weights_stream_0_0_0_025_empty_n;
    end else begin
        weights_stream_0_0_0_025_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op87_read_state2 == 1'b1))) begin
        weights_stream_0_0_0_025_read = 1'b1;
    end else begin
        weights_stream_0_0_0_025_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op85_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_026_blk_n = weights_stream_0_0_0_026_empty_n;
    end else begin
        weights_stream_0_0_0_026_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op85_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_026_read = 1'b1;
    end else begin
        weights_stream_0_0_0_026_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op83_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_027_blk_n = weights_stream_0_0_0_027_empty_n;
    end else begin
        weights_stream_0_0_0_027_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op83_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_027_read = 1'b1;
    end else begin
        weights_stream_0_0_0_027_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op81_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_028_blk_n = weights_stream_0_0_0_028_empty_n;
    end else begin
        weights_stream_0_0_0_028_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op81_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_028_read = 1'b1;
    end else begin
        weights_stream_0_0_0_028_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op79_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_029_blk_n = weights_stream_0_0_0_029_empty_n;
    end else begin
        weights_stream_0_0_0_029_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op79_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_029_read = 1'b1;
    end else begin
        weights_stream_0_0_0_029_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op133_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_02_blk_n = weights_stream_0_0_0_02_empty_n;
    end else begin
        weights_stream_0_0_0_02_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op133_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_02_read = 1'b1;
    end else begin
        weights_stream_0_0_0_02_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op77_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_030_blk_n = weights_stream_0_0_0_030_empty_n;
    end else begin
        weights_stream_0_0_0_030_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op77_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_030_read = 1'b1;
    end else begin
        weights_stream_0_0_0_030_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op139_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_031_blk_n = weights_stream_0_0_0_031_empty_n;
    end else begin
        weights_stream_0_0_0_031_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op139_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_031_read = 1'b1;
    end else begin
        weights_stream_0_0_0_031_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op131_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_03_blk_n = weights_stream_0_0_0_03_empty_n;
    end else begin
        weights_stream_0_0_0_03_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op131_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_03_read = 1'b1;
    end else begin
        weights_stream_0_0_0_03_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op129_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_04_blk_n = weights_stream_0_0_0_04_empty_n;
    end else begin
        weights_stream_0_0_0_04_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op129_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_04_read = 1'b1;
    end else begin
        weights_stream_0_0_0_04_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op127_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_05_blk_n = weights_stream_0_0_0_05_empty_n;
    end else begin
        weights_stream_0_0_0_05_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op127_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_05_read = 1'b1;
    end else begin
        weights_stream_0_0_0_05_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op125_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_06_blk_n = weights_stream_0_0_0_06_empty_n;
    end else begin
        weights_stream_0_0_0_06_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op125_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_06_read = 1'b1;
    end else begin
        weights_stream_0_0_0_06_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op123_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_07_blk_n = weights_stream_0_0_0_07_empty_n;
    end else begin
        weights_stream_0_0_0_07_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op123_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_07_read = 1'b1;
    end else begin
        weights_stream_0_0_0_07_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op121_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_08_blk_n = weights_stream_0_0_0_08_empty_n;
    end else begin
        weights_stream_0_0_0_08_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op121_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_08_read = 1'b1;
    end else begin
        weights_stream_0_0_0_08_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op119_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_09_blk_n = weights_stream_0_0_0_09_empty_n;
    end else begin
        weights_stream_0_0_0_09_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op119_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_09_read = 1'b1;
    end else begin
        weights_stream_0_0_0_09_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op137_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_0_blk_n = weights_stream_0_0_0_0_empty_n;
    end else begin
        weights_stream_0_0_0_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op137_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_0_0_0_0_read = 1'b1;
    end else begin
        weights_stream_0_0_0_0_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln237_1_fu_571_p2 = (ap_sig_allocacmp_indvar_flatten_load + 10'd1);

assign add_ln237_fu_583_p2 = (ap_sig_allocacmp_i_load + 6'd1);

assign and_ln414_1_fu_789_p2 = (xor_ln414_fu_783_p2 & select_ln237_1_fu_648_p3);

assign and_ln414_2_fu_795_p2 = (select_ln414_3_fu_757_p3 & and_ln414_fu_777_p2);

assign and_ln414_fu_777_p2 = (shl_ln414_1_fu_765_p2 & lshr_ln414_fu_771_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((weights_stream_0_0_0_025_empty_n == 1'b0) & (ap_predicate_op87_read_state2 == 1'b1)) | ((ap_predicate_op85_read_state2 == 1'b1) & (weights_stream_0_0_0_026_empty_n == 1'b0)) | ((ap_predicate_op83_read_state2 == 1'b1) & (weights_stream_0_0_0_027_empty_n == 1'b0)) | ((ap_predicate_op81_read_state2 == 1'b1) & (weights_stream_0_0_0_028_empty_n == 1'b0)) | ((ap_predicate_op79_read_state2 == 1'b1) & (weights_stream_0_0_0_029_empty_n == 1'b0)) | ((ap_predicate_op77_read_state2 == 1'b1) & (weights_stream_0_0_0_030_empty_n == 1'b0)) | ((ap_predicate_op139_read_state2 == 1'b1) & (weights_stream_0_0_0_031_empty_n == 1'b0)) | ((ap_predicate_op137_read_state2 == 1'b1) & (weights_stream_0_0_0_0_empty_n == 1'b0)) | ((ap_predicate_op135_read_state2 == 1'b1) & (weights_stream_0_0_0_01_empty_n == 1'b0)) | ((ap_predicate_op133_read_state2 == 1'b1) & (weights_stream_0_0_0_02_empty_n == 1'b0)) | ((ap_predicate_op131_read_state2 == 1'b1) & (weights_stream_0_0_0_03_empty_n == 1'b0)) | ((ap_predicate_op129_read_state2 == 1'b1) & (weights_stream_0_0_0_04_empty_n == 1'b0)) | ((ap_predicate_op127_read_state2 == 1'b1) & (weights_stream_0_0_0_05_empty_n == 1'b0)) | ((ap_predicate_op125_read_state2 == 1'b1) & (weights_stream_0_0_0_06_empty_n == 1'b0)) | ((ap_predicate_op123_read_state2 == 1'b1) & (weights_stream_0_0_0_07_empty_n == 1'b0)) | ((ap_predicate_op121_read_state2 == 1'b1) & (weights_stream_0_0_0_08_empty_n == 1'b0)) | ((ap_predicate_op119_read_state2 == 1'b1) & (weights_stream_0_0_0_09_empty_n == 1'b0)) | ((ap_predicate_op117_read_state2 == 1'b1) & (weights_stream_0_0_0_010_empty_n == 1'b0)) | ((ap_predicate_op115_read_state2 == 1'b1) & (weights_stream_0_0_0_011_empty_n == 1'b0)) | ((ap_predicate_op113_read_state2 == 1'b1) & (weights_stream_0_0_0_012_empty_n == 1'b0)) | ((ap_predicate_op111_read_state2 == 1'b1) & (weights_stream_0_0_0_013_empty_n == 1'b0)) | ((ap_predicate_op109_read_state2 == 1'b1) & (weights_stream_0_0_0_014_empty_n == 1'b0)) | ((ap_predicate_op107_read_state2 == 1'b1) & (weights_stream_0_0_0_015_empty_n == 1'b0)) | ((ap_predicate_op105_read_state2 == 1'b1) & (weights_stream_0_0_0_016_empty_n == 1'b0)) | ((ap_predicate_op103_read_state2 == 1'b1) & (weights_stream_0_0_0_017_empty_n == 1'b0)) | ((ap_predicate_op101_read_state2 == 1'b1) & (weights_stream_0_0_0_018_empty_n == 1'b0)) | ((ap_predicate_op99_read_state2 == 1'b1) & (weights_stream_0_0_0_019_empty_n == 1'b0)) | ((ap_predicate_op97_read_state2 == 1'b1) & (weights_stream_0_0_0_020_empty_n == 1'b0)) | ((ap_predicate_op95_read_state2 == 1'b1) & (weights_stream_0_0_0_021_empty_n == 1'b0)) | ((ap_predicate_op93_read_state2 == 1'b1) & (weights_stream_0_0_0_022_empty_n == 1'b0)) | ((ap_predicate_op91_read_state2 == 1'b1) & (weights_stream_0_0_0_023_empty_n == 1'b0)) | ((ap_predicate_op89_read_state2 == 1'b1) & (weights_stream_0_0_0_024_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((weights_stream_0_0_0_025_empty_n == 1'b0) & (ap_predicate_op87_read_state2 == 1'b1)) | ((ap_predicate_op85_read_state2 == 1'b1) & (weights_stream_0_0_0_026_empty_n == 1'b0)) | ((ap_predicate_op83_read_state2 == 1'b1) & (weights_stream_0_0_0_027_empty_n == 1'b0)) | ((ap_predicate_op81_read_state2 == 1'b1) & (weights_stream_0_0_0_028_empty_n == 1'b0)) | ((ap_predicate_op79_read_state2 == 1'b1) & (weights_stream_0_0_0_029_empty_n == 1'b0)) | ((ap_predicate_op77_read_state2 == 1'b1) & (weights_stream_0_0_0_030_empty_n == 1'b0)) | ((ap_predicate_op139_read_state2 == 1'b1) & (weights_stream_0_0_0_031_empty_n == 1'b0)) | ((ap_predicate_op137_read_state2 == 1'b1) & (weights_stream_0_0_0_0_empty_n == 1'b0)) | ((ap_predicate_op135_read_state2 == 1'b1) & (weights_stream_0_0_0_01_empty_n == 1'b0)) | ((ap_predicate_op133_read_state2 == 1'b1) & (weights_stream_0_0_0_02_empty_n == 1'b0)) | ((ap_predicate_op131_read_state2 == 1'b1) & (weights_stream_0_0_0_03_empty_n == 1'b0)) | ((ap_predicate_op129_read_state2 == 1'b1) & (weights_stream_0_0_0_04_empty_n == 1'b0)) | ((ap_predicate_op127_read_state2 == 1'b1) & (weights_stream_0_0_0_05_empty_n == 1'b0)) | ((ap_predicate_op125_read_state2 == 1'b1) & (weights_stream_0_0_0_06_empty_n == 1'b0)) | ((ap_predicate_op123_read_state2 == 1'b1) & (weights_stream_0_0_0_07_empty_n == 1'b0)) | ((ap_predicate_op121_read_state2 == 1'b1) & (weights_stream_0_0_0_08_empty_n == 1'b0)) | ((ap_predicate_op119_read_state2 == 1'b1) & (weights_stream_0_0_0_09_empty_n == 1'b0)) | ((ap_predicate_op117_read_state2 == 1'b1) & (weights_stream_0_0_0_010_empty_n == 1'b0)) | ((ap_predicate_op115_read_state2 == 1'b1) & (weights_stream_0_0_0_011_empty_n == 1'b0)) | ((ap_predicate_op113_read_state2 == 1'b1) & (weights_stream_0_0_0_012_empty_n == 1'b0)) | ((ap_predicate_op111_read_state2 == 1'b1) & (weights_stream_0_0_0_013_empty_n == 1'b0)) | ((ap_predicate_op109_read_state2 == 1'b1) & (weights_stream_0_0_0_014_empty_n == 1'b0)) | ((ap_predicate_op107_read_state2 == 1'b1) & (weights_stream_0_0_0_015_empty_n == 1'b0)) | ((ap_predicate_op105_read_state2 == 1'b1) & (weights_stream_0_0_0_016_empty_n == 1'b0)) | ((ap_predicate_op103_read_state2 == 1'b1) & (weights_stream_0_0_0_017_empty_n == 1'b0)) | ((ap_predicate_op101_read_state2 == 1'b1) & (weights_stream_0_0_0_018_empty_n == 1'b0)) | ((ap_predicate_op99_read_state2 == 1'b1) & (weights_stream_0_0_0_019_empty_n == 1'b0)) | ((ap_predicate_op97_read_state2 == 1'b1) & (weights_stream_0_0_0_020_empty_n == 1'b0)) | ((ap_predicate_op95_read_state2 == 1'b1) & (weights_stream_0_0_0_021_empty_n == 1'b0)) | ((ap_predicate_op93_read_state2 == 1'b1) & (weights_stream_0_0_0_022_empty_n == 1'b0)) | ((ap_predicate_op91_read_state2 == 1'b1) & (weights_stream_0_0_0_023_empty_n == 1'b0)) | ((ap_predicate_op89_read_state2 == 1'b1) & (weights_stream_0_0_0_024_empty_n == 1'b0))));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((weights_stream_0_0_0_025_empty_n == 1'b0) & (ap_predicate_op87_read_state2 == 1'b1)) | ((ap_predicate_op85_read_state2 == 1'b1) & (weights_stream_0_0_0_026_empty_n == 1'b0)) | ((ap_predicate_op83_read_state2 == 1'b1) & (weights_stream_0_0_0_027_empty_n == 1'b0)) | ((ap_predicate_op81_read_state2 == 1'b1) & (weights_stream_0_0_0_028_empty_n == 1'b0)) | ((ap_predicate_op79_read_state2 == 1'b1) & (weights_stream_0_0_0_029_empty_n == 1'b0)) | ((ap_predicate_op77_read_state2 == 1'b1) & (weights_stream_0_0_0_030_empty_n == 1'b0)) | ((ap_predicate_op139_read_state2 == 1'b1) & (weights_stream_0_0_0_031_empty_n == 1'b0)) | ((ap_predicate_op137_read_state2 == 1'b1) & (weights_stream_0_0_0_0_empty_n == 1'b0)) | ((ap_predicate_op135_read_state2 == 1'b1) & (weights_stream_0_0_0_01_empty_n == 1'b0)) | ((ap_predicate_op133_read_state2 == 1'b1) & (weights_stream_0_0_0_02_empty_n == 1'b0)) | ((ap_predicate_op131_read_state2 == 1'b1) & (weights_stream_0_0_0_03_empty_n == 1'b0)) | ((ap_predicate_op129_read_state2 == 1'b1) & (weights_stream_0_0_0_04_empty_n == 1'b0)) | ((ap_predicate_op127_read_state2 == 1'b1) & (weights_stream_0_0_0_05_empty_n == 1'b0)) | ((ap_predicate_op125_read_state2 == 1'b1) & (weights_stream_0_0_0_06_empty_n == 1'b0)) | ((ap_predicate_op123_read_state2 == 1'b1) & (weights_stream_0_0_0_07_empty_n == 1'b0)) | ((ap_predicate_op121_read_state2 == 1'b1) & (weights_stream_0_0_0_08_empty_n == 1'b0)) | ((ap_predicate_op119_read_state2 == 1'b1) & (weights_stream_0_0_0_09_empty_n == 1'b0)) | ((ap_predicate_op117_read_state2 == 1'b1) & (weights_stream_0_0_0_010_empty_n == 1'b0)) | ((ap_predicate_op115_read_state2 == 1'b1) & (weights_stream_0_0_0_011_empty_n == 1'b0)) | ((ap_predicate_op113_read_state2 == 1'b1) & (weights_stream_0_0_0_012_empty_n == 1'b0)) | ((ap_predicate_op111_read_state2 == 1'b1) & (weights_stream_0_0_0_013_empty_n == 1'b0)) | ((ap_predicate_op109_read_state2 == 1'b1) & (weights_stream_0_0_0_014_empty_n == 1'b0)) | ((ap_predicate_op107_read_state2 == 1'b1) & (weights_stream_0_0_0_015_empty_n == 1'b0)) | ((ap_predicate_op105_read_state2 == 1'b1) & (weights_stream_0_0_0_016_empty_n == 1'b0)) | ((ap_predicate_op103_read_state2 == 1'b1) & (weights_stream_0_0_0_017_empty_n == 1'b0)) | ((ap_predicate_op101_read_state2 == 1'b1) & (weights_stream_0_0_0_018_empty_n == 1'b0)) | ((ap_predicate_op99_read_state2 == 1'b1) & (weights_stream_0_0_0_019_empty_n == 1'b0)) | ((ap_predicate_op97_read_state2 == 1'b1) & (weights_stream_0_0_0_020_empty_n == 1'b0)) | ((ap_predicate_op95_read_state2 == 1'b1) & (weights_stream_0_0_0_021_empty_n == 1'b0)) | ((ap_predicate_op93_read_state2 == 1'b1) & (weights_stream_0_0_0_022_empty_n == 1'b0)) | ((ap_predicate_op91_read_state2 == 1'b1) & (weights_stream_0_0_0_023_empty_n == 1'b0)) | ((ap_predicate_op89_read_state2 == 1'b1) & (weights_stream_0_0_0_024_empty_n == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter1_data_V_reg_436 = 'bx;

always @ (*) begin
    ap_predicate_op101_read_state2 = ((trunc_ln237_reg_895 == 5'd18) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op103_read_state2 = ((trunc_ln237_reg_895 == 5'd17) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op105_read_state2 = ((trunc_ln237_reg_895 == 5'd16) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op107_read_state2 = ((trunc_ln237_reg_895 == 5'd15) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op109_read_state2 = ((trunc_ln237_reg_895 == 5'd14) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op111_read_state2 = ((trunc_ln237_reg_895 == 5'd13) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op113_read_state2 = ((trunc_ln237_reg_895 == 5'd12) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op115_read_state2 = ((trunc_ln237_reg_895 == 5'd11) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op117_read_state2 = ((trunc_ln237_reg_895 == 5'd10) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op119_read_state2 = ((trunc_ln237_reg_895 == 5'd9) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op121_read_state2 = ((trunc_ln237_reg_895 == 5'd8) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op123_read_state2 = ((trunc_ln237_reg_895 == 5'd7) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op125_read_state2 = ((trunc_ln237_reg_895 == 5'd6) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op127_read_state2 = ((trunc_ln237_reg_895 == 5'd5) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op129_read_state2 = ((trunc_ln237_reg_895 == 5'd4) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op131_read_state2 = ((trunc_ln237_reg_895 == 5'd3) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op133_read_state2 = ((trunc_ln237_reg_895 == 5'd2) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op135_read_state2 = ((trunc_ln237_reg_895 == 5'd1) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op137_read_state2 = ((trunc_ln237_reg_895 == 5'd0) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op139_read_state2 = ((trunc_ln237_reg_895 == 5'd31) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op77_read_state2 = ((trunc_ln237_reg_895 == 5'd30) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op79_read_state2 = ((trunc_ln237_reg_895 == 5'd29) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op81_read_state2 = ((trunc_ln237_reg_895 == 5'd28) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op83_read_state2 = ((trunc_ln237_reg_895 == 5'd27) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op85_read_state2 = ((trunc_ln237_reg_895 == 5'd26) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op87_read_state2 = ((trunc_ln237_reg_895 == 5'd25) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op89_read_state2 = ((trunc_ln237_reg_895 == 5'd24) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op91_read_state2 = ((trunc_ln237_reg_895 == 5'd23) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op93_read_state2 = ((trunc_ln237_reg_895 == 5'd22) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op95_read_state2 = ((trunc_ln237_reg_895 == 5'd21) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op97_read_state2 = ((trunc_ln237_reg_895 == 5'd20) & (icmp_ln237_reg_874 == 1'd0));
end

always @ (*) begin
    ap_predicate_op99_read_state2 = ((trunc_ln237_reg_895 == 5'd19) & (icmp_ln237_reg_874 == 1'd0));
end

assign bit_buffer_weights_address0 = zext_ln237_fu_662_p1;

always @ (*) begin
    bit_buffer_weights_d0 = select_ln237_2_fu_655_p3;
    bit_buffer_weights_d0[zext_ln241_fu_667_p1] = |(zext_ln391_fu_814_p1);
end

assign icmp_ln237_fu_565_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 10'd640) ? 1'b1 : 1'b0);

assign icmp_ln241_1_fu_621_p2 = ((j_fu_615_p2 == 5'd20) ? 1'b1 : 1'b0);

assign icmp_ln241_fu_589_p2 = ((ap_sig_allocacmp_j_3_load == 5'd20) ? 1'b1 : 1'b0);

assign icmp_ln414_fu_687_p2 = ((shl_ln_fu_670_p3 > or_ln244_fu_677_p2) ? 1'b1 : 1'b0);

assign j_fu_615_p2 = (select_ln237_fu_595_p3 + 5'd1);

assign lshr_ln414_fu_771_p2 = 640'd4562440617622195218641171605700291324893228507248559930579192517899275167208677386505912811317371399778642309573594407310688704721375437998252661319722214188251994674360264950082874192246603775 >> zext_ln414_6_fu_737_p1;

assign or_ln244_fu_677_p2 = (shl_ln_fu_670_p3 | 10'd31);

always @ (*) begin
    p_Result_40_fu_818_p4 = select_ln237_2_fu_655_p3;
    p_Result_40_fu_818_p4[zext_ln241_fu_667_p1] = |(zext_ln391_fu_814_p1);
end

assign p_Result_s_fu_801_p2 = (and_ln414_2_fu_795_p2 | and_ln414_1_fu_789_p2);

assign processing_buffer_address0 = zext_ln237_fu_662_p1;

assign processing_buffer_d0 = (and_ln414_2_fu_795_p2 | and_ln414_1_fu_789_p2);

assign select_ln237_1_fu_648_p3 = ((icmp_ln241_reg_878[0:0] == 1'b1) ? 640'd0 : p_Val2_s_fu_202);

assign select_ln237_2_fu_655_p3 = ((icmp_ln241_reg_878[0:0] == 1'b1) ? 20'd0 : p_Val2_21_fu_198);

assign select_ln237_3_fu_603_p3 = ((icmp_ln241_fu_589_p2[0:0] == 1'b1) ? add_ln237_fu_583_p2 : ap_sig_allocacmp_i_load);

assign select_ln237_fu_595_p3 = ((icmp_ln241_fu_589_p2[0:0] == 1'b1) ? 5'd0 : ap_sig_allocacmp_j_3_load);

assign select_ln414_1_fu_707_p3 = ((icmp_ln414_fu_687_p2[0:0] == 1'b1) ? or_ln244_fu_677_p2 : shl_ln_fu_670_p3);

assign select_ln414_2_fu_715_p3 = ((icmp_ln414_fu_687_p2[0:0] == 1'b1) ? sub_ln414_fu_693_p2 : shl_ln_fu_670_p3);

assign select_ln414_3_fu_757_p3 = ((icmp_ln414_fu_687_p2[0:0] == 1'b1) ? tmp_fu_747_p4 : shl_ln414_fu_741_p2);

assign select_ln414_fu_699_p3 = ((icmp_ln414_fu_687_p2[0:0] == 1'b1) ? shl_ln_fu_670_p3 : or_ln244_fu_677_p2);

assign shl_ln414_1_fu_765_p2 = 640'd4562440617622195218641171605700291324893228507248559930579192517899275167208677386505912811317371399778642309573594407310688704721375437998252661319722214188251994674360264950082874192246603775 << zext_ln414_5_fu_733_p1;

assign shl_ln414_fu_741_p2 = zext_ln225_fu_683_p1 << zext_ln414_fu_729_p1;

assign shl_ln_fu_670_p3 = {{select_ln237_reg_884}, {5'd0}};

assign sub_ln414_1_fu_723_p2 = ($signed(10'd639) - $signed(select_ln414_fu_699_p3));

assign sub_ln414_fu_693_p2 = ($signed(10'd639) - $signed(shl_ln_fu_670_p3));

assign tmp_105_fu_808_p2 = ((ap_phi_mux_data_V_phi_fu_439_p64 != 32'd0) ? 1'b1 : 1'b0);

integer ap_tvar_int_0;

always @ (shl_ln414_fu_741_p2) begin
    for (ap_tvar_int_0 = 640 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 639 - 0) begin
            tmp_fu_747_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_fu_747_p4[ap_tvar_int_0] = shl_ln414_fu_741_p2[639 - ap_tvar_int_0];
        end
    end
end

assign trunc_ln237_fu_611_p1 = select_ln237_3_fu_603_p3[4:0];

assign xor_ln414_fu_783_p2 = (640'd4562440617622195218641171605700291324893228507248559930579192517899275167208677386505912811317371399778642309573594407310688704721375437998252661319722214188251994674360264950082874192246603775 ^ and_ln414_fu_777_p2);

assign zext_ln225_fu_683_p1 = ap_phi_mux_data_V_phi_fu_439_p64;

assign zext_ln237_fu_662_p1 = select_ln237_3_reg_890;

assign zext_ln241_fu_667_p1 = select_ln237_reg_884;

assign zext_ln391_fu_814_p1 = tmp_105_fu_808_p2;

assign zext_ln414_5_fu_733_p1 = select_ln414_1_fu_707_p3;

assign zext_ln414_6_fu_737_p1 = sub_ln414_1_fu_723_p2;

assign zext_ln414_fu_729_p1 = select_ln414_2_fu_715_p3;

endmodule //LINEAR_CreateBitMask_Pipeline_VITIS_LOOP_237_3_VITIS_LOOP_241_4
