// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module LINEAR_OutputBuffer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        m_axi_ifc1_AWVALID,
        m_axi_ifc1_AWREADY,
        m_axi_ifc1_AWADDR,
        m_axi_ifc1_AWID,
        m_axi_ifc1_AWLEN,
        m_axi_ifc1_AWSIZE,
        m_axi_ifc1_AWBURST,
        m_axi_ifc1_AWLOCK,
        m_axi_ifc1_AWCACHE,
        m_axi_ifc1_AWPROT,
        m_axi_ifc1_AWQOS,
        m_axi_ifc1_AWREGION,
        m_axi_ifc1_AWUSER,
        m_axi_ifc1_WVALID,
        m_axi_ifc1_WREADY,
        m_axi_ifc1_WDATA,
        m_axi_ifc1_WSTRB,
        m_axi_ifc1_WLAST,
        m_axi_ifc1_WID,
        m_axi_ifc1_WUSER,
        m_axi_ifc1_ARVALID,
        m_axi_ifc1_ARREADY,
        m_axi_ifc1_ARADDR,
        m_axi_ifc1_ARID,
        m_axi_ifc1_ARLEN,
        m_axi_ifc1_ARSIZE,
        m_axi_ifc1_ARBURST,
        m_axi_ifc1_ARLOCK,
        m_axi_ifc1_ARCACHE,
        m_axi_ifc1_ARPROT,
        m_axi_ifc1_ARQOS,
        m_axi_ifc1_ARREGION,
        m_axi_ifc1_ARUSER,
        m_axi_ifc1_RVALID,
        m_axi_ifc1_RREADY,
        m_axi_ifc1_RDATA,
        m_axi_ifc1_RLAST,
        m_axi_ifc1_RID,
        m_axi_ifc1_RUSER,
        m_axi_ifc1_RRESP,
        m_axi_ifc1_BVALID,
        m_axi_ifc1_BREADY,
        m_axi_ifc1_BRESP,
        m_axi_ifc1_BID,
        m_axi_ifc1_BUSER,
        p_read,
        X_dout,
        X_empty_n,
        X_read,
        Wt_Y_dout,
        Wt_Y_empty_n,
        Wt_Y_read,
        output_buf_address0,
        output_buf_ce0,
        output_buf_q0,
        output_buf_address1,
        output_buf_ce1,
        output_buf_q1
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   m_axi_ifc1_AWVALID;
input   m_axi_ifc1_AWREADY;
output  [63:0] m_axi_ifc1_AWADDR;
output  [0:0] m_axi_ifc1_AWID;
output  [31:0] m_axi_ifc1_AWLEN;
output  [2:0] m_axi_ifc1_AWSIZE;
output  [1:0] m_axi_ifc1_AWBURST;
output  [1:0] m_axi_ifc1_AWLOCK;
output  [3:0] m_axi_ifc1_AWCACHE;
output  [2:0] m_axi_ifc1_AWPROT;
output  [3:0] m_axi_ifc1_AWQOS;
output  [3:0] m_axi_ifc1_AWREGION;
output  [0:0] m_axi_ifc1_AWUSER;
output   m_axi_ifc1_WVALID;
input   m_axi_ifc1_WREADY;
output  [127:0] m_axi_ifc1_WDATA;
output  [15:0] m_axi_ifc1_WSTRB;
output   m_axi_ifc1_WLAST;
output  [0:0] m_axi_ifc1_WID;
output  [0:0] m_axi_ifc1_WUSER;
output   m_axi_ifc1_ARVALID;
input   m_axi_ifc1_ARREADY;
output  [63:0] m_axi_ifc1_ARADDR;
output  [0:0] m_axi_ifc1_ARID;
output  [31:0] m_axi_ifc1_ARLEN;
output  [2:0] m_axi_ifc1_ARSIZE;
output  [1:0] m_axi_ifc1_ARBURST;
output  [1:0] m_axi_ifc1_ARLOCK;
output  [3:0] m_axi_ifc1_ARCACHE;
output  [2:0] m_axi_ifc1_ARPROT;
output  [3:0] m_axi_ifc1_ARQOS;
output  [3:0] m_axi_ifc1_ARREGION;
output  [0:0] m_axi_ifc1_ARUSER;
input   m_axi_ifc1_RVALID;
output   m_axi_ifc1_RREADY;
input  [127:0] m_axi_ifc1_RDATA;
input   m_axi_ifc1_RLAST;
input  [0:0] m_axi_ifc1_RID;
input  [0:0] m_axi_ifc1_RUSER;
input  [1:0] m_axi_ifc1_RRESP;
input   m_axi_ifc1_BVALID;
output   m_axi_ifc1_BREADY;
input  [1:0] m_axi_ifc1_BRESP;
input  [0:0] m_axi_ifc1_BID;
input  [0:0] m_axi_ifc1_BUSER;
input  [63:0] p_read;
input  [31:0] X_dout;
input   X_empty_n;
output   X_read;
input  [31:0] Wt_Y_dout;
input   Wt_Y_empty_n;
output   Wt_Y_read;
output  [9:0] output_buf_address0;
output   output_buf_ce0;
input  [31:0] output_buf_q0;
output  [9:0] output_buf_address1;
output   output_buf_ce1;
input  [31:0] output_buf_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_ifc1_AWVALID;
reg[63:0] m_axi_ifc1_AWADDR;
reg[0:0] m_axi_ifc1_AWID;
reg[31:0] m_axi_ifc1_AWLEN;
reg[2:0] m_axi_ifc1_AWSIZE;
reg[1:0] m_axi_ifc1_AWBURST;
reg[1:0] m_axi_ifc1_AWLOCK;
reg[3:0] m_axi_ifc1_AWCACHE;
reg[2:0] m_axi_ifc1_AWPROT;
reg[3:0] m_axi_ifc1_AWQOS;
reg[3:0] m_axi_ifc1_AWREGION;
reg[0:0] m_axi_ifc1_AWUSER;
reg m_axi_ifc1_WVALID;
reg m_axi_ifc1_BREADY;
reg X_read;
reg Wt_Y_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ifc1_blk_n_AW;
wire    ap_CS_fsm_state3;
reg   [0:0] icmp_ln329_reg_213;
reg    ifc1_blk_n_B;
wire    ap_CS_fsm_state10;
reg    X_blk_n;
reg    Wt_Y_blk_n;
reg   [0:0] tmp_reg_198;
reg   [29:0] p_lshr_cast_cast_reg_203;
reg   [29:0] p_lshr_f_cast_cast_reg_208;
wire   [0:0] icmp_ln329_fu_145_p2;
wire  signed [30:0] div_fu_163_p3;
reg  signed [30:0] div_reg_217;
wire    ap_CS_fsm_state2;
wire   [28:0] trunc_ln329_fu_174_p1;
reg   [28:0] trunc_ln329_reg_223;
wire  signed [59:0] trunc_ln_fu_177_p4;
reg   [59:0] trunc_ln_reg_228;
wire    grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_start;
wire    grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_done;
wire    grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_idle;
wire    grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_ready;
wire    grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWVALID;
wire   [63:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWADDR;
wire   [0:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWID;
wire   [31:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWLEN;
wire   [2:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWSIZE;
wire   [1:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWBURST;
wire   [1:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWLOCK;
wire   [3:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWCACHE;
wire   [2:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWPROT;
wire   [3:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWQOS;
wire   [3:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWREGION;
wire   [0:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWUSER;
wire    grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WVALID;
wire   [127:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WDATA;
wire   [15:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WSTRB;
wire    grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WLAST;
wire   [0:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WID;
wire   [0:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WUSER;
wire    grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARVALID;
wire   [63:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARADDR;
wire   [0:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARID;
wire   [31:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARLEN;
wire   [2:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARSIZE;
wire   [1:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARBURST;
wire   [1:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARLOCK;
wire   [3:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARCACHE;
wire   [2:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARPROT;
wire   [3:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARQOS;
wire   [3:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARREGION;
wire   [0:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARUSER;
wire    grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_RREADY;
wire    grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_BREADY;
wire   [9:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_address0;
wire    grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_ce0;
wire   [9:0] grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_address1;
wire    grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_ce1;
reg    grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire  signed [63:0] sext_ln329_fu_187_p1;
reg    ap_block_state3_io;
wire  signed [31:0] sext_ln329_1_fu_170_p1;
reg    ap_block_state10;
reg    ap_block_state1;
wire   [31:0] mul1_fu_95_p2;
wire   [31:0] p_neg_fu_109_p2;
wire   [29:0] tmp_83_fu_135_p4;
wire   [30:0] p_lshr_cast_cast_cast_fu_151_p1;
wire   [30:0] p_neg_t_fu_154_p2;
wire   [30:0] p_lshr_f_cast_cast_cast_fu_160_p1;
reg   [9:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 10'd1;
#0 grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_start_reg = 1'b0;
end

LINEAR_OutputBuffer_Pipeline_VITIS_LOOP_329_1 grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_start),
    .ap_done(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_done),
    .ap_idle(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_idle),
    .ap_ready(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_ready),
    .m_axi_ifc1_AWVALID(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWVALID),
    .m_axi_ifc1_AWREADY(m_axi_ifc1_AWREADY),
    .m_axi_ifc1_AWADDR(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWADDR),
    .m_axi_ifc1_AWID(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWID),
    .m_axi_ifc1_AWLEN(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWLEN),
    .m_axi_ifc1_AWSIZE(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWSIZE),
    .m_axi_ifc1_AWBURST(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWBURST),
    .m_axi_ifc1_AWLOCK(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWLOCK),
    .m_axi_ifc1_AWCACHE(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWCACHE),
    .m_axi_ifc1_AWPROT(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWPROT),
    .m_axi_ifc1_AWQOS(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWQOS),
    .m_axi_ifc1_AWREGION(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWREGION),
    .m_axi_ifc1_AWUSER(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWUSER),
    .m_axi_ifc1_WVALID(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WVALID),
    .m_axi_ifc1_WREADY(m_axi_ifc1_WREADY),
    .m_axi_ifc1_WDATA(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WDATA),
    .m_axi_ifc1_WSTRB(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WSTRB),
    .m_axi_ifc1_WLAST(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WLAST),
    .m_axi_ifc1_WID(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WID),
    .m_axi_ifc1_WUSER(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WUSER),
    .m_axi_ifc1_ARVALID(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARVALID),
    .m_axi_ifc1_ARREADY(1'b0),
    .m_axi_ifc1_ARADDR(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARADDR),
    .m_axi_ifc1_ARID(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARID),
    .m_axi_ifc1_ARLEN(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARLEN),
    .m_axi_ifc1_ARSIZE(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARSIZE),
    .m_axi_ifc1_ARBURST(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARBURST),
    .m_axi_ifc1_ARLOCK(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARLOCK),
    .m_axi_ifc1_ARCACHE(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARCACHE),
    .m_axi_ifc1_ARPROT(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARPROT),
    .m_axi_ifc1_ARQOS(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARQOS),
    .m_axi_ifc1_ARREGION(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARREGION),
    .m_axi_ifc1_ARUSER(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_ARUSER),
    .m_axi_ifc1_RVALID(1'b0),
    .m_axi_ifc1_RREADY(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_RREADY),
    .m_axi_ifc1_RDATA(128'd0),
    .m_axi_ifc1_RLAST(1'b0),
    .m_axi_ifc1_RID(1'd0),
    .m_axi_ifc1_RUSER(1'd0),
    .m_axi_ifc1_RRESP(2'd0),
    .m_axi_ifc1_BVALID(m_axi_ifc1_BVALID),
    .m_axi_ifc1_BREADY(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_BREADY),
    .m_axi_ifc1_BRESP(m_axi_ifc1_BRESP),
    .m_axi_ifc1_BID(m_axi_ifc1_BID),
    .m_axi_ifc1_BUSER(m_axi_ifc1_BUSER),
    .sext_ln329(trunc_ln_reg_228),
    .trunc_ln329_1(trunc_ln329_reg_223),
    .output_buf_address0(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_address0),
    .output_buf_ce0(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_ce0),
    .output_buf_q0(output_buf_q0),
    .output_buf_address1(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_address1),
    .output_buf_ce1(grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_ce1),
    .output_buf_q1(output_buf_q1)
);

LINEAR_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U634(
    .din0(Wt_Y_dout),
    .din1(X_dout),
    .dout(mul1_fu_95_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((m_axi_ifc1_BVALID == 1'b0) & (icmp_ln329_reg_213 == 1'd1)) & (1'b1 == ap_CS_fsm_state10))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_start_reg <= 1'b1;
        end else if ((grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_ready == 1'b1)) begin
            grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        div_reg_217 <= div_fu_163_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln329_reg_213 <= icmp_ln329_fu_145_p2;
        p_lshr_cast_cast_reg_203 <= {{p_neg_fu_109_p2[31:2]}};
        p_lshr_f_cast_cast_reg_208 <= {{mul1_fu_95_p2[31:2]}};
        tmp_reg_198 <= mul1_fu_95_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln329_reg_213 == 1'd1))) begin
        trunc_ln329_reg_223 <= trunc_ln329_fu_174_p1;
        trunc_ln_reg_228 <= {{p_read[63:4]}};
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        Wt_Y_blk_n = Wt_Y_empty_n;
    end else begin
        Wt_Y_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == Wt_Y_empty_n) | (1'b0 == X_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        Wt_Y_read = 1'b1;
    end else begin
        Wt_Y_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        X_blk_n = X_empty_n;
    end else begin
        X_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == Wt_Y_empty_n) | (1'b0 == X_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        X_read = 1'b1;
    end else begin
        X_read = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_ifc1_BVALID == 1'b0) & (icmp_ln329_reg_213 == 1'd1))) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == Wt_Y_empty_n) | (1'b0 == X_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state3_io)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((~((m_axi_ifc1_BVALID == 1'b0) & (icmp_ln329_reg_213 == 1'd1)) & (1'b1 == ap_CS_fsm_state10))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((m_axi_ifc1_BVALID == 1'b0) & (icmp_ln329_reg_213 == 1'd1)) & (1'b1 == ap_CS_fsm_state10))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln329_reg_213 == 1'd1))) begin
        ifc1_blk_n_AW = m_axi_ifc1_AWREADY;
    end else begin
        ifc1_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln329_reg_213 == 1'd1))) begin
        ifc1_blk_n_B = m_axi_ifc1_BVALID;
    end else begin
        ifc1_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln329_reg_213 == 1'd1))) begin
        m_axi_ifc1_AWADDR = sext_ln329_fu_187_p1;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_ifc1_AWADDR = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWADDR;
    end else begin
        m_axi_ifc1_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_ifc1_AWBURST = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWBURST;
    end else begin
        m_axi_ifc1_AWBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_ifc1_AWCACHE = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWCACHE;
    end else begin
        m_axi_ifc1_AWCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_ifc1_AWID = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWID;
    end else begin
        m_axi_ifc1_AWID = 1'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln329_reg_213 == 1'd1))) begin
        m_axi_ifc1_AWLEN = sext_ln329_1_fu_170_p1;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_ifc1_AWLEN = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWLEN;
    end else begin
        m_axi_ifc1_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_ifc1_AWLOCK = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWLOCK;
    end else begin
        m_axi_ifc1_AWLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_ifc1_AWPROT = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWPROT;
    end else begin
        m_axi_ifc1_AWPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_ifc1_AWQOS = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWQOS;
    end else begin
        m_axi_ifc1_AWQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_ifc1_AWREGION = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWREGION;
    end else begin
        m_axi_ifc1_AWREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_ifc1_AWSIZE = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWSIZE;
    end else begin
        m_axi_ifc1_AWSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_ifc1_AWUSER = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWUSER;
    end else begin
        m_axi_ifc1_AWUSER = 1'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln329_reg_213 == 1'd1))) begin
        m_axi_ifc1_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_ifc1_AWVALID = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_AWVALID;
    end else begin
        m_axi_ifc1_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((m_axi_ifc1_BVALID == 1'b0) & (icmp_ln329_reg_213 == 1'd1)) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln329_reg_213 == 1'd1))) begin
        m_axi_ifc1_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_ifc1_BREADY = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_BREADY;
    end else begin
        m_axi_ifc1_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_ifc1_WVALID = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WVALID;
    end else begin
        m_axi_ifc1_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((1'b0 == Wt_Y_empty_n) | (1'b0 == X_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln329_reg_213 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else if (((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln329_reg_213 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if ((~((m_axi_ifc1_BVALID == 1'b0) & (icmp_ln329_reg_213 == 1'd1)) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state1 = ((1'b0 == Wt_Y_empty_n) | (1'b0 == X_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state10 = ((m_axi_ifc1_BVALID == 1'b0) & (icmp_ln329_reg_213 == 1'd1));
end

always @ (*) begin
    ap_block_state3_io = ((m_axi_ifc1_AWREADY == 1'b0) & (icmp_ln329_reg_213 == 1'd1));
end

assign div_fu_163_p3 = ((tmp_reg_198[0:0] == 1'b1) ? p_neg_t_fu_154_p2 : p_lshr_f_cast_cast_cast_fu_160_p1);

assign grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_start = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_ap_start_reg;

assign icmp_ln329_fu_145_p2 = (($signed(tmp_83_fu_135_p4) > $signed(30'd0)) ? 1'b1 : 1'b0);

assign m_axi_ifc1_ARADDR = 64'd0;

assign m_axi_ifc1_ARBURST = 2'd0;

assign m_axi_ifc1_ARCACHE = 4'd0;

assign m_axi_ifc1_ARID = 1'd0;

assign m_axi_ifc1_ARLEN = 32'd0;

assign m_axi_ifc1_ARLOCK = 2'd0;

assign m_axi_ifc1_ARPROT = 3'd0;

assign m_axi_ifc1_ARQOS = 4'd0;

assign m_axi_ifc1_ARREGION = 4'd0;

assign m_axi_ifc1_ARSIZE = 3'd0;

assign m_axi_ifc1_ARUSER = 1'd0;

assign m_axi_ifc1_ARVALID = 1'b0;

assign m_axi_ifc1_RREADY = 1'b0;

assign m_axi_ifc1_WDATA = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WDATA;

assign m_axi_ifc1_WID = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WID;

assign m_axi_ifc1_WLAST = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WLAST;

assign m_axi_ifc1_WSTRB = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WSTRB;

assign m_axi_ifc1_WUSER = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_m_axi_ifc1_WUSER;

assign output_buf_address0 = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_address0;

assign output_buf_address1 = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_address1;

assign output_buf_ce0 = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_ce0;

assign output_buf_ce1 = grp_OutputBuffer_Pipeline_VITIS_LOOP_329_1_fu_85_output_buf_ce1;

assign p_lshr_cast_cast_cast_fu_151_p1 = p_lshr_cast_cast_reg_203;

assign p_lshr_f_cast_cast_cast_fu_160_p1 = p_lshr_f_cast_cast_reg_208;

assign p_neg_fu_109_p2 = (32'd0 - mul1_fu_95_p2);

assign p_neg_t_fu_154_p2 = (31'd0 - p_lshr_cast_cast_cast_fu_151_p1);

assign sext_ln329_1_fu_170_p1 = div_reg_217;

assign sext_ln329_fu_187_p1 = trunc_ln_fu_177_p4;

assign tmp_83_fu_135_p4 = {{mul1_fu_95_p2[31:2]}};

assign trunc_ln329_fu_174_p1 = div_reg_217[28:0];

assign trunc_ln_fu_177_p4 = {{p_read[63:4]}};

endmodule //LINEAR_OutputBuffer
