// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module LINEAR_CreateBitMask_Pipeline_VITIS_LOOP_230_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        i_t,
        weights_stream_0_0_0_0_dout,
        weights_stream_0_0_0_0_empty_n,
        weights_stream_0_0_0_0_read,
        weights_stream_0_0_0_01_dout,
        weights_stream_0_0_0_01_empty_n,
        weights_stream_0_0_0_01_read,
        weights_stream_0_0_0_02_dout,
        weights_stream_0_0_0_02_empty_n,
        weights_stream_0_0_0_02_read,
        weights_stream_0_0_0_03_dout,
        weights_stream_0_0_0_03_empty_n,
        weights_stream_0_0_0_03_read,
        weights_stream_0_0_0_04_dout,
        weights_stream_0_0_0_04_empty_n,
        weights_stream_0_0_0_04_read,
        weights_stream_0_0_0_05_dout,
        weights_stream_0_0_0_05_empty_n,
        weights_stream_0_0_0_05_read,
        weights_stream_0_0_0_06_dout,
        weights_stream_0_0_0_06_empty_n,
        weights_stream_0_0_0_06_read,
        weights_stream_0_0_0_07_dout,
        weights_stream_0_0_0_07_empty_n,
        weights_stream_0_0_0_07_read,
        weights_stream_0_0_0_08_dout,
        weights_stream_0_0_0_08_empty_n,
        weights_stream_0_0_0_08_read,
        weights_stream_0_0_0_09_dout,
        weights_stream_0_0_0_09_empty_n,
        weights_stream_0_0_0_09_read,
        weights_stream_0_0_0_010_dout,
        weights_stream_0_0_0_010_empty_n,
        weights_stream_0_0_0_010_read,
        weights_stream_0_0_0_011_dout,
        weights_stream_0_0_0_011_empty_n,
        weights_stream_0_0_0_011_read,
        weights_stream_0_0_0_012_dout,
        weights_stream_0_0_0_012_empty_n,
        weights_stream_0_0_0_012_read,
        weights_stream_0_0_0_013_dout,
        weights_stream_0_0_0_013_empty_n,
        weights_stream_0_0_0_013_read,
        weights_stream_0_0_0_014_dout,
        weights_stream_0_0_0_014_empty_n,
        weights_stream_0_0_0_014_read,
        weights_stream_0_0_0_015_dout,
        weights_stream_0_0_0_015_empty_n,
        weights_stream_0_0_0_015_read,
        weights_stream_0_0_0_016_dout,
        weights_stream_0_0_0_016_empty_n,
        weights_stream_0_0_0_016_read,
        weights_stream_0_0_0_017_dout,
        weights_stream_0_0_0_017_empty_n,
        weights_stream_0_0_0_017_read,
        weights_stream_0_0_0_018_dout,
        weights_stream_0_0_0_018_empty_n,
        weights_stream_0_0_0_018_read,
        weights_stream_0_0_0_019_dout,
        weights_stream_0_0_0_019_empty_n,
        weights_stream_0_0_0_019_read,
        weights_stream_0_0_0_020_dout,
        weights_stream_0_0_0_020_empty_n,
        weights_stream_0_0_0_020_read,
        weights_stream_0_0_0_021_dout,
        weights_stream_0_0_0_021_empty_n,
        weights_stream_0_0_0_021_read,
        weights_stream_0_0_0_022_dout,
        weights_stream_0_0_0_022_empty_n,
        weights_stream_0_0_0_022_read,
        weights_stream_0_0_0_023_dout,
        weights_stream_0_0_0_023_empty_n,
        weights_stream_0_0_0_023_read,
        weights_stream_0_0_0_024_dout,
        weights_stream_0_0_0_024_empty_n,
        weights_stream_0_0_0_024_read,
        weights_stream_0_0_0_025_dout,
        weights_stream_0_0_0_025_empty_n,
        weights_stream_0_0_0_025_read,
        weights_stream_0_0_0_026_dout,
        weights_stream_0_0_0_026_empty_n,
        weights_stream_0_0_0_026_read,
        weights_stream_0_0_0_027_dout,
        weights_stream_0_0_0_027_empty_n,
        weights_stream_0_0_0_027_read,
        weights_stream_0_0_0_028_dout,
        weights_stream_0_0_0_028_empty_n,
        weights_stream_0_0_0_028_read,
        weights_stream_0_0_0_029_dout,
        weights_stream_0_0_0_029_empty_n,
        weights_stream_0_0_0_029_read,
        weights_stream_0_0_0_030_dout,
        weights_stream_0_0_0_030_empty_n,
        weights_stream_0_0_0_030_read,
        weights_stream_0_0_0_031_dout,
        weights_stream_0_0_0_031_empty_n,
        weights_stream_0_0_0_031_read
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [4:0] i_t;
input  [31:0] weights_stream_0_0_0_0_dout;
input   weights_stream_0_0_0_0_empty_n;
output   weights_stream_0_0_0_0_read;
input  [31:0] weights_stream_0_0_0_01_dout;
input   weights_stream_0_0_0_01_empty_n;
output   weights_stream_0_0_0_01_read;
input  [31:0] weights_stream_0_0_0_02_dout;
input   weights_stream_0_0_0_02_empty_n;
output   weights_stream_0_0_0_02_read;
input  [31:0] weights_stream_0_0_0_03_dout;
input   weights_stream_0_0_0_03_empty_n;
output   weights_stream_0_0_0_03_read;
input  [31:0] weights_stream_0_0_0_04_dout;
input   weights_stream_0_0_0_04_empty_n;
output   weights_stream_0_0_0_04_read;
input  [31:0] weights_stream_0_0_0_05_dout;
input   weights_stream_0_0_0_05_empty_n;
output   weights_stream_0_0_0_05_read;
input  [31:0] weights_stream_0_0_0_06_dout;
input   weights_stream_0_0_0_06_empty_n;
output   weights_stream_0_0_0_06_read;
input  [31:0] weights_stream_0_0_0_07_dout;
input   weights_stream_0_0_0_07_empty_n;
output   weights_stream_0_0_0_07_read;
input  [31:0] weights_stream_0_0_0_08_dout;
input   weights_stream_0_0_0_08_empty_n;
output   weights_stream_0_0_0_08_read;
input  [31:0] weights_stream_0_0_0_09_dout;
input   weights_stream_0_0_0_09_empty_n;
output   weights_stream_0_0_0_09_read;
input  [31:0] weights_stream_0_0_0_010_dout;
input   weights_stream_0_0_0_010_empty_n;
output   weights_stream_0_0_0_010_read;
input  [31:0] weights_stream_0_0_0_011_dout;
input   weights_stream_0_0_0_011_empty_n;
output   weights_stream_0_0_0_011_read;
input  [31:0] weights_stream_0_0_0_012_dout;
input   weights_stream_0_0_0_012_empty_n;
output   weights_stream_0_0_0_012_read;
input  [31:0] weights_stream_0_0_0_013_dout;
input   weights_stream_0_0_0_013_empty_n;
output   weights_stream_0_0_0_013_read;
input  [31:0] weights_stream_0_0_0_014_dout;
input   weights_stream_0_0_0_014_empty_n;
output   weights_stream_0_0_0_014_read;
input  [31:0] weights_stream_0_0_0_015_dout;
input   weights_stream_0_0_0_015_empty_n;
output   weights_stream_0_0_0_015_read;
input  [31:0] weights_stream_0_0_0_016_dout;
input   weights_stream_0_0_0_016_empty_n;
output   weights_stream_0_0_0_016_read;
input  [31:0] weights_stream_0_0_0_017_dout;
input   weights_stream_0_0_0_017_empty_n;
output   weights_stream_0_0_0_017_read;
input  [31:0] weights_stream_0_0_0_018_dout;
input   weights_stream_0_0_0_018_empty_n;
output   weights_stream_0_0_0_018_read;
input  [31:0] weights_stream_0_0_0_019_dout;
input   weights_stream_0_0_0_019_empty_n;
output   weights_stream_0_0_0_019_read;
input  [31:0] weights_stream_0_0_0_020_dout;
input   weights_stream_0_0_0_020_empty_n;
output   weights_stream_0_0_0_020_read;
input  [31:0] weights_stream_0_0_0_021_dout;
input   weights_stream_0_0_0_021_empty_n;
output   weights_stream_0_0_0_021_read;
input  [31:0] weights_stream_0_0_0_022_dout;
input   weights_stream_0_0_0_022_empty_n;
output   weights_stream_0_0_0_022_read;
input  [31:0] weights_stream_0_0_0_023_dout;
input   weights_stream_0_0_0_023_empty_n;
output   weights_stream_0_0_0_023_read;
input  [31:0] weights_stream_0_0_0_024_dout;
input   weights_stream_0_0_0_024_empty_n;
output   weights_stream_0_0_0_024_read;
input  [31:0] weights_stream_0_0_0_025_dout;
input   weights_stream_0_0_0_025_empty_n;
output   weights_stream_0_0_0_025_read;
input  [31:0] weights_stream_0_0_0_026_dout;
input   weights_stream_0_0_0_026_empty_n;
output   weights_stream_0_0_0_026_read;
input  [31:0] weights_stream_0_0_0_027_dout;
input   weights_stream_0_0_0_027_empty_n;
output   weights_stream_0_0_0_027_read;
input  [31:0] weights_stream_0_0_0_028_dout;
input   weights_stream_0_0_0_028_empty_n;
output   weights_stream_0_0_0_028_read;
input  [31:0] weights_stream_0_0_0_029_dout;
input   weights_stream_0_0_0_029_empty_n;
output   weights_stream_0_0_0_029_read;
input  [31:0] weights_stream_0_0_0_030_dout;
input   weights_stream_0_0_0_030_empty_n;
output   weights_stream_0_0_0_030_read;
input  [31:0] weights_stream_0_0_0_031_dout;
input   weights_stream_0_0_0_031_empty_n;
output   weights_stream_0_0_0_031_read;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] ap_phi_mux_phi_ln136_phi_fu_419_p64;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [0:0] tmp3_nbreadreq_fu_400_p3;
wire   [0:0] ap_phi_reg_pp0_iter0_phi_ln136_reg_416;
wire   [4:0] i_t_read_read_fu_154_p2;
wire   [0:0] tmp4_nbreadreq_fu_392_p3;
wire   [0:0] tmp5_nbreadreq_fu_384_p3;
wire   [0:0] tmp6_nbreadreq_fu_376_p3;
wire   [0:0] tmp7_nbreadreq_fu_368_p3;
wire   [0:0] tmp8_nbreadreq_fu_360_p3;
wire   [0:0] tmp9_nbreadreq_fu_352_p3;
wire   [0:0] tmp10_nbreadreq_fu_344_p3;
wire   [0:0] tmp11_nbreadreq_fu_336_p3;
wire   [0:0] tmp12_nbreadreq_fu_328_p3;
wire   [0:0] tmp13_nbreadreq_fu_320_p3;
wire   [0:0] tmp14_nbreadreq_fu_312_p3;
wire   [0:0] tmp15_nbreadreq_fu_304_p3;
wire   [0:0] tmp16_nbreadreq_fu_296_p3;
wire   [0:0] tmp17_nbreadreq_fu_288_p3;
wire   [0:0] tmp18_nbreadreq_fu_280_p3;
wire   [0:0] tmp19_nbreadreq_fu_272_p3;
wire   [0:0] tmp20_nbreadreq_fu_264_p3;
wire   [0:0] tmp21_nbreadreq_fu_256_p3;
wire   [0:0] tmp22_nbreadreq_fu_248_p3;
wire   [0:0] tmp23_nbreadreq_fu_240_p3;
wire   [0:0] tmp24_nbreadreq_fu_232_p3;
wire   [0:0] tmp25_nbreadreq_fu_224_p3;
wire   [0:0] tmp26_nbreadreq_fu_216_p3;
wire   [0:0] tmp27_nbreadreq_fu_208_p3;
wire   [0:0] tmp28_nbreadreq_fu_200_p3;
wire   [0:0] tmp29_nbreadreq_fu_192_p3;
wire   [0:0] tmp30_nbreadreq_fu_184_p3;
wire   [0:0] tmp31_nbreadreq_fu_176_p3;
wire   [0:0] tmp32_nbreadreq_fu_168_p3;
wire   [0:0] tmp33_nbreadreq_fu_160_p3;
wire   [0:0] tmp_nbreadreq_fu_408_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_loop_init;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_done_reg = 1'b0;
end

LINEAR_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (ap_phi_mux_phi_ln136_phi_fu_419_p64 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((i_t_read_read_fu_154_p2 == 5'd31)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp_nbreadreq_fu_408_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd30)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp33_nbreadreq_fu_160_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd29)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp32_nbreadreq_fu_168_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd28)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp31_nbreadreq_fu_176_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd27)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp30_nbreadreq_fu_184_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd26)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp29_nbreadreq_fu_192_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd25)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp28_nbreadreq_fu_200_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd24)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp27_nbreadreq_fu_208_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd23)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp26_nbreadreq_fu_216_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd22)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp25_nbreadreq_fu_224_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd21)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp24_nbreadreq_fu_232_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd20)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp23_nbreadreq_fu_240_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd19)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp22_nbreadreq_fu_248_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd18)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp21_nbreadreq_fu_256_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd17)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp20_nbreadreq_fu_264_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd16)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp19_nbreadreq_fu_272_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd15)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp18_nbreadreq_fu_280_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd14)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp17_nbreadreq_fu_288_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd13)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp16_nbreadreq_fu_296_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd12)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp15_nbreadreq_fu_304_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd11)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp14_nbreadreq_fu_312_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd10)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp13_nbreadreq_fu_320_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd9)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp12_nbreadreq_fu_328_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd8)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp11_nbreadreq_fu_336_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd7)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp10_nbreadreq_fu_344_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd6)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp9_nbreadreq_fu_352_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd5)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp8_nbreadreq_fu_360_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd4)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp7_nbreadreq_fu_368_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd3)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp6_nbreadreq_fu_376_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd2)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp5_nbreadreq_fu_384_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd1)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp4_nbreadreq_fu_392_p3;
    end else if ((i_t_read_read_fu_154_p2 == 5'd0)) begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = tmp3_nbreadreq_fu_400_p3;
    end else begin
        ap_phi_mux_phi_ln136_phi_fu_419_p64 = ap_phi_reg_pp0_iter0_phi_ln136_reg_416;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_phi_ln136_reg_416 = 'bx;

assign i_t_read_read_fu_154_p2 = i_t;

assign tmp10_nbreadreq_fu_344_p3 = weights_stream_0_0_0_07_empty_n;

assign tmp11_nbreadreq_fu_336_p3 = weights_stream_0_0_0_08_empty_n;

assign tmp12_nbreadreq_fu_328_p3 = weights_stream_0_0_0_09_empty_n;

assign tmp13_nbreadreq_fu_320_p3 = weights_stream_0_0_0_010_empty_n;

assign tmp14_nbreadreq_fu_312_p3 = weights_stream_0_0_0_011_empty_n;

assign tmp15_nbreadreq_fu_304_p3 = weights_stream_0_0_0_012_empty_n;

assign tmp16_nbreadreq_fu_296_p3 = weights_stream_0_0_0_013_empty_n;

assign tmp17_nbreadreq_fu_288_p3 = weights_stream_0_0_0_014_empty_n;

assign tmp18_nbreadreq_fu_280_p3 = weights_stream_0_0_0_015_empty_n;

assign tmp19_nbreadreq_fu_272_p3 = weights_stream_0_0_0_016_empty_n;

assign tmp20_nbreadreq_fu_264_p3 = weights_stream_0_0_0_017_empty_n;

assign tmp21_nbreadreq_fu_256_p3 = weights_stream_0_0_0_018_empty_n;

assign tmp22_nbreadreq_fu_248_p3 = weights_stream_0_0_0_019_empty_n;

assign tmp23_nbreadreq_fu_240_p3 = weights_stream_0_0_0_020_empty_n;

assign tmp24_nbreadreq_fu_232_p3 = weights_stream_0_0_0_021_empty_n;

assign tmp25_nbreadreq_fu_224_p3 = weights_stream_0_0_0_022_empty_n;

assign tmp26_nbreadreq_fu_216_p3 = weights_stream_0_0_0_023_empty_n;

assign tmp27_nbreadreq_fu_208_p3 = weights_stream_0_0_0_024_empty_n;

assign tmp28_nbreadreq_fu_200_p3 = weights_stream_0_0_0_025_empty_n;

assign tmp29_nbreadreq_fu_192_p3 = weights_stream_0_0_0_026_empty_n;

assign tmp30_nbreadreq_fu_184_p3 = weights_stream_0_0_0_027_empty_n;

assign tmp31_nbreadreq_fu_176_p3 = weights_stream_0_0_0_028_empty_n;

assign tmp32_nbreadreq_fu_168_p3 = weights_stream_0_0_0_029_empty_n;

assign tmp33_nbreadreq_fu_160_p3 = weights_stream_0_0_0_030_empty_n;

assign tmp3_nbreadreq_fu_400_p3 = weights_stream_0_0_0_0_empty_n;

assign tmp4_nbreadreq_fu_392_p3 = weights_stream_0_0_0_01_empty_n;

assign tmp5_nbreadreq_fu_384_p3 = weights_stream_0_0_0_02_empty_n;

assign tmp6_nbreadreq_fu_376_p3 = weights_stream_0_0_0_03_empty_n;

assign tmp7_nbreadreq_fu_368_p3 = weights_stream_0_0_0_04_empty_n;

assign tmp8_nbreadreq_fu_360_p3 = weights_stream_0_0_0_05_empty_n;

assign tmp9_nbreadreq_fu_352_p3 = weights_stream_0_0_0_06_empty_n;

assign tmp_nbreadreq_fu_408_p3 = weights_stream_0_0_0_031_empty_n;

assign weights_stream_0_0_0_010_read = 1'b0;

assign weights_stream_0_0_0_011_read = 1'b0;

assign weights_stream_0_0_0_012_read = 1'b0;

assign weights_stream_0_0_0_013_read = 1'b0;

assign weights_stream_0_0_0_014_read = 1'b0;

assign weights_stream_0_0_0_015_read = 1'b0;

assign weights_stream_0_0_0_016_read = 1'b0;

assign weights_stream_0_0_0_017_read = 1'b0;

assign weights_stream_0_0_0_018_read = 1'b0;

assign weights_stream_0_0_0_019_read = 1'b0;

assign weights_stream_0_0_0_01_read = 1'b0;

assign weights_stream_0_0_0_020_read = 1'b0;

assign weights_stream_0_0_0_021_read = 1'b0;

assign weights_stream_0_0_0_022_read = 1'b0;

assign weights_stream_0_0_0_023_read = 1'b0;

assign weights_stream_0_0_0_024_read = 1'b0;

assign weights_stream_0_0_0_025_read = 1'b0;

assign weights_stream_0_0_0_026_read = 1'b0;

assign weights_stream_0_0_0_027_read = 1'b0;

assign weights_stream_0_0_0_028_read = 1'b0;

assign weights_stream_0_0_0_029_read = 1'b0;

assign weights_stream_0_0_0_02_read = 1'b0;

assign weights_stream_0_0_0_030_read = 1'b0;

assign weights_stream_0_0_0_031_read = 1'b0;

assign weights_stream_0_0_0_03_read = 1'b0;

assign weights_stream_0_0_0_04_read = 1'b0;

assign weights_stream_0_0_0_05_read = 1'b0;

assign weights_stream_0_0_0_06_read = 1'b0;

assign weights_stream_0_0_0_07_read = 1'b0;

assign weights_stream_0_0_0_08_read = 1'b0;

assign weights_stream_0_0_0_09_read = 1'b0;

assign weights_stream_0_0_0_0_read = 1'b0;

endmodule //LINEAR_CreateBitMask_Pipeline_VITIS_LOOP_230_2
