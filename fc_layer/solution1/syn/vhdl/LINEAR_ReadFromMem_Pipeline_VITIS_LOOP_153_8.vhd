-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity LINEAR_ReadFromMem_Pipeline_VITIS_LOOP_153_8 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_ifc6_AWVALID : OUT STD_LOGIC;
    m_axi_ifc6_AWREADY : IN STD_LOGIC;
    m_axi_ifc6_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_ifc6_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ifc6_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_ifc6_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ifc6_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ifc6_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ifc6_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ifc6_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ifc6_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ifc6_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ifc6_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ifc6_WVALID : OUT STD_LOGIC;
    m_axi_ifc6_WREADY : IN STD_LOGIC;
    m_axi_ifc6_WDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    m_axi_ifc6_WSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
    m_axi_ifc6_WLAST : OUT STD_LOGIC;
    m_axi_ifc6_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ifc6_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ifc6_ARVALID : OUT STD_LOGIC;
    m_axi_ifc6_ARREADY : IN STD_LOGIC;
    m_axi_ifc6_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_ifc6_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ifc6_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_ifc6_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ifc6_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ifc6_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ifc6_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ifc6_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ifc6_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ifc6_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ifc6_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ifc6_RVALID : IN STD_LOGIC;
    m_axi_ifc6_RREADY : OUT STD_LOGIC;
    m_axi_ifc6_RDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    m_axi_ifc6_RLAST : IN STD_LOGIC;
    m_axi_ifc6_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ifc6_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ifc6_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ifc6_BVALID : IN STD_LOGIC;
    m_axi_ifc6_BREADY : OUT STD_LOGIC;
    m_axi_ifc6_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ifc6_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ifc6_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    sext_ln153 : IN STD_LOGIC_VECTOR (27 downto 0);
    ifc66 : IN STD_LOGIC_VECTOR (63 downto 0);
    iact_buffer_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    iact_buffer_ce0 : OUT STD_LOGIC;
    iact_buffer_we0 : OUT STD_LOGIC;
    iact_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    iact_buffer_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    iact_buffer_ce1 : OUT STD_LOGIC;
    iact_buffer_we1 : OUT STD_LOGIC;
    iact_buffer_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of LINEAR_ReadFromMem_Pipeline_VITIS_LOOP_153_8 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv41_A00 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000101000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv11_4 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_const_lv11_5 : STD_LOGIC_VECTOR (10 downto 0) := "00000000101";
    constant ap_const_lv11_6 : STD_LOGIC_VECTOR (10 downto 0) := "00000000110";
    constant ap_const_lv11_7 : STD_LOGIC_VECTOR (10 downto 0) := "00000000111";
    constant ap_const_lv11_8 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_const_lv11_9 : STD_LOGIC_VECTOR (10 downto 0) := "00000001001";
    constant ap_const_lv11_A : STD_LOGIC_VECTOR (10 downto 0) := "00000001010";
    constant ap_const_lv11_B : STD_LOGIC_VECTOR (10 downto 0) := "00000001011";
    constant ap_const_lv11_C : STD_LOGIC_VECTOR (10 downto 0) := "00000001100";
    constant ap_const_lv11_D : STD_LOGIC_VECTOR (10 downto 0) := "00000001101";
    constant ap_const_lv11_E : STD_LOGIC_VECTOR (10 downto 0) := "00000001110";
    constant ap_const_lv11_F : STD_LOGIC_VECTOR (10 downto 0) := "00000001111";
    constant ap_const_lv11_10 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_const_lv11_11 : STD_LOGIC_VECTOR (10 downto 0) := "00000010001";
    constant ap_const_lv11_12 : STD_LOGIC_VECTOR (10 downto 0) := "00000010010";
    constant ap_const_lv11_13 : STD_LOGIC_VECTOR (10 downto 0) := "00000010011";
    constant ap_const_lv11_14 : STD_LOGIC_VECTOR (10 downto 0) := "00000010100";
    constant ap_const_lv11_15 : STD_LOGIC_VECTOR (10 downto 0) := "00000010101";
    constant ap_const_lv11_16 : STD_LOGIC_VECTOR (10 downto 0) := "00000010110";
    constant ap_const_lv11_17 : STD_LOGIC_VECTOR (10 downto 0) := "00000010111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal icmp_ln153_reg_819 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_state21_pp0_stage8_iter1 : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage8 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ifc6_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ifc6_blk_n_R : STD_LOGIC;
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal reg_395 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal reg_400 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal reg_405 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_410 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_415 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_420 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln153_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln6_reg_823 : STD_LOGIC_VECTOR (59 downto 0);
    signal sub_ln159_fu_533_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln159_reg_828 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln159_reg_828_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln674_fu_554_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_reg_862 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_3_fu_572_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_3_reg_867 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_4_fu_596_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_4_reg_872 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_5_fu_620_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_5_reg_877 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_25_10_reg_882 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_25_11_reg_887 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_6_fu_644_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_6_reg_892 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_25_12_reg_897 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_7_fu_668_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_7_reg_902 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_25_16_reg_907 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_25_17_reg_912 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal zext_ln674_fu_558_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_fu_567_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_1_fu_581_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_2_fu_591_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_3_fu_605_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_4_fu_615_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_5_fu_629_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_6_fu_639_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_7_fu_653_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_8_fu_663_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_9_fu_677_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln161_10_fu_687_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_11_fu_697_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln161_12_fu_707_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_13_fu_717_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln161_14_fu_727_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_15_fu_737_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal zext_ln161_16_fu_747_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_17_fu_757_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal zext_ln161_18_fu_767_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_19_fu_777_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal zext_ln161_20_fu_787_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_21_fu_797_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_22_fu_807_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln156_fu_544_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_3_fu_136 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln153_fu_443_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state18_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state19_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state20_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal sext_ln153_cast_fu_425_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln4_fu_449_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal trunc_ln155_fu_469_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln155_1_fu_461_p3 : STD_LOGIC_VECTOR (36 downto 0);
    signal zext_ln155_fu_457_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal zext_ln155_1_fu_481_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln155_fu_485_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln155_fu_491_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal add_ln155_fu_495_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln155_1_fu_501_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln155_1_fu_505_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln159_fu_521_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln5_fu_473_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln5_fu_525_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln161_fu_562_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln161_1_fu_576_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln161_2_fu_586_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln161_3_fu_600_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln161_4_fu_610_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln161_5_fu_624_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln161_6_fu_634_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln161_fu_648_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln161_1_fu_658_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln161_2_fu_672_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln161_3_fu_682_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln161_4_fu_692_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln161_5_fu_702_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln161_6_fu_712_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln161_7_fu_722_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln161_8_fu_732_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln161_9_fu_742_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln161_10_fu_752_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln161_11_fu_762_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln161_12_fu_772_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln161_13_fu_782_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln161_14_fu_792_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln161_15_fu_802_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component LINEAR_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component LINEAR_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage8,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage8_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage8)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    i_3_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln153_fu_437_p2 = ap_const_lv1_0))) then 
                    i_3_fu_136 <= add_ln153_fu_443_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_3_fu_136 <= ap_const_lv32_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln153_reg_819 <= icmp_ln153_fu_437_p2;
                    sub_ln159_reg_828_pp0_iter1_reg(10 downto 3) <= sub_ln159_reg_828(10 downto 3);
                trunc_ln674_6_reg_892 <= trunc_ln674_6_fu_644_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001))) then
                p_Result_25_10_reg_882 <= m_axi_ifc6_RDATA(95 downto 64);
                p_Result_25_11_reg_887 <= m_axi_ifc6_RDATA(127 downto 96);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Result_25_12_reg_897 <= m_axi_ifc6_RDATA(63 downto 32);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                p_Result_25_16_reg_907 <= m_axi_ifc6_RDATA(95 downto 64);
                p_Result_25_17_reg_912 <= m_axi_ifc6_RDATA(127 downto 96);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)))) then
                reg_395 <= m_axi_ifc6_RDATA(63 downto 32);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)))) then
                reg_400 <= m_axi_ifc6_RDATA(95 downto 64);
                reg_405 <= m_axi_ifc6_RDATA(127 downto 96);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_410 <= m_axi_ifc6_RDATA(95 downto 64);
                reg_415 <= m_axi_ifc6_RDATA(127 downto 96);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then
                reg_420 <= m_axi_ifc6_RDATA(63 downto 32);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln153_fu_437_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    sub_ln159_reg_828(10 downto 3) <= sub_ln159_fu_533_p2(10 downto 3);
                trunc_ln6_reg_823 <= add_ln155_1_fu_505_p2(63 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then
                trunc_ln674_3_reg_867 <= trunc_ln674_3_fu_572_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then
                trunc_ln674_4_reg_872 <= trunc_ln674_4_fu_596_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001))) then
                trunc_ln674_5_reg_877 <= trunc_ln674_5_fu_620_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                trunc_ln674_7_reg_902 <= trunc_ln674_7_fu_668_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                trunc_ln674_reg_862 <= trunc_ln674_fu_554_p1;
            end if;
        end if;
    end process;
    sub_ln159_reg_828(2 downto 0) <= "000";
    sub_ln159_reg_828_pp0_iter1_reg(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage8_subdone, ap_condition_exit_pp0_iter0_stage8, ap_block_pp0_stage11_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage8)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    add_ln153_fu_443_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i) + unsigned(ap_const_lv32_1));
    add_ln155_1_fu_505_p2 <= std_logic_vector(signed(sext_ln155_1_fu_501_p1) + signed(ifc66));
    add_ln155_fu_495_p2 <= std_logic_vector(signed(sext_ln155_fu_491_p1) + signed(ap_const_lv41_A00));
    add_ln161_10_fu_752_p2 <= std_logic_vector(unsigned(sub_ln159_reg_828_pp0_iter1_reg) + unsigned(ap_const_lv11_12));
    add_ln161_11_fu_762_p2 <= std_logic_vector(unsigned(sub_ln159_reg_828_pp0_iter1_reg) + unsigned(ap_const_lv11_13));
    add_ln161_12_fu_772_p2 <= std_logic_vector(unsigned(sub_ln159_reg_828_pp0_iter1_reg) + unsigned(ap_const_lv11_14));
    add_ln161_13_fu_782_p2 <= std_logic_vector(unsigned(sub_ln159_reg_828_pp0_iter1_reg) + unsigned(ap_const_lv11_15));
    add_ln161_14_fu_792_p2 <= std_logic_vector(unsigned(sub_ln159_reg_828_pp0_iter1_reg) + unsigned(ap_const_lv11_16));
    add_ln161_15_fu_802_p2 <= std_logic_vector(unsigned(sub_ln159_reg_828_pp0_iter1_reg) + unsigned(ap_const_lv11_17));
    add_ln161_1_fu_658_p2 <= std_logic_vector(unsigned(sub_ln159_reg_828_pp0_iter1_reg) + unsigned(ap_const_lv11_9));
    add_ln161_2_fu_672_p2 <= std_logic_vector(unsigned(sub_ln159_reg_828_pp0_iter1_reg) + unsigned(ap_const_lv11_A));
    add_ln161_3_fu_682_p2 <= std_logic_vector(unsigned(sub_ln159_reg_828_pp0_iter1_reg) + unsigned(ap_const_lv11_B));
    add_ln161_4_fu_692_p2 <= std_logic_vector(unsigned(sub_ln159_reg_828_pp0_iter1_reg) + unsigned(ap_const_lv11_C));
    add_ln161_5_fu_702_p2 <= std_logic_vector(unsigned(sub_ln159_reg_828_pp0_iter1_reg) + unsigned(ap_const_lv11_D));
    add_ln161_6_fu_712_p2 <= std_logic_vector(unsigned(sub_ln159_reg_828_pp0_iter1_reg) + unsigned(ap_const_lv11_E));
    add_ln161_7_fu_722_p2 <= std_logic_vector(unsigned(sub_ln159_reg_828_pp0_iter1_reg) + unsigned(ap_const_lv11_F));
    add_ln161_8_fu_732_p2 <= std_logic_vector(unsigned(sub_ln159_reg_828_pp0_iter1_reg) + unsigned(ap_const_lv11_10));
    add_ln161_9_fu_742_p2 <= std_logic_vector(unsigned(sub_ln159_reg_828_pp0_iter1_reg) + unsigned(ap_const_lv11_11));
    add_ln161_fu_648_p2 <= std_logic_vector(unsigned(sub_ln159_reg_828_pp0_iter1_reg) + unsigned(ap_const_lv11_8));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_ifc6_RVALID)
    begin
                ap_block_pp0_stage0_11001 <= ((m_axi_ifc6_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_ifc6_RVALID)
    begin
                ap_block_pp0_stage0_subdone <= ((m_axi_ifc6_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage10_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_ifc6_RVALID, icmp_ln153_reg_819)
    begin
                ap_block_pp0_stage10_11001 <= ((icmp_ln153_reg_819 = ap_const_lv1_0) and (m_axi_ifc6_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage10_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_ifc6_RVALID, icmp_ln153_reg_819)
    begin
                ap_block_pp0_stage10_subdone <= ((icmp_ln153_reg_819 = ap_const_lv1_0) and (m_axi_ifc6_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage11_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_ifc6_RVALID, icmp_ln153_reg_819)
    begin
                ap_block_pp0_stage11_11001 <= ((icmp_ln153_reg_819 = ap_const_lv1_0) and (m_axi_ifc6_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage11_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_ifc6_RVALID, icmp_ln153_reg_819)
    begin
                ap_block_pp0_stage11_subdone <= ((icmp_ln153_reg_819 = ap_const_lv1_0) and (m_axi_ifc6_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_ifc6_RVALID, ap_block_state2_io)
    begin
                ap_block_pp0_stage1_11001 <= (((m_axi_ifc6_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_ifc6_RVALID, ap_block_state2_io)
    begin
                ap_block_pp0_stage1_subdone <= (((m_axi_ifc6_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_ifc6_RVALID, icmp_ln153_reg_819)
    begin
                ap_block_pp0_stage8_11001 <= ((icmp_ln153_reg_819 = ap_const_lv1_0) and (m_axi_ifc6_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage8_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_ifc6_RVALID, icmp_ln153_reg_819)
    begin
                ap_block_pp0_stage8_subdone <= ((icmp_ln153_reg_819 = ap_const_lv1_0) and (m_axi_ifc6_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_ifc6_RVALID, icmp_ln153_reg_819)
    begin
                ap_block_pp0_stage9_11001 <= ((icmp_ln153_reg_819 = ap_const_lv1_0) and (m_axi_ifc6_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage9_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_ifc6_RVALID, icmp_ln153_reg_819)
    begin
                ap_block_pp0_stage9_subdone <= ((icmp_ln153_reg_819 = ap_const_lv1_0) and (m_axi_ifc6_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_state10_pp0_stage9_iter0_assign_proc : process(m_axi_ifc6_RVALID, icmp_ln153_reg_819)
    begin
                ap_block_state10_pp0_stage9_iter0 <= ((icmp_ln153_reg_819 = ap_const_lv1_0) and (m_axi_ifc6_RVALID = ap_const_logic_0));
    end process;


    ap_block_state11_pp0_stage10_iter0_assign_proc : process(m_axi_ifc6_RVALID, icmp_ln153_reg_819)
    begin
                ap_block_state11_pp0_stage10_iter0 <= ((icmp_ln153_reg_819 = ap_const_lv1_0) and (m_axi_ifc6_RVALID = ap_const_logic_0));
    end process;


    ap_block_state12_pp0_stage11_iter0_assign_proc : process(m_axi_ifc6_RVALID, icmp_ln153_reg_819)
    begin
                ap_block_state12_pp0_stage11_iter0 <= ((icmp_ln153_reg_819 = ap_const_lv1_0) and (m_axi_ifc6_RVALID = ap_const_logic_0));
    end process;


    ap_block_state13_pp0_stage0_iter1_assign_proc : process(m_axi_ifc6_RVALID)
    begin
                ap_block_state13_pp0_stage0_iter1 <= (m_axi_ifc6_RVALID = ap_const_logic_0);
    end process;


    ap_block_state14_pp0_stage1_iter1_assign_proc : process(m_axi_ifc6_RVALID)
    begin
                ap_block_state14_pp0_stage1_iter1 <= (m_axi_ifc6_RVALID = ap_const_logic_0);
    end process;

        ap_block_state15_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage8_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_io_assign_proc : process(m_axi_ifc6_ARREADY, icmp_ln153_reg_819)
    begin
                ap_block_state2_io <= ((icmp_ln153_reg_819 = ap_const_lv1_0) and (m_axi_ifc6_ARREADY = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp0_stage8_iter0_assign_proc : process(m_axi_ifc6_RVALID, icmp_ln153_reg_819)
    begin
                ap_block_state9_pp0_stage8_iter0 <= ((icmp_ln153_reg_819 = ap_const_lv1_0) and (m_axi_ifc6_RVALID = ap_const_logic_0));
    end process;


    ap_condition_exit_pp0_iter0_stage8_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, icmp_ln153_reg_819, ap_block_pp0_stage8_subdone)
    begin
        if (((icmp_ln153_reg_819 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_subdone))) then 
            ap_condition_exit_pp0_iter0_stage8 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage8_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage8;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_3_fu_136, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_i <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_i <= i_3_fu_136;
        end if; 
    end process;


    iact_buffer_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage0, zext_ln161_fu_567_p1, zext_ln161_2_fu_591_p1, zext_ln161_4_fu_615_p1, zext_ln161_6_fu_639_p1, zext_ln161_8_fu_663_p1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, zext_ln161_10_fu_687_p1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, zext_ln161_12_fu_707_p1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, zext_ln161_14_fu_727_p1, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, zext_ln161_16_fu_747_p1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, zext_ln161_18_fu_767_p1, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, zext_ln161_20_fu_787_p1, zext_ln161_22_fu_807_p1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
            iact_buffer_address0 <= zext_ln161_22_fu_807_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            iact_buffer_address0 <= zext_ln161_20_fu_787_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
            iact_buffer_address0 <= zext_ln161_18_fu_767_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            iact_buffer_address0 <= zext_ln161_16_fu_747_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            iact_buffer_address0 <= zext_ln161_14_fu_727_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            iact_buffer_address0 <= zext_ln161_12_fu_707_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            iact_buffer_address0 <= zext_ln161_10_fu_687_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            iact_buffer_address0 <= zext_ln161_8_fu_663_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iact_buffer_address0 <= zext_ln161_6_fu_639_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11))) then 
            iact_buffer_address0 <= zext_ln161_4_fu_615_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10))) then 
            iact_buffer_address0 <= zext_ln161_2_fu_591_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
            iact_buffer_address0 <= zext_ln161_fu_567_p1(11 - 1 downto 0);
        else 
            iact_buffer_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    iact_buffer_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage0, zext_ln674_fu_558_p1, zext_ln161_1_fu_581_p1, zext_ln161_3_fu_605_p1, zext_ln161_5_fu_629_p1, zext_ln161_7_fu_653_p1, zext_ln161_9_fu_677_p1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, zext_ln161_11_fu_697_p1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, zext_ln161_13_fu_717_p1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, zext_ln161_15_fu_737_p1, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, zext_ln161_17_fu_757_p1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, zext_ln161_19_fu_777_p1, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, zext_ln161_21_fu_797_p1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
            iact_buffer_address1 <= zext_ln161_21_fu_797_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            iact_buffer_address1 <= zext_ln161_19_fu_777_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
            iact_buffer_address1 <= zext_ln161_17_fu_757_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            iact_buffer_address1 <= zext_ln161_15_fu_737_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            iact_buffer_address1 <= zext_ln161_13_fu_717_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            iact_buffer_address1 <= zext_ln161_11_fu_697_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            iact_buffer_address1 <= zext_ln161_9_fu_677_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            iact_buffer_address1 <= zext_ln161_7_fu_653_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iact_buffer_address1 <= zext_ln161_5_fu_629_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11))) then 
            iact_buffer_address1 <= zext_ln161_3_fu_605_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10))) then 
            iact_buffer_address1 <= zext_ln161_1_fu_581_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
            iact_buffer_address1 <= zext_ln674_fu_558_p1(11 - 1 downto 0);
        else 
            iact_buffer_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    iact_buffer_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)))) then 
            iact_buffer_ce0 <= ap_const_logic_1;
        else 
            iact_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iact_buffer_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)))) then 
            iact_buffer_ce1 <= ap_const_logic_1;
        else 
            iact_buffer_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iact_buffer_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage0, reg_395, reg_405, reg_415, reg_420, p_Result_25_11_reg_887, p_Result_25_12_reg_897, p_Result_25_17_reg_912, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
            iact_buffer_d0 <= p_Result_25_17_reg_912;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            iact_buffer_d0 <= p_Result_25_12_reg_897;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            iact_buffer_d0 <= p_Result_25_11_reg_887;
        elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            iact_buffer_d0 <= reg_420;
        elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            iact_buffer_d0 <= reg_415;
        elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10)))) then 
            iact_buffer_d0 <= reg_405;
        elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11)))) then 
            iact_buffer_d0 <= reg_395;
        else 
            iact_buffer_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    iact_buffer_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage0, reg_400, reg_410, trunc_ln674_reg_862, trunc_ln674_3_reg_867, trunc_ln674_4_reg_872, trunc_ln674_5_reg_877, p_Result_25_10_reg_882, trunc_ln674_6_reg_892, trunc_ln674_7_reg_902, p_Result_25_16_reg_907, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
            iact_buffer_d1 <= p_Result_25_16_reg_907;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            iact_buffer_d1 <= trunc_ln674_7_reg_902;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            iact_buffer_d1 <= trunc_ln674_6_reg_892;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            iact_buffer_d1 <= p_Result_25_10_reg_882;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            iact_buffer_d1 <= trunc_ln674_5_reg_877;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            iact_buffer_d1 <= trunc_ln674_4_reg_872;
        elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            iact_buffer_d1 <= reg_410;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11))) then 
            iact_buffer_d1 <= trunc_ln674_3_reg_867;
        elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10)))) then 
            iact_buffer_d1 <= reg_400;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
            iact_buffer_d1 <= trunc_ln674_reg_862;
        else 
            iact_buffer_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    iact_buffer_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage8, icmp_ln153_reg_819, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001)
    begin
        if ((((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            iact_buffer_we0 <= ap_const_logic_1;
        else 
            iact_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iact_buffer_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage8, icmp_ln153_reg_819, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001)
    begin
        if ((((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            iact_buffer_we1 <= ap_const_logic_1;
        else 
            iact_buffer_we1 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln153_fu_437_p2 <= "1" when (ap_sig_allocacmp_i = sext_ln153_cast_fu_425_p1) else "0";

    ifc6_blk_n_AR_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_ifc6_ARREADY, icmp_ln153_reg_819, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if (((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            ifc6_blk_n_AR <= m_axi_ifc6_ARREADY;
        else 
            ifc6_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    ifc6_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage8, m_axi_ifc6_RVALID, icmp_ln153_reg_819, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage0)
    begin
        if ((((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10)) or ((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9)) or ((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            ifc6_blk_n_R <= m_axi_ifc6_RVALID;
        else 
            ifc6_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    m_axi_ifc6_ARADDR <= sext_ln156_fu_544_p1;
    m_axi_ifc6_ARBURST <= ap_const_lv2_0;
    m_axi_ifc6_ARCACHE <= ap_const_lv4_0;
    m_axi_ifc6_ARID <= ap_const_lv1_0;
    m_axi_ifc6_ARLEN <= ap_const_lv32_6;
    m_axi_ifc6_ARLOCK <= ap_const_lv2_0;
    m_axi_ifc6_ARPROT <= ap_const_lv3_0;
    m_axi_ifc6_ARQOS <= ap_const_lv4_0;
    m_axi_ifc6_ARREGION <= ap_const_lv4_0;
    m_axi_ifc6_ARSIZE <= ap_const_lv3_0;
    m_axi_ifc6_ARUSER <= ap_const_lv1_0;

    m_axi_ifc6_ARVALID_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln153_reg_819, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            m_axi_ifc6_ARVALID <= ap_const_logic_1;
        else 
            m_axi_ifc6_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_ifc6_AWADDR <= ap_const_lv64_0;
    m_axi_ifc6_AWBURST <= ap_const_lv2_0;
    m_axi_ifc6_AWCACHE <= ap_const_lv4_0;
    m_axi_ifc6_AWID <= ap_const_lv1_0;
    m_axi_ifc6_AWLEN <= ap_const_lv32_0;
    m_axi_ifc6_AWLOCK <= ap_const_lv2_0;
    m_axi_ifc6_AWPROT <= ap_const_lv3_0;
    m_axi_ifc6_AWQOS <= ap_const_lv4_0;
    m_axi_ifc6_AWREGION <= ap_const_lv4_0;
    m_axi_ifc6_AWSIZE <= ap_const_lv3_0;
    m_axi_ifc6_AWUSER <= ap_const_lv1_0;
    m_axi_ifc6_AWVALID <= ap_const_logic_0;
    m_axi_ifc6_BREADY <= ap_const_logic_0;

    m_axi_ifc6_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage8, icmp_ln153_reg_819, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((icmp_ln153_reg_819 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            m_axi_ifc6_RREADY <= ap_const_logic_1;
        else 
            m_axi_ifc6_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_ifc6_WDATA <= ap_const_lv128_lc_1;
    m_axi_ifc6_WID <= ap_const_lv1_0;
    m_axi_ifc6_WLAST <= ap_const_logic_0;
    m_axi_ifc6_WSTRB <= ap_const_lv16_0;
    m_axi_ifc6_WUSER <= ap_const_lv1_0;
    m_axi_ifc6_WVALID <= ap_const_logic_0;
    or_ln161_1_fu_576_p2 <= (sub_ln159_reg_828 or ap_const_lv11_2);
    or_ln161_2_fu_586_p2 <= (sub_ln159_reg_828 or ap_const_lv11_3);
    or_ln161_3_fu_600_p2 <= (sub_ln159_reg_828 or ap_const_lv11_4);
    or_ln161_4_fu_610_p2 <= (sub_ln159_reg_828 or ap_const_lv11_5);
    or_ln161_5_fu_624_p2 <= (sub_ln159_reg_828 or ap_const_lv11_6);
    or_ln161_6_fu_634_p2 <= (sub_ln159_reg_828 or ap_const_lv11_7);
    or_ln161_fu_562_p2 <= (sub_ln159_reg_828 or ap_const_lv11_1);
        sext_ln153_cast_fu_425_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln153),32));

        sext_ln155_1_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln155_fu_495_p2),64));

        sext_ln155_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln155_fu_485_p2),41));

        sext_ln156_fu_544_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln6_reg_823),64));

    shl_ln155_1_fu_461_p3 <= (ap_sig_allocacmp_i & ap_const_lv5_0);
    shl_ln4_fu_449_p3 <= (ap_sig_allocacmp_i & ap_const_lv7_0);
    shl_ln5_fu_525_p3 <= (trunc_ln159_fu_521_p1 & ap_const_lv3_0);
    sub_ln155_fu_485_p2 <= std_logic_vector(unsigned(zext_ln155_fu_457_p1) - unsigned(zext_ln155_1_fu_481_p1));
    sub_ln159_fu_533_p2 <= std_logic_vector(unsigned(trunc_ln5_fu_473_p3) - unsigned(shl_ln5_fu_525_p3));
    trunc_ln155_fu_469_p1 <= ap_sig_allocacmp_i(6 - 1 downto 0);
    trunc_ln159_fu_521_p1 <= ap_sig_allocacmp_i(8 - 1 downto 0);
    trunc_ln5_fu_473_p3 <= (trunc_ln155_fu_469_p1 & ap_const_lv5_0);
    trunc_ln674_3_fu_572_p1 <= m_axi_ifc6_RDATA(32 - 1 downto 0);
    trunc_ln674_4_fu_596_p1 <= m_axi_ifc6_RDATA(32 - 1 downto 0);
    trunc_ln674_5_fu_620_p1 <= m_axi_ifc6_RDATA(32 - 1 downto 0);
    trunc_ln674_6_fu_644_p1 <= m_axi_ifc6_RDATA(32 - 1 downto 0);
    trunc_ln674_7_fu_668_p1 <= m_axi_ifc6_RDATA(32 - 1 downto 0);
    trunc_ln674_fu_554_p1 <= m_axi_ifc6_RDATA(32 - 1 downto 0);
    zext_ln155_1_fu_481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln155_1_fu_461_p3),40));
    zext_ln155_fu_457_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln4_fu_449_p3),40));
    zext_ln161_10_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_3_fu_682_p2),64));
    zext_ln161_11_fu_697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_4_fu_692_p2),64));
    zext_ln161_12_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_5_fu_702_p2),64));
    zext_ln161_13_fu_717_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_6_fu_712_p2),64));
    zext_ln161_14_fu_727_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_7_fu_722_p2),64));
    zext_ln161_15_fu_737_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_8_fu_732_p2),64));
    zext_ln161_16_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_9_fu_742_p2),64));
    zext_ln161_17_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_10_fu_752_p2),64));
    zext_ln161_18_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_11_fu_762_p2),64));
    zext_ln161_19_fu_777_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_12_fu_772_p2),64));
    zext_ln161_1_fu_581_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln161_1_fu_576_p2),64));
    zext_ln161_20_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_13_fu_782_p2),64));
    zext_ln161_21_fu_797_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_14_fu_792_p2),64));
    zext_ln161_22_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_15_fu_802_p2),64));
    zext_ln161_2_fu_591_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln161_2_fu_586_p2),64));
    zext_ln161_3_fu_605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln161_3_fu_600_p2),64));
    zext_ln161_4_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln161_4_fu_610_p2),64));
    zext_ln161_5_fu_629_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln161_5_fu_624_p2),64));
    zext_ln161_6_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln161_6_fu_634_p2),64));
    zext_ln161_7_fu_653_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_fu_648_p2),64));
    zext_ln161_8_fu_663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_1_fu_658_p2),64));
    zext_ln161_9_fu_677_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_2_fu_672_p2),64));
    zext_ln161_fu_567_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln161_fu_562_p2),64));
    zext_ln674_fu_558_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln159_reg_828),64));
end behav;
